{
  "address": "0x7cb704F7CC1A5A526d90Aef263ECd96C35F00332",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "AssetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AssetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "ControllerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FromStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "mintMaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "memberToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "mintMaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oneTokenOracle",
          "type": "address"
        }
      ],
      "name": "MintMasterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oneTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "memberTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralTokens",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "NewFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "NewMintingFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "NewRedemptionFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StrategyAllowanceDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StrategyAllowanceIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        }
      ],
      "name": "StrategySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ToStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MODULE_TYPE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "addAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "assetAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "assetCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "inVault",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inStrategy",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller_",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mintMaster_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oneTokenOracle_",
          "type": "address"
        }
      ],
      "name": "changeMintMaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "closeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "collateralTokenAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseStrategyAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "executeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fromStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getHoldings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "strategyBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        }
      ],
      "name": "getMintingRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxOrderVolume",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseStrategyAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "oneTokenOracle_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "controller_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mintMaster_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "memberToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateral_",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isCollateral",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isOtherToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liabilities",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "oneTokens",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oneTokenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "otherTokenAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redemptionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setMintingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setRedemptionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "toStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        }
      ],
      "name": "updateMintingRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxOrderVolume",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc7c2d1f2fa5619a92396330b9a3f14578a1bec15a7bac94e52f7306d45e9708c",
  "receipt": {
    "to": null,
    "from": "0x451Efff92a3a1471b7af9DDc1369D9D157E6475A",
    "contractAddress": "0x7cb704F7CC1A5A526d90Aef263ECd96C35F00332",
    "transactionIndex": 0,
    "gasUsed": "5231421",
    "logsBloom": "0x00000000000000000000000000000000000000400000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000001800000000000000000000000000000000400000000000000000000000000000000000000000000000020000000000000000000000000000000000000000001000000000000000000000000004000400000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x599ff16bd5e77703a4fe5f9d8592d071a4ed9c6de40c7bb5e691a0b013c54302",
    "transactionHash": "0xc7c2d1f2fa5619a92396330b9a3f14578a1bec15a7bac94e52f7306d45e9708c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25062773,
        "transactionHash": "0xc7c2d1f2fa5619a92396330b9a3f14578a1bec15a7bac94e52f7306d45e9708c",
        "address": "0x7cb704F7CC1A5A526d90Aef263ECd96C35F00332",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x599ff16bd5e77703a4fe5f9d8592d071a4ed9c6de40c7bb5e691a0b013c54302"
      }
    ],
    "blockNumber": 25062773,
    "cumulativeGasUsed": "5231421",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "149543c6066abfe7655600414f329617",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"AssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AssetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"ControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FromStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mintMaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"memberToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mintMaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oneTokenOracle\",\"type\":\"address\"}],\"name\":\"MintMasterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oneTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"memberTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralTokens\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"NewFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NewMintingFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NewRedemptionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StrategyAllowanceDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StrategyAllowanceIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"StrategySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ToStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_TYPE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assetAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"inVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inStrategy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintMaster_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oneTokenOracle_\",\"type\":\"address\"}],\"name\":\"changeMintMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"closeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"collateralTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseStrategyAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"executeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"getMintingRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOrderVolume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseStrategyAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oneTokenOracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintMaster_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"memberToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isOtherToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liabilities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memberToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"oneTokens\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"otherTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redemptionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setMintingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setRedemptionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"}],\"name\":\"updateMintingRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOrderVolume\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAsset(address,address)\":{\"details\":\"asset inventory helps evaluate local holdings and enables strategy assignment\",\"params\":{\"oracle\":\"oracle to use for usd valuation. Must be registered in the factory and associated with token.\",\"token\":\"ERC20 token\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"assetAtIndex(uint256)\":{\"params\":{\"index\":\"row to inspect\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balances(address)\":{\"params\":{\"token\":\"to inspect\"}},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"changeController(address)\":{\"details\":\"controllers support the periodic() function which should be called occasionally to send gas to the controller\",\"params\":{\"controller_\":\"a deployed controller contract supporting the minimum interface and registered with the factory\"}},\"changeMintMaster(address,address)\":{\"details\":\"controllers support the periodic() function which should be called occasionally to send gas to the controller\",\"params\":{\"mintMaster_\":\"the new mintMaster implementation\",\"oneTokenOracle_\":\"intialize the mintMaster with this oracle. Must be registed in the factory.\"}},\"closeStrategy(address)\":{\"details\":\"strategy remains assigned the asset with allowance set to 0.\",\"params\":{\"token\":\"ERC20 asset with a strategy to close. \"}},\"collateralTokenAtIndex(uint256)\":{\"params\":{\"index\":\"row to inspect\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"decreaseStrategyAllowance(address,uint256)\":{\"details\":\"adjusts the remaining allowance for automated transfers executed by the controller\",\"params\":{\"amount\":\"allowance decrease\",\"token\":\"ERC20 asset\"}},\"executeStrategy(address)\":{\"details\":\"normally used by the controller\",\"params\":{\"token\":\"the token strategy to execute\"}},\"fromStrategy(address,address,uint256)\":{\"params\":{\"amount\":\"amount to draw from the strategy\",\"strategy\":\"receiving address must match the assigned strategy\",\"token\":\"ERC20 asset\"}},\"getHoldings(address)\":{\"details\":\"not restricted to registered assets\",\"params\":{\"strategyBalance\":\"tokens in assigned strategy\",\"token\":\"ERC20 asset to report\",\"vaultBalance\":\"tokens held in this vault\"}},\"getMintingRatio(address)\":{\"params\":{\"collateralToken\":\"token to use for ratio calculation\",\"maxOrderVolume\":\"maximum order size\",\"ratio\":\"minting ratio\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"increaseStrategyAllowance(address,uint256)\":{\"details\":\"adjusts the remaining allowance for automated transfers executed by the controller\",\"params\":{\"amount\":\"allowance increase\",\"token\":\"ERC20 asset\"}},\"init(string,string,address,address,address,address,address)\":{\"details\":\"constructors are ineffective for proxy deployments\",\"params\":{\"collateral_\":\"a deployed, registered (in the factory) usd-pegged ERC20 token supporting the minimum interface\",\"controller_\":\"a deployed, compatible controller supporting the minimum interface\",\"memberToken_\":\"a deployed, registered (in the factory) ERC20 token supporting the minimum interface\",\"mintMaster_\":\"a deployed, compatible mintMaster supporting the minimum interface\",\"name_\":\"ERC20 name value\",\"oneTokenOracle_\":\"a deployed, compatible oracle supporting the minimum interface\",\"symbol_\":\"ERC20 symbol value\"}},\"isAsset(address)\":{\"params\":{\"token\":\"token to inspect\"}},\"isCollateral(address)\":{\"params\":{\"token\":\"token to inspect\"}},\"isOtherToken(address)\":{\"params\":{\"token\":\"token to inspect\"}},\"mint(address,uint256)\":{\"details\":\"takes the lessor of memberTokens allowance or the maximum allowed by the minting ratio and the balance in collateral\",\"params\":{\"collateralToken\":\"a registered ERC20 collateral token contract\",\"oneTokens\":\"exact number of oneTokens to receive\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"otherTokenAtIndex(uint256)\":{\"params\":{\"index\":\"row to inspect\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(address,uint256)\":{\"details\":\"first grant allowances, then redeem. Consider infinite collateral allowance and a sufficient memberToken allowance. Updates ratio and triggers controller.\",\"params\":{\"amount\":\"oneTokens to redeem equals collateral tokens to receive\",\"collateral\":\"form of ERC20 stable token to receive\"}},\"removeAsset(address)\":{\"details\":\"does not destroy holdings, but holdings are not accounted for\",\"params\":{\"token\":\"ERC20 token\"}},\"removeStrategy(address)\":{\"details\":\"closes the strategy and requires that all funds in the strategy are returned to the vault\",\"params\":{\"token\":\"the token strategy to remove. There are 0-1 strategys per asset\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFactory(address)\":{\"details\":\"accomodates factory upgrades\",\"params\":{\"newFactory\":\"address of the new factory\"}},\"setMintingFee(uint256)\":{\"params\":{\"fee\":\"fee, 18 decimals, e.g. 2% = 20000000000000000\"}},\"setRedemptionFee(uint256)\":{\"params\":{\"fee\":\"fee, 18 decimals, e.g. 2% = 20000000000000000\"}},\"setStrategy(address,address,uint256)\":{\"details\":\"strategy must be registered with the factory\",\"params\":{\"allowance\":\"ERC20 allowance sets a limit on funds to transfer to the strategy\",\"strategy\":\"deployed strategy contract that is registered with the factor\",\"token\":\"ERC20 asset\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"toStrategy(address,address,uint256)\":{\"details\":\"works independently of strategy allowance\",\"params\":{\"amount\":\"amount to send\",\"strategy\":\"receiving address must match the assigned strategy\",\"token\":\"ERC20 asset\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMintingRatio(address)\":{\"details\":\"acceptable for gas-paying external actors to call this function\",\"params\":{\"collateralToken\":\"token to use for ratio calculation\",\"maxOrderVolume\":\"maximum order size\",\"ratio\":\"minting ratio\"}}},\"stateVariables\":{\"liabilities\":{\"details\":\"token => liability\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAsset(address,address)\":{\"notice\":\"governance can add an asset\"},\"assetAtIndex(uint256)\":{\"notice\":\"returns the ERC20 contract address at the index\"},\"assetCount()\":{\"notice\":\"returns the sum of collateral and non-collateral ERC20 token contracts\"},\"balances(address)\":{\"notice\":\"returns the local balance and funds held in the assigned strategy, if any\"},\"changeController(address)\":{\"notice\":\"governance can appoint a new controller with distinct internal logic\"},\"changeMintMaster(address,address)\":{\"notice\":\"change the mintMaster\"},\"closeStrategy(address)\":{\"notice\":\"governance can close a strategy\"},\"collateralTokenAtIndex(uint256)\":{\"notice\":\"returns the address of an ERC20 token collateral contract at the index\"},\"collateralTokenCount()\":{\"notice\":\"pointreturns the number of acceptable collateral token contracts\"},\"decreaseStrategyAllowance(address,uint256)\":{\"notice\":\"governance can manage an allowance for a token strategy\"},\"executeStrategy(address)\":{\"notice\":\"governance can execute a strategy to trigger innner logic within the strategy\"},\"fromStrategy(address,address,uint256)\":{\"notice\":\"governance can transfer assets from the strategy to this vault\"},\"getHoldings(address)\":{\"notice\":\"read the vault balance and strategy balance of a given token\"},\"getMintingRatio(address)\":{\"notice\":\"read the minting ratio and maximum order volume prescribed by the mintMaster\"},\"increaseStrategyAllowance(address,uint256)\":{\"notice\":\"governance can manage an allowance for a token strategy\"},\"init(string,string,address,address,address,address,address)\":{\"notice\":\"initializes a proxied instance of the implementation\"},\"isAsset(address)\":{\"notice\":\"returns true if the token contract is a registered asset of either type\"},\"isCollateral(address)\":{\"notice\":\"returns true if the token contract is recognized collateral\"},\"isOtherToken(address)\":{\"notice\":\"returns true if the token contract is registered and is not collateral\"},\"liabilities(address)\":{\"notice\":\"sum of userBalances for each collateral token are not counted in treasury valuations\"},\"mint(address,uint256)\":{\"notice\":\"convert member tokens and collateral tokens into oneTokens. requires sufficient allowances for both tokens\"},\"otherTokenAtIndex(uint256)\":{\"notice\":\"returns the non-collateral token contract at the index\"},\"otherTokenCount()\":{\"notice\":\"returns the count of registered ERC20 asset contracts that not collateral\"},\"redeem(address,uint256)\":{\"notice\":\"redeem oneTokens for collateral tokens at 1:1 - applies fee %\"},\"removeAsset(address)\":{\"notice\":\"governance can remove an asset from treasury and collateral value accounting\"},\"removeStrategy(address)\":{\"notice\":\"governance can remove a strategy\"},\"setFactory(address)\":{\"notice\":\"adopt a new factory\"},\"setMintingFee(uint256)\":{\"notice\":\"governance sets the adjustable fee\"},\"setRedemptionFee(uint256)\":{\"notice\":\"governance sets the adjustable fee\"},\"setStrategy(address,address,uint256)\":{\"notice\":\"governance optionally assigns a strategy to an asset and sets a strategy allowance\"},\"toStrategy(address,address,uint256)\":{\"notice\":\"governance can transfer assets from the vault to a strategy\"},\"updateMintingRatio(address)\":{\"notice\":\"adjust the minting ratio\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/version/v1/OneTokenV1.sol\":\"OneTokenV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/_openzeppelin/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"contracts/_openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/_openzeppelin/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/common/ICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../oz_modified/ICHIOwnable.sol\\\";\\nimport \\\"../oz_modified/ICHIInitializable.sol\\\";\\nimport \\\"../interface/IERC20Extended.sol\\\";\\nimport \\\"../interface/IICHICommon.sol\\\";\\n\\ncontract ICHICommon is IICHICommon, ICHIOwnable, ICHIInitializable {\\n\\n    uint256 constant PRECISION = 10 ** 18;\\n    uint256 constant INFINITE = uint256(0-1);\\n    address constant NULL_ADDRESS = address(0);\\n    \\n    // @dev internal fingerprints help prevent deployment-time governance errors\\n\\n    bytes32 constant COMPONENT_CONTROLLER = keccak256(abi.encodePacked(\\\"ICHI V1 Controller\\\"));\\n    bytes32 constant COMPONENT_VERSION = keccak256(abi.encodePacked(\\\"ICHI V1 OneToken Implementation\\\"));\\n    bytes32 constant COMPONENT_STRATEGY = keccak256(abi.encodePacked(\\\"ICHI V1 Strategy Implementation\\\"));\\n    bytes32 constant COMPONENT_MINTMASTER = keccak256(abi.encodePacked(\\\"ICHI V1 MintMaster Implementation\\\"));\\n    bytes32 constant COMPONENT_ORACLE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    bytes32 constant COMPONENT_VOTERROLL = keccak256(abi.encodePacked(\\\"ICHI V1 VoterRoll Implementation\\\"));\\n    bytes32 constant COMPONENT_FACTORY = keccak256(abi.encodePacked(\\\"ICHI OneToken Factory\\\"));\\n}\\n\",\"keccak256\":\"0x42378732873814c18db826c3ba6ca60976f1669fa646d82563b1482261583c83\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\ninterface IController {\\n    \\n    function oneTokenFactory() external returns(address);\\n    function description() external returns(string memory);\\n    function init() external;\\n    function periodic() external;\\n    function MODULE_TYPE() external view returns(bytes32);    \\n}\\n\",\"keccak256\":\"0x84e8a9d31344ac4a440361356e0dce2d93cf7c4cfd364da6896fa5d76a4a9a7e\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IERC20Extended.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Extended is IERC20 {\\n    \\n    function decimals() external view returns(uint8);\\n    function symbol() external view returns(string memory);\\n    function name() external view returns(string memory);\\n}\\n\",\"keccak256\":\"0x2ca69f362fa17acf5a0871f09ed8c7937a7ab4290d5d107d36d15f21de4b90cf\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHIOwnable.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IICHICommon is IICHIOwnable, InterfaceCommon {}\\n\",\"keccak256\":\"0xe6cd96a82817180d3b07502d5f9030cb538599311ca618a28fd9abc4ec9f12d3\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\ninterface IICHIOwnable {\\n    \\n    function renounceOwnership() external;\\n    function transferOwnership(address newOwner) external;\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0106ebef69259a8f6b75ed0bd8cafab30dec9b5845887bb46941f37c93b93018\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IMintMaster.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IMintMaster is IModule {\\n    \\n    function oneTokenOracles(address) external view returns(address);\\n    function init(address oneTokenOracle) external;\\n    function updateMintingRatio(address collateralToken) external returns(uint256 ratio, uint256 maxOrderVolume);\\n    function getMintingRatio(address collateral) external view returns(uint256 ratio, uint256 maxOrderVolume);\\n    function getMintingRatio2(address oneToken, address collateralToken) external view returns(uint256 ratio, uint256 maxOrderVolume);  \\n    function getMintingRatio4(address oneToken, address oneTokenOracle, address collateralToken, address collateralOracle) external view returns(uint256 ratio, uint256 maxOrderVolume); \\n}\\n\",\"keccak256\":\"0x5fc6038b4965ced70c8997a65ea9a3571e8a2c596ef86093ab6f2650a7fef9e7\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IModule.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IModule is IICHICommon { \\n       \\n    function oneTokenFactory() external view returns(address);\\n    function updateDescription(string memory description) external;\\n    function moduleDescription() external view returns(string memory);\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function moduleType() external view returns(ModuleType);\\n}\\n\",\"keccak256\":\"0xe90ce2dc34f907536849d364de54cdddb9b09cb958020972121624d1d6f519e0\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IOneTokenFactory is InterfaceCommon {\\n\\n    function oneTokenProxyAdmins(address) external returns(address);\\n    function deployOneTokenProxy(\\n        string memory name,\\n        string memory symbol,\\n        address governance, \\n        address version,\\n        address controller,\\n        address mintMaster,              \\n        address memberToken, \\n        address collateral,\\n        address oneTokenOracle\\n    ) \\n        external \\n        returns(address newOneTokenProxy, address proxyAdmin);\\n\\n    function admitModule(address module, ModuleType moduleType, string memory name, string memory url) external;\\n    function updateModule(address module, string memory name, string memory url) external;\\n    function removeModule(address module) external;\\n\\n    function admitForeignToken(address foreignToken, bool collateral, address oracle) external;\\n    function updateForeignToken(address foreignToken, bool collateral) external;\\n    function removeForeignToken(address foreignToken) external;\\n\\n    function assignOracle(address foreignToken, address oracle) external;\\n    function removeOracle(address foreignToken, address oracle) external; \\n\\n    /**\\n     * View functions\\n     */\\n    \\n    function MODULE_TYPE() external view returns(bytes32);\\n\\n    function oneTokenCount() external view returns(uint256);\\n    function oneTokenAtIndex(uint256 index) external view returns(address);\\n    function isOneToken(address oneToken) external view returns(bool);\\n \\n    // modules\\n\\n    function moduleCount() external view returns(uint256);\\n    function moduleAtIndex(uint256 index) external view returns(address module);\\n    function isModule(address module) external view returns(bool);\\n    function isValidModuleType(address module, ModuleType moduleType) external view returns(bool);\\n\\n    // foreign tokens\\n\\n    function foreignTokenCount() external view returns(uint256);\\n    function foreignTokenAtIndex(uint256 index) external view returns(address);\\n    function foreignTokenInfo(address foreignToken) external view returns(bool collateral, uint256 oracleCount);\\n    function foreignTokenOracleCount(address foreignToken) external view returns(uint256);\\n    function foreignTokenOracleAtIndex(address foreignToken, uint256 index) external view returns(address);\\n    function isOracle(address foreignToken, address oracle) external view returns(bool);\\n    function isForeignToken(address foreignToken) external view returns(bool);\\n    function isCollateral(address foreignToken) external view returns(bool);\\n}\",\"keccak256\":\"0x058f27f1dc56c298d2f8ffa88d1fb67dc7c421327089bfb3a77ef9ecf943c6e4\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenV1.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./IOneTokenV1Base.sol\\\";\\n\\ninterface IOneTokenV1 is IOneTokenV1Base {\\n\\n    function mintingFee() external view returns(uint);\\n    function redemptionFee() external view returns(uint);\\n    function mint(address collateral, uint oneTokens) external;\\n    function redeem(address collateral, uint amount) external;\\n    function setMintingFee(uint fee) external;\\n    function setRedemptionFee(uint fee) external;\\n    function updateMintingRatio(address collateralToken) external returns(uint ratio, uint maxOrderVolume);\\n    function getMintingRatio(address collateralToken) external view returns(uint ratio, uint maxOrderVolume);\\n    function getHoldings(address token) external view returns(uint vaultBalance, uint strategyBalance);\\n}\\n\",\"keccak256\":\"0x24b289887ce053aa9fdf45679b240111b79ea929df73fac8e90880d7136d9866\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenV1Base.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./IERC20Extended.sol\\\";\\n\\ninterface IOneTokenV1Base is IICHICommon, IERC20 {\\n    \\n    function init(string memory name_, string memory symbol_, address oneTokenOracle_, address controller_,  address mintMaster_, address memberToken_, address collateral_) external;\\n    function changeController(address controller_) external;\\n    function changeMintMaster(address mintMaster_, address oneTokenOracle) external;\\n    function addAsset(address token, address oracle) external;\\n    function removeAsset(address token) external;\\n    function setStrategy(address token, address strategy, uint256 allowance) external;\\n    function executeStrategy(address token) external;\\n    function removeStrategy(address token) external;\\n    function closeStrategy(address token) external;\\n    function increaseStrategyAllowance(address token, uint256 amount) external;\\n    function decreaseStrategyAllowance(address token, uint256 amount) external;\\n    function setFactory(address newFactory) external;\\n\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function oneTokenFactory() external view returns(address);\\n    function controller() external view returns(address);\\n    function mintMaster() external view returns(address);\\n    function memberToken() external view returns(address);\\n    function assets(address) external view returns(address, address);\\n    function balances(address token) external view returns(uint256 inVault, uint256 inStrategy);\\n    function collateralTokenCount() external view returns(uint256);\\n    function collateralTokenAtIndex(uint256 index) external view returns(address);\\n    function isCollateral(address token) external view returns(bool);\\n    function otherTokenCount() external view  returns(uint256);\\n    function otherTokenAtIndex(uint256 index) external view returns(address); \\n    function isOtherToken(address token) external view returns(bool);\\n    function assetCount() external view returns(uint256);\\n    function assetAtIndex(uint256 index) external view returns(address); \\n    function isAsset(address token) external view returns(bool);\\n}\\n\",\"keccak256\":\"0x1b11cd3a73710c7b8fd77f7cd1e149eea49e8c804305bd77bbebd6deb0017f22\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IOracle is IModule {\\n\\n    function init(address baseToken) external;\\n    function update(address token) external;\\n    function indexToken() external view returns(address);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */\\n    function read(address token, uint amountTokens) external view returns(uint amountUsd, uint volatility);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens token quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */    \\n    function amountRequired(address token, uint amountUsd) external view returns(uint amountTokens, uint volatility);\\n\\n    /**\\n     @notice converts normalized precision-18 amounts to token native precision amounts, truncates low-order values\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */    \\n    function normalizedToTokens(address token, uint amountNormal) external view returns(uint amountTokens);\\n\\n    /**\\n     @notice converts token native precision amounts to normalized precision-18 amounts\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */  \\n    function tokensToNormalized(address token, uint amountTokens) external view returns(uint amountNormal);\\n}\\n\",\"keccak256\":\"0x5c7b98506f4108eee15448df89857582197b474e2b04cd397c4d2eed7c1a92ff\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IStrategy is IModule {\\n    \\n    function init() external;\\n    function execute() external;\\n    function setAllowance(address token, uint256 amount) external;\\n    function toVault(address token, uint256 amount) external;\\n    function fromVault(address token, uint256 amount) external;\\n    function closeAllPositions() external returns(bool);\\n    function closePositions(address token) external returns(bool success);\\n    function oneToken() external view returns(address);\\n}\\n\",\"keccak256\":\"0x898fbdbcc82758409a2df303bebbfaba5c4aafd8e8bbda163e3200b0b8eab251\",\"license\":\"BUSL-1.1\"},\"contracts/interface/InterfaceCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface InterfaceCommon {\\n\\n    enum ModuleType { Version, Controller, Strategy, MintMaster, Oracle }\\n\\n}\\n\",\"keccak256\":\"0x818fc764b7da096a438fc9322588d4fbe0fc655d952033a3d2b5d86a863570a2\",\"license\":\"BUSL-1.1\"},\"contracts/lib/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\n/**\\n * @notice Key sets with enumeration and delete. Uses mappings for random access\\n * and existence checks and dynamic arrays for enumeration. Key uniqueness is enforced. \\n * @dev Sets are unordered. Delete operations reorder keys. All operations have a \\n * fixed gas cost at any scale, O(1). \\n */\\n\\nlibrary AddressSet {\\n    \\n    struct Set {\\n        mapping(address => uint256) keyPointers;\\n        address[] keyList;\\n    }\\n\\n    /**\\n     @notice insert a key. \\n     @dev duplicate keys are not permitted.\\n     @param self storage pointer to a Set. \\n     @param key value to insert.\\n     */    \\n    function insert(Set storage self, address key, string memory errorMessage) internal {\\n        require(!exists(self, key), errorMessage);\\n        self.keyList.push(key);\\n        self.keyPointers[key] = self.keyList.length-1;\\n    }\\n\\n    /**\\n     @notice remove a key.\\n     @dev key to remove must exist. \\n     @param self storage pointer to a Set.\\n     @param key value to remove.\\n     */    \\n    function remove(Set storage self, address key, string memory errorMessage) internal {\\n        require(exists(self, key), errorMessage);\\n        uint256 last = count(self) - 1;\\n        uint256 rowToReplace = self.keyPointers[key];\\n        address keyToMove = self.keyList[last];\\n        self.keyPointers[keyToMove] = rowToReplace;\\n        self.keyList[rowToReplace] = keyToMove;\\n        delete self.keyPointers[key];\\n        self.keyList.pop();\\n    }\\n\\n    /**\\n     @notice count the keys.\\n     @param self storage pointer to a Set. \\n     */       \\n    function count(Set storage self) internal view returns(uint256) {\\n        return(self.keyList.length);\\n    }\\n\\n    /**\\n     @notice check if a key is in the Set.\\n     @param self storage pointer to a Set.\\n     @param key value to check. Version\\n     @return bool true: Set member, false: not a Set member.\\n     */  \\n    function exists(Set storage self, address key) internal view returns(bool) {\\n        if(self.keyList.length == 0) return false;\\n        return self.keyList[self.keyPointers[key]] == key;\\n    }\\n\\n    /**\\n     @notice fetch a key by row (enumerate).\\n     @param self storage pointer to a Set.\\n     @param index row to enumerate. Must be < count() - 1.\\n     */      \\n    function keyAtIndex(Set storage self, uint256 index) internal view returns(address) {\\n        return self.keyList[index];\\n    }\\n}\\n\",\"keccak256\":\"0x9cfbadb37056f452320ad427c62ffdb474d041a3ae930bbc8ad86daca906f548\",\"license\":\"BUSL-1.1\"},\"contracts/oz_modified/ICHIERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/// @dev removed constructor visibility and relocated the file\\n/// @dev added initERC20 for proxied deployments\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\nimport \\\"../_openzeppelin/math/SafeMath.sol\\\";\\nimport \\\"./ICHIInitializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ICHIERC20 is IERC20, Context, ICHIInitializable {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n\\n    /**\\n     * @dev this constructor is ineffective in proxy deployment. Use init().\\n     */\\n\\n    /*\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n    */\\n\\n    function initERC20(string memory name_, string memory symbol_) internal initializer {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ICHIERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ICHIERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ICHIERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ICHIERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ICHIERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ICHIERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ICHIERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ICHIERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ICHIERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ICHIERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address /* from */, address /* to */, uint256 /* amount */) internal virtual { }\\n}\\n\",\"keccak256\":\"0x14bf41cb42ac1887d7f3e164dfb0bc45e425d5ce6632569c762b58305b6c5375\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"./ICHIERC20.sol\\\";\\n\\n/**\\n * @dev Uses the modified ERC20 with Initializer.\\n */\\ncontract ICHIERC20Burnable is ICHIERC20 {\\n    \\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ICHIERC20Burnable: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x961333f2d77c378343e7fb5380a8b34d5fa924a6f36bda031274f22044d39204\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/utils/Address.sol\\\";\\n\\ncontract ICHIInitializable {\\n\\n    bool private _initialized;\\n    bool private _initializing;\\n\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"ICHIInitializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    modifier initialized {\\n        require(_initialized, \\\"ICHIInitializable: contract is not initialized\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x9d4cb3bf21309bc5621f730a885c9c22e1fc6073f9fcf3857c45c4d9f0ea82bf\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @dev Constructor visibility has been removed from the original.\\n * _transferOwnership() has been added to support proxied deployments.\\n * Abstract tag removed from contract block.\\n * Added interface inheritance and override modifiers.\\n * Changed contract identifier in require error messages.\\n */\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"../interface/IICHIOwnable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract ICHIOwnable is IICHIOwnable, Context {\\n    \\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n     \\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"ICHIOwnable: caller is not the owner\\\");\\n        _;\\n    }    \\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     * Ineffective for proxied deployed. Use initOwnable.\\n     */\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     @dev initialize proxied deployment\\n     */\\n    function initOwnable() internal {\\n        require(owner() == address(0), \\\"ICHIOwnable: already initialized\\\");\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual override returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual override onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev be sure to call this in the initialization stage of proxied deployment or owner will not be set\\n     */\\n\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"ICHIOwnable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x552664765e88fb3e7949f3ff17f264968e9fca3775e3e7f241ce965129af8658\",\"license\":\"MIT\"},\"contracts/version/v1/OneTokenV1.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../../interface/IOneTokenV1.sol\\\";\\nimport \\\"../../_openzeppelin/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"./OneTokenV1Base.sol\\\";\\n\\ncontract OneTokenV1 is IOneTokenV1, OneTokenV1Base {\\n\\n    using AddressSet for AddressSet.Set;\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    uint256 public override mintingFee; // defaults to 0%\\n    uint256 public override redemptionFee; // defaults to 0%\\n\\n    /**\\n     @notice sum of userBalances for each collateral token are not counted in treasury valuations\\n     @dev token => liability\\n     */\\n    mapping(address => uint256) public liabilities;\\n  \\n    event Minted(address indexed sender, address indexed collateral, uint256 oneTokens, uint256 memberTokens, uint256 collateralTokens);\\n    event Redeemed(address indexed sender, address indexed collateral, uint256 amount);\\n    event NewMintingFee(address sender, uint256 fee);\\n    event NewRedemptionFee(address sender, uint256 fee);\\n    \\n    /// @dev there is no constructor for proxy deployment. Use init()\\n\\n    /**\\n     @notice convert member tokens and collateral tokens into oneTokens. requires sufficient allowances for both tokens\\n     @dev takes the lessor of memberTokens allowance or the maximum allowed by the minting ratio and the balance in collateral\\n     @param collateralToken a registered ERC20 collateral token contract\\n     @param oneTokens exact number of oneTokens to receive\\n     */\\n    function mint(address collateralToken, uint256 oneTokens) external initialized override {\\n        require(collateralTokenSet.exists(collateralToken), \\\"OTV1: offer a collateral token\\\");\\n        require(oneTokens > 0, \\\"OTV1: order must be > 0\\\");\\n        \\n        // update collateral and memberToken oracles\\n        IOracle(assets[collateralToken].oracle).update(collateralToken);\\n        IOracle(assets[memberToken].oracle).update(memberToken);\\n        \\n        // update oneToken oracle and evaluate\\n        (uint256 mintingRatio, uint256 maxOrderVolume) = updateMintingRatio(collateralToken);\\n\\n        // future mintmasters may return a maximum order volume to tamp down on possible manipulation\\n        require(oneTokens <= maxOrderVolume, \\\"OTV1: order exceeds limit\\\");\\n\\n        // compute the member token value and collateral value requirement\\n        uint256 collateralUSDValue = oneTokens.mul(mintingRatio).div(PRECISION);\\n        uint256 memberTokensUSDValue = oneTokens.sub(collateralUSDValue);\\n        collateralUSDValue = collateralUSDValue.add(oneTokens.mul(mintingFee).div(PRECISION));\\n\\n        // compute the member tokens required\\n        (uint256 memberTokensReq, /* volatility */) = IOracle(assets[memberToken].oracle).amountRequired(memberToken, memberTokensUSDValue);\\n\\n        // check the memberToken allowance - the maximum we can draw from the user\\n        uint256 memberTokenAllowance = IERC20(memberToken).allowance(msg.sender, address(this));\\n\\n        // increase collateral required if the memberToken allowance is too low\\n        if(memberTokensReq > memberTokenAllowance) {\\n            uint256 memberTokenRate = memberTokensUSDValue.mul(PRECISION).div(memberTokensReq);\\n            memberTokensReq = memberTokenAllowance;\\n            // re-evaluate the memberToken value and collateral value required using the oracle rate already obtained\\n            memberTokensUSDValue = memberTokenRate.mul(memberTokensReq).div(PRECISION);\\n            collateralUSDValue = oneTokens.sub(memberTokensUSDValue);\\n            collateralUSDValue = collateralUSDValue.add(oneTokens.mul(mintingFee).div(PRECISION));\\n        }\\n\\n        require(IERC20(memberToken).balanceOf(msg.sender) >= memberTokensReq, \\\"OTV1: NSF: member token\\\");\\n\\n        // compute actual collateral tokens required in case of imperfect collateral pegs\\n        // a pegged oracle can be used to reduce the cost of this step but it will not account for price differences\\n        (uint256 collateralTokensReq, /* volatility */) = IOracle(assets[collateralToken].oracle).amountRequired(collateralToken, collateralUSDValue);\\n\\n        require(IERC20(collateralToken).balanceOf(msg.sender) >= collateralTokensReq, \\\"OTV1: NSF: collateral token\\\");\\n        require(collateralTokensReq > 0, \\\"OTV1: order too small\\\");\\n\\n        // transfer tokens in\\n        IERC20(memberToken).safeTransferFrom(msg.sender, address(this), memberTokensReq);\\n        IERC20(collateralToken).safeTransferFrom(msg.sender, address(this), collateralTokensReq);\\n        \\n        // mint oneTokens\\n        _mint(msg.sender, oneTokens);\\n\\n        emit Minted(msg.sender, collateralToken, oneTokens, memberTokensReq, collateralTokensReq);\\n    }\\n\\n    /**\\n     @notice redeem oneTokens for collateral tokens at 1:1 - applies fee %\\n     @dev first grant allowances, then redeem. Consider infinite collateral allowance and a sufficient memberToken allowance. Updates ratio and triggers controller.\\n     @param collateral form of ERC20 stable token to receive\\n     @param amount oneTokens to redeem equals collateral tokens to receive\\n     */\\n    function redeem(address collateral, uint256 amount) external override {\\n        require(isCollateral(collateral), \\\"OTV1: unknown collateral\\\");\\n        require(amount > 0, \\\"OTV1: amount must be > 0\\\");\\n        require(balanceOf(msg.sender) >= amount, \\\"OTV1: NSF: oneToken\\\");\\n        IOracle co = IOracle(assets[collateral].oracle);\\n        co.update(collateral);\\n\\n        // implied transfer approval and allowance\\n        _burn(msg.sender, amount);\\n\\n        uint256 netUsd = amount.sub(amount.mul(redemptionFee).div(PRECISION));\\n        (uint256 netTokens, /* uint256 volatility */)  = co.amountRequired(collateral, netUsd);\\n\\n        IERC20(collateral).safeTransfer(msg.sender, netTokens);\\n        emit Redeemed(msg.sender, collateral, amount);\\n        \\n        // updates the oneToken oracle price history\\n        updateMintingRatio(collateral);\\n\\n        // periodic automated processes\\n        IController(controller).periodic();\\n    }\\n\\n    /**\\n     @notice governance sets the adjustable fee\\n     @param fee fee, 18 decimals, e.g. 2% = 20000000000000000\\n     */\\n    function setMintingFee(uint256 fee) external onlyOwner override {\\n        require(fee <= PRECISION, \\\"OTV1: fee must be <= 100%\\\");\\n        mintingFee = fee;\\n        emit NewMintingFee(msg.sender, fee);\\n    }\\n\\n    /**\\n     @notice governance sets the adjustable fee\\n     @param fee fee, 18 decimals, e.g. 2% = 20000000000000000\\n     */\\n    function setRedemptionFee(uint256 fee) external onlyOwner override {\\n        require(fee <= PRECISION, \\\"OTV1: fee must be <= 100%\\\");\\n        redemptionFee = fee;\\n        emit NewRedemptionFee(msg.sender, fee);\\n    }    \\n\\n    /**\\n     @notice adjust the minting ratio\\n     @dev acceptable for gas-paying external actors to call this function\\n     @param collateralToken token to use for ratio calculation\\n     @param ratio minting ratio\\n     @param maxOrderVolume maximum order size\\n     */\\n    function updateMintingRatio(address collateralToken) public override returns(uint256 ratio, uint256 maxOrderVolume) {\\n        return IMintMaster(mintMaster).updateMintingRatio(collateralToken);\\n    }\\n\\n    /**\\n     @notice read the minting ratio and maximum order volume prescribed by the mintMaster\\n     @param collateralToken token to use for ratio calculation\\n     @param ratio minting ratio\\n     @param maxOrderVolume maximum order size\\n     */\\n    function getMintingRatio(address collateralToken) external view override returns(uint256 ratio, uint256 maxOrderVolume) {\\n        return IMintMaster(mintMaster).getMintingRatio(collateralToken);\\n    }\\n\\n    /**\\n     @notice read the vault balance and strategy balance of a given token\\n     @dev not restricted to registered assets\\n     @param token ERC20 asset to report\\n     @param vaultBalance tokens held in this vault\\n     @param strategyBalance tokens in assigned strategy\\n     */\\n    function getHoldings(address token) external view override returns(uint256 vaultBalance, uint256 strategyBalance) {   \\n        IERC20 t = IERC20(token);\\n        vaultBalance = t.balanceOf(address(this));\\n        Asset storage a = assets[token];\\n        if(a.strategy != NULL_ADDRESS) strategyBalance = t.balanceOf(a.strategy);\\n    } \\n}\\n\",\"keccak256\":\"0xfa1ab73fba7cc417af235954cb095739b4fdf4f020314ecfc2056f9a3b212508\",\"license\":\"BUSL-1.1\"},\"contracts/version/v1/OneTokenV1Base.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../../common/ICHICommon.sol\\\";\\nimport \\\"../../_openzeppelin/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"../../oz_modified/ICHIERC20Burnable.sol\\\";\\nimport \\\"../../lib/AddressSet.sol\\\";\\nimport \\\"../../interface/IOneTokenFactory.sol\\\";\\nimport \\\"../../interface/IOneTokenV1Base.sol\\\";\\nimport \\\"../../interface/IController.sol\\\";\\nimport \\\"../../interface/IStrategy.sol\\\";\\nimport \\\"../../interface/IMintMaster.sol\\\";\\nimport \\\"../../interface/IOracle.sol\\\";\\n\\ncontract OneTokenV1Base is IOneTokenV1Base, ICHICommon, ICHIERC20Burnable {\\n\\n    using SafeERC20 for IERC20;\\n    using AddressSet for AddressSet.Set;\\n\\n    bytes32 public constant override MODULE_TYPE = keccak256(abi.encodePacked(\\\"ICHI V1 OneToken Implementation\\\"));\\n\\n    address public override oneTokenFactory;\\n    address public override controller;\\n    address public override mintMaster;\\n    address public override memberToken;\\n    AddressSet.Set collateralTokenSet;\\n    AddressSet.Set otherTokenSet;\\n\\n    struct Asset {\\n        address oracle;\\n        address strategy;\\n    }\\n\\n    AddressSet.Set assetSet;\\n    mapping(address => Asset) public override assets;\\n\\n    event Initialized(address sender, string name, string symbol, address controller, address mintMaster, address memberToken, address collateral);\\n    event ControllerChanged(address sender, address controller);\\n    event MintMasterChanged(address sender, address mintMaster, address oneTokenOracle);\\n    event StrategySet(address sender, address token, address strategy, uint256 allowance);\\n    event StrategyExecuted(address indexed sender, address indexed token, address indexed strategy);\\n    event StrategyRemoved(address sender, address token, address strategy);\\n    event StrategyClosed(address sender, address token, address strategy);\\n    event ToStrategy(address sender, address strategy, address token, uint256 amount);\\n    event FromStrategy(address sender, address strategy, address token, uint256 amount);\\n    event StrategyAllowanceIncreased(address sender, address token, address strategy, uint256 amount);\\n    event StrategyAllowanceDecreased(address sender, address token, address strategy, uint256 amount);\\n    event AssetAdded(address sender, address token, address oracle);\\n    event AssetRemoved(address sender, address token);\\n    event NewFactory(address sender, address factory);\\n\\n    modifier onlyOwnerOrController {\\n        if(msg.sender != owner()) {\\n            require(msg.sender == controller, \\\"OTV1B: not owner or controller\\\");\\n        }\\n        _;\\n    }\\n\\n    /**\\n     @notice initializes a proxied instance of the implementation\\n     @dev constructors are ineffective for proxy deployments\\n     @param name_ ERC20 name value\\n     @param symbol_ ERC20 symbol value\\n     @param oneTokenOracle_ a deployed, compatible oracle supporting the minimum interface\\n     @param controller_ a deployed, compatible controller supporting the minimum interface\\n     @param mintMaster_ a deployed, compatible mintMaster supporting the minimum interface\\n     @param memberToken_ a deployed, registered (in the factory) ERC20 token supporting the minimum interface\\n     @param collateral_ a deployed, registered (in the factory) usd-pegged ERC20 token supporting the minimum interface\\n     */\\n    function init(\\n        string memory name_,\\n        string memory symbol_,\\n        address oneTokenOracle_,\\n        address controller_,\\n        address mintMaster_,\\n        address memberToken_,\\n        address collateral_\\n    )\\n        external\\n        initializer\\n        override\\n    {\\n        // transfer oneToken governance to the deployer\\n        initOwnable();\\n\\n        oneTokenFactory = msg.sender;\\n        initERC20(name_, symbol_); // decimals is always 18\\n\\n        // no null properties\\n        require(bytes(name_).length > 0 && bytes(symbol_).length > 0, \\\"OTV1B: name and symbol are RQD\\\");\\n\\n        // Confirm the modules are known and valid\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(oneTokenOracle_, ModuleType.Oracle), \\\"OTV1B: unknown oracle\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(controller_, ModuleType.Controller), \\\"OTV1B: unknown controller\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(mintMaster_, ModuleType.MintMaster), \\\"OTV1B: unknown mint master\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isForeignToken(memberToken_), \\\"OTV1B: unknown MEM token\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isCollateral(collateral_), \\\"OTV1B: unknown collateral\\\");\\n\\n        // register the modules\\n        controller = controller_;\\n        mintMaster = mintMaster_;\\n\\n        // register the member token\\n        memberToken = memberToken_;\\n\\n        // register the first acceptable collateral and note the existance of the member token\\n        collateralTokenSet.insert(collateral_, \\\"OTV1B: ERR inserting collateral\\\");\\n        otherTokenSet.insert(memberToken_, \\\"OTV1B: ERR inserting MEM token\\\");\\n        assetSet.insert(collateral_, \\\"OTV1B: ERR inserting collateral as asset\\\");\\n        assetSet.insert(memberToken_, \\\"OTV1B: ERR inserting MEM token as asset\\\");\\n\\n        // instantiate the memberToken and collateralToken records\\n        Asset storage mt = assets[memberToken_];\\n        Asset storage ct = assets[collateral_];\\n\\n        // default to the first known oracles for the memberToken and collateralToken\\n        // change default oracle with remove/add asset\\n\\n        mt.oracle = IOneTokenFactory(oneTokenFactory).foreignTokenOracleAtIndex(memberToken_, 0);\\n        ct.oracle = IOneTokenFactory(oneTokenFactory).foreignTokenOracleAtIndex(collateral_, 0);\\n\\n        // let the modules initialize the context if they need to\\n        IController(controller_).init();\\n        IMintMaster(mintMaster_).init(oneTokenOracle_);\\n       \\n        // force the oracles to make observations\\n        IOracle(oneTokenOracle_).update(address(this));\\n        IOracle(mt.oracle).update(memberToken);\\n        IOracle(ct.oracle).update(collateral_);\\n\\n        emit Initialized(msg.sender, name_, symbol_, controller_, mintMaster_, memberToken_, collateral_);\\n    }\\n\\n    /**\\n     @notice governance can appoint a new controller with distinct internal logic\\n     @dev controllers support the periodic() function which should be called occasionally to send gas to the controller\\n     @param controller_ a deployed controller contract supporting the minimum interface and registered with the factory\\n     */\\n    function changeController(address controller_) external onlyOwner override {\\n        require(IOneTokenFactory(oneTokenFactory).isModule(controller_), \\\"OTV1B: unregistered controller\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(controller_, ModuleType.Controller), \\\"OTV1B: unknown controller\\\");\\n        IController(controller_).init();\\n        controller = controller_;\\n        emit ControllerChanged(msg.sender, controller_);\\n    }\\n\\n    /**\\n     @notice change the mintMaster\\n     @dev controllers support the periodic() function which should be called occasionally to send gas to the controller\\n     @param mintMaster_ the new mintMaster implementation\\n     @param oneTokenOracle_ intialize the mintMaster with this oracle. Must be registed in the factory.\\n     */\\n    function changeMintMaster(address mintMaster_, address oneTokenOracle_) external onlyOwner override {\\n        require(IOneTokenFactory(oneTokenFactory).isModule(mintMaster_), \\\"OTV1B: unregistered mint master\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(mintMaster_, ModuleType.MintMaster), \\\"OTV1B: unknown mint master\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isOracle(address(this), oneTokenOracle_), \\\"OTV1B: unregistered oneToken oracle\\\");\\n        IOracle(oneTokenOracle_).update(address(this));\\n        IMintMaster(mintMaster_).init(oneTokenOracle_);\\n        mintMaster = mintMaster_;\\n        emit MintMasterChanged(msg.sender, mintMaster_, oneTokenOracle_);\\n    }\\n\\n    /**\\n     @notice governance can add an asset\\n     @dev asset inventory helps evaluate local holdings and enables strategy assignment\\n     @param token ERC20 token\\n     @param oracle oracle to use for usd valuation. Must be registered in the factory and associated with token.\\n     */\\n    function addAsset(address token, address oracle) external onlyOwner override {\\n        require(IOneTokenFactory(oneTokenFactory).isOracle(token, oracle), \\\"OTV1B: unknown oracle or token\\\");\\n        (bool isCollateral_, /* uint256 oracleCount */) = IOneTokenFactory(oneTokenFactory).foreignTokenInfo(token);\\n        Asset storage a = assets[token];\\n        a.oracle = oracle;\\n        IOracle(oracle).update(token);\\n        if(isCollateral_) {\\n            collateralTokenSet.insert(token, \\\"OTV1B: collateral already exists\\\");\\n        } else {\\n            otherTokenSet.insert(token, \\\"OTV1B: token already exists\\\");\\n        }\\n        assetSet.insert(token, \\\"OTV1B: ERR inserting asset\\\");\\n        emit AssetAdded(msg.sender, token, oracle);\\n    }\\n\\n    /**\\n     @notice governance can remove an asset from treasury and collateral value accounting\\n     @dev does not destroy holdings, but holdings are not accounted for\\n     @param token ERC20 token\\n     */\\n    function removeAsset(address token) external onlyOwner override {\\n        (uint256 inVault, uint256 inStrategy) = balances(token);\\n        require(inVault == 0, \\\"OTV1B: can't remove token with vault balance > 0\\\");\\n        require(inStrategy == 0, \\\"OTV1B: can't remove asset with strategy balance > 0\\\");\\n        require(assetSet.exists(token), \\\"OTV1B: unknown token\\\");\\n        if(collateralTokenSet.exists(token)) collateralTokenSet.remove(token, \\\"OTV1B: ERR removing collateral token\\\");\\n        if(otherTokenSet.exists(token)) otherTokenSet.remove(token, \\\"OTV1B: ERR removing MEM token\\\");\\n        assetSet.remove(token, \\\"OTV1B: ERR removing asset\\\");\\n        delete assets[token];\\n        emit AssetRemoved(msg.sender, token);\\n    }\\n\\n    /**\\n     @notice governance optionally assigns a strategy to an asset and sets a strategy allowance\\n     @dev strategy must be registered with the factory\\n     @param token ERC20 asset\\n     @param strategy deployed strategy contract that is registered with the factor\\n     @param allowance ERC20 allowance sets a limit on funds to transfer to the strategy\\n     */\\n    function setStrategy(address token, address strategy, uint256 allowance) external onlyOwner override {\\n\\n        require(assetSet.exists(token), \\\"OTV1B: unknown token\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isModule(strategy), \\\"OTV1B: unknown strategy\\\");\\n        require(IOneTokenFactory(oneTokenFactory).isValidModuleType(strategy, ModuleType.Strategy), \\\"OTV1B: unknown strategy\\\");\\n        require(IStrategy(strategy).oneToken() == address(this), \\\"OTV1B: can't assign strategy that doesn't recognize this vault\\\");\\n        require(IStrategy(strategy).owner() == owner(), \\\"OTV1B: unknown strategy owner\\\");\\n\\n        // close the old strategy, may not be possible to recover all funds, e.g. locked tokens\\n        // the old strategy continues to respect oneToken goverancea and controller for manual token recovery\\n\\n        Asset storage a = assets[token];\\n        closeStrategy(token);\\n\\n        // initialize the new strategy\\n        IStrategy(strategy).init();\\n        IERC20(token).safeApprove(strategy, allowance);\\n\\n        // appoint the new strategy\\n        a.strategy = strategy;\\n        emit StrategySet(msg.sender, token, strategy, allowance);\\n    }\\n\\n    /**\\n     @notice governance can remove a strategy\\n     @dev closes the strategy and requires that all funds in the strategy are returned to the vault\\n     @param token the token strategy to remove. There are 0-1 strategys per asset\\n     */\\n    function removeStrategy(address token) external onlyOwner override {\\n        Asset storage a = assets[token];\\n        closeStrategy(token);\\n        address strategy = a.strategy;\\n        a.strategy = NULL_ADDRESS;\\n        emit StrategyRemoved(msg.sender, token, strategy);\\n    }\\n\\n    /**\\n     @notice governance can close a strategy\\n     @dev strategy remains assigned the asset with allowance set to 0.\\n     @param token ERC20 asset with a strategy to close. \\n     */\\n    function closeStrategy(address token) public override onlyOwnerOrController {\\n        require(assetSet.exists(token), \\\"OTV1B:cs: unknown token\\\");\\n        Asset storage a = assets[token];\\n        address oldStrategy = a.strategy;\\n        if(oldStrategy != NULL_ADDRESS) IERC20(token).safeApprove(oldStrategy, 0);\\n        emit StrategyClosed(msg.sender, token, oldStrategy);\\n    }\\n\\n    /**\\n     @notice governance can execute a strategy to trigger innner logic within the strategy\\n     @dev normally used by the controller\\n     @param token the token strategy to execute\\n     */\\n    function executeStrategy(address token) external onlyOwnerOrController override {\\n        require(assetSet.exists(token), \\\"OTV1B:es: unknown token\\\");\\n        Asset storage a = assets[token];\\n        address strategy = a.strategy;\\n        IStrategy(strategy).execute();\\n        emit StrategyExecuted(msg.sender, token, strategy);\\n    }\\n\\n    /**\\n     @notice governance can transfer assets from the vault to a strategy\\n     @dev works independently of strategy allowance\\n     @param strategy receiving address must match the assigned strategy\\n     @param token ERC20 asset\\n     @param amount amount to send\\n     */\\n    function toStrategy(address strategy, address token, uint256 amount) external onlyOwnerOrController {\\n        Asset storage a = assets[token];\\n        require(a.strategy == strategy, \\\"OTV1B: not the token strategy\\\");\\n        IERC20(token).safeTransfer(strategy, amount);\\n        emit ToStrategy(msg.sender, strategy, token, amount);\\n    }\\n\\n    /**\\n     @notice governance can transfer assets from the strategy to this vault\\n     @param strategy receiving address must match the assigned strategy\\n     @param token ERC20 asset\\n     @param amount amount to draw from the strategy\\n     */\\n    function fromStrategy(address strategy, address token, uint256 amount) external onlyOwnerOrController {\\n        Asset storage a = assets[token];\\n        require(a.strategy == strategy, \\\"OTV1B: not the token strategy\\\");\\n        IStrategy(strategy).toVault(token, amount);\\n        emit FromStrategy(msg.sender, strategy, token, amount);\\n    }\\n\\n    /**\\n     @notice governance can manage an allowance for a token strategy\\n     @dev adjusts the remaining allowance for automated transfers executed by the controller\\n     @param token ERC20 asset\\n     @param amount allowance increase\\n     */\\n    function increaseStrategyAllowance(address token, uint256 amount) external onlyOwnerOrController override {\\n        Asset storage a = assets[token];\\n        address strategy = a.strategy;\\n        require(a.strategy != NULL_ADDRESS, \\\"OTV1B: no strategy\\\");\\n        IERC20(token).safeIncreaseAllowance(strategy, amount);\\n        emit StrategyAllowanceIncreased(msg.sender, token, strategy, amount);\\n    }\\n\\n    /**\\n     @notice governance can manage an allowance for a token strategy\\n     @dev adjusts the remaining allowance for automated transfers executed by the controller\\n     @param token ERC20 asset\\n     @param amount allowance decrease\\n     */    \\n    function decreaseStrategyAllowance(address token, uint256 amount) external onlyOwnerOrController override {\\n        Asset storage a = assets[token];\\n        address strategy = a.strategy;\\n        require(a.strategy != NULL_ADDRESS, \\\"OTV1B: no strategy\\\");\\n        IERC20(token).safeDecreaseAllowance(strategy, amount);\\n        emit StrategyAllowanceDecreased(msg.sender, token, strategy, amount);\\n    }\\n\\n    /**\\n     @notice adopt a new factory\\n     @dev accomodates factory upgrades\\n     @param newFactory address of the new factory\\n     */\\n    function setFactory(address newFactory) external override onlyOwner {\\n        require(IOneTokenFactory(newFactory).MODULE_TYPE() == COMPONENT_FACTORY, \\\"OTV1B: new factory doesn't emit factory fingerprint\\\");\\n        oneTokenFactory = newFactory;\\n        emit NewFactory(msg.sender, newFactory);\\n    }\\n\\n    /**\\n     * View functions\\n     */\\n\\n    /**\\n     @notice returns the local balance and funds held in the assigned strategy, if any\\n     @param token to inspect\\n     */\\n    function balances(address token) public view override returns(uint256 inVault, uint256 inStrategy) {\\n        IERC20 asset = IERC20(token);\\n        inVault = asset.balanceOf(address(this));\\n        address strategy = assets[token].strategy;\\n        if(strategy != NULL_ADDRESS) inStrategy = asset.balanceOf(strategy);\\n    }\\n\\n    /**point\\n     @notice returns the number of acceptable collateral token contracts\\n     */\\n    function collateralTokenCount() external view override returns(uint256) {\\n        return collateralTokenSet.count();\\n    }\\n\\n    /**\\n     @notice returns the address of an ERC20 token collateral contract at the index\\n     @param index row to inspect\\n     */\\n    function collateralTokenAtIndex(uint256 index) external view override returns(address) {\\n        return collateralTokenSet.keyAtIndex(index);\\n    }\\n\\n    /**\\n     @notice returns true if the token contract is recognized collateral\\n     @param token token to inspect\\n     */\\n    function isCollateral(address token) public view override returns(bool) {\\n        return collateralTokenSet.exists(token);\\n    }\\n\\n    /**\\n     @notice returns the count of registered ERC20 asset contracts that not collateral\\n     */\\n    function otherTokenCount() external view override returns(uint256) {\\n        return otherTokenSet.count();\\n    }\\n\\n    /**\\n     @notice returns the non-collateral token contract at the index\\n     @param index row to inspect\\n     */\\n    function otherTokenAtIndex(uint256 index) external view override returns(address) {\\n        return otherTokenSet.keyAtIndex(index);\\n    }\\n\\n    /**\\n     @notice returns true if the token contract is registered and is not collateral\\n     @param token token to inspect\\n     */\\n    function isOtherToken(address token) external view override returns(bool) {\\n        return otherTokenSet.exists(token);\\n    }\\n\\n    /**\\n     @notice returns the sum of collateral and non-collateral ERC20 token contracts\\n     */\\n    function assetCount() external view override returns(uint256) {\\n        return assetSet.count();\\n    }\\n\\n    /**\\n     @notice returns the ERC20 contract address at the index\\n     @param index row to inspect\\n     */\\n    function assetAtIndex(uint256 index) external view override returns(address) {\\n        return assetSet.keyAtIndex(index);\\n    }\\n\\n    /**\\n     @notice returns true if the token contract is a registered asset of either type\\n     @param token token to inspect\\n     */\\n    function isAsset(address token) external view override returns(bool) {\\n        return assetSet.exists(token);\\n    }\\n}\\n\",\"keccak256\":\"0x90af24586c60461c100faffdbf71da0fa6f66ad1cf78e3b8e811ae10f997a1e4\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d3362000023565b620000c5565b6001600160a01b0381166200006a5760405162461bcd60e51b815260040180806020018281038252602a81526020018062005e03602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b615d2e80620000d56000396000f3fe608060405234801561001057600080fd5b50600436106103785760003560e01c806370a08231116101d3578063a457c2d711610104578063da489997116100a2578063eafe7a741161007c578063eafe7a7414610c00578063f11b818814610c08578063f2fde38b14610c5d578063f77c479114610c8357610378565b8063da48999714610b9c578063dd62ed3e14610bca578063e4849c7314610bf857610378565b8063b01083e2116100de578063b01083e2146109f3578063c5706b2014610a19578063c87fa42a14610b6e578063d991c58f14610b9457610378565b8063a457c2d714610975578063a46c3103146109a1578063a9059cbb146109c757610378565b80637dbc1df01161017157806390a83dc21161014b57806390a83dc21461090157806395d89b41146109375780639d8ac4651461093f578063a2729c231461096d57610378565b80637dbc1df0146108bf5780638da5cb5b146108dc5780638e4bfd1a146108e457610378565b8063795a94d7116101ad578063795a94d71461081a57806379cc6790146108405780637ae560fa1461086c5780637afc2ef1146108a257610378565b806370a08231146107e4578063715018a61461080a57806373c9da861461081257610378565b80633cebb823116102ad5780634a5e42b11161024b5780635775029f116102255780635775029f146107a65780635a64ad95146107ae5780635bb47808146107b65780635cb54384146107dc57610378565b80634a5e42b1146107115780634c5415661461073757806351eec35d1461077057610378565b806340c10f191161028757806340c10f191461069457806342966c68146106c057806342fadd0f146106dd578063458f58151461070957610378565b80633cebb823146106225780633d7e4a6d146106485780634009ba811461066e57610378565b80631be52dc41161031a57806323b872dd116102f457806323b872dd1461057c57806327e235e3146105b2578063313ce567146105d857806339509351146105f657610378565b80631be52dc4146104f45780631e9a695014610533578063238a47091461055f57610378565b80630ee21e54116103565780630ee21e541461046857806316c19b8c1461048e578063175188e8146104b457806318160ddd146104da57610378565b806303b66bf01461037d57806306fdde03146103ab578063095ea7b314610428575b600080fd5b6103a96004803603604081101561039357600080fd5b506001600160a01b038135169060200135610c8b565b005b6103b3610d73565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103ed5781810151838201526020016103d5565b50505050905090810190601f16801561041a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104546004803603604081101561043e57600080fd5b506001600160a01b038135169060200135610e09565b604080519115158252519081900360200190f35b6104546004803603602081101561047e57600080fd5b50356001600160a01b0316610e27565b6103a9600480360360208110156104a457600080fd5b50356001600160a01b0316610e3c565b6103a9600480360360208110156104ca57600080fd5b50356001600160a01b0316610f59565b6104e2611039565b60408051918252519081900360200190f35b61051a6004803603602081101561050a57600080fd5b50356001600160a01b031661103f565b6040805192835260208301919091528051918290030190f35b6103a96004803603604081101561054957600080fd5b506001600160a01b03813516906020013561116d565b6103a96004803603602081101561057557600080fd5b5035611471565b6104546004803603606081101561059257600080fd5b506001600160a01b0381358116916020810135909116906040013561156b565b61051a600480360360208110156105c857600080fd5b50356001600160a01b03166115f3565b6105e0611722565b6040805160ff9092168252519081900360200190f35b6104546004803603604081101561060c57600080fd5b506001600160a01b03813516906020013561172b565b6103a96004803603602081101561063857600080fd5b50356001600160a01b0316611779565b6104546004803603602081101561065e57600080fd5b50356001600160a01b03166119c5565b61051a6004803603602081101561068457600080fd5b50356001600160a01b03166119d2565b6103a9600480360360408110156106aa57600080fd5b506001600160a01b038135169060200135611a5d565b6103a9600480360360208110156106d657600080fd5b5035612178565b6103a9600480360360408110156106f357600080fd5b506001600160a01b03813516906020013561218c565b6104e261225d565b6103a96004803603602081101561072757600080fd5b50356001600160a01b0316612263565b6107546004803603602081101561074d57600080fd5b5035612466565b604080516001600160a01b039092168252519081900360200190f35b6103a96004803603606081101561078657600080fd5b506001600160a01b03813581169160208101359091169060400135612473565b6104e2612594565b6104e26125de565b6103a9600480360360208110156107cc57600080fd5b50356001600160a01b03166125e4565b610754612747565b6104e2600480360360208110156107fa57600080fd5b50356001600160a01b0316612756565b6103a9612771565b6104e2612819565b61051a6004803603602081101561083057600080fd5b50356001600160a01b031661282a565b6103a96004803603604081101561085657600080fd5b506001600160a01b03813516906020013561288b565b6103a96004803603606081101561088257600080fd5b506001600160a01b038135811691602081013590911690604001356128e5565b610754600480360360208110156108b857600080fd5b50356129ba565b6103a9600480360360208110156108d557600080fd5b50356129c7565b610754612ac1565b610754600480360360208110156108fa57600080fd5b5035612ad0565b6103a96004803603606081101561091757600080fd5b506001600160a01b03813581169160208101359091169060400135612add565b6103b3612eca565b6103a96004803603604081101561095557600080fd5b506001600160a01b0381358116916020013516612f2b565b610754613285565b6104546004803603604081101561098b57600080fd5b506001600160a01b038135169060200135613299565b6103a9600480360360208110156109b757600080fd5b50356001600160a01b0316613301565b610454600480360360408110156109dd57600080fd5b506001600160a01b0381351690602001356133e1565b6104e260048036036020811015610a0957600080fd5b50356001600160a01b03166133f5565b6103a9600480360360e0811015610a2f57600080fd5b810190602081018135640100000000811115610a4a57600080fd5b820183602082011115610a5c57600080fd5b80359060200191846001830284011164010000000083111715610a7e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610ad157600080fd5b820183602082011115610ae357600080fd5b80359060200191846001830284011164010000000083111715610b0557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383358116945060208401358116936040810135821693506060810135821692506080013516613407565b61045460048036036020811015610b8457600080fd5b50356001600160a01b0316613cc4565b610754613cd1565b6103a960048036036040811015610bb257600080fd5b506001600160a01b0381358116916020013516613ce0565b6104e260048036036040811015610be057600080fd5b506001600160a01b0381358116916020013516613ff8565b6104e2614023565b6104e261402f565b610c2e60048036036020811015610c1e57600080fd5b50356001600160a01b031661403b565b60405180836001600160a01b03168152602001826001600160a01b031681526020019250505060405180910390f35b6103a960048036036020811015610c7357600080fd5b50356001600160a01b0316614061565b6107546140c8565b610c93612ac1565b6001600160a01b0316336001600160a01b031614610cde576007546001600160a01b03163314610cde5760405162461bcd60e51b8152600401610cd5906157d4565b60405180910390fd5b6001600160a01b038083166000908152601060205260409020600181015490911680610d1c5760405162461bcd60e51b8152600401610cd59061563e565b610d306001600160a01b03851682856140d7565b7f10a9df2bd632b357b228c23986ec5a7d1de6bd1578eeb8ac8d714dc0e0e5e1fe33858386604051610d659493929190615363565b60405180910390a150505050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dff5780601f10610dd457610100808354040283529160200191610dff565b820191906000526020600020905b815481529060010190602001808311610de257829003601f168201915b5050505050905090565b6000610e1d610e166141c8565b84846141cc565b5060015b92915050565b6000610e34600a836142b8565b90505b919050565b610e44612ac1565b6001600160a01b0316336001600160a01b031614610e86576007546001600160a01b03163314610e865760405162461bcd60e51b8152600401610cd5906157d4565b610e91600e826142b8565b610ead5760405162461bcd60e51b8152600401610cd590615713565b6001600160a01b0380821660009081526010602052604080822060018101548251631851865560e21b815292519194169283926361461954926004808301939282900301818387803b158015610f0257600080fd5b505af1158015610f16573d6000803e3d6000fd5b50506040516001600160a01b0380851693508616915033907f46ea67f07a3d81eab9f3b5f21b654a6b1c00e5f8da735d57c140ff7c0f371e5190600090a4505050565b610f616141c8565b6001600160a01b0316610f72612ac1565b6001600160a01b031614610fb75760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b6001600160a01b0381166000908152601060205260409020610fd882613301565b6001810180546001600160a01b031981169091556040516001600160a01b03909116907f1121b54c4b588f7a435def4682f41df4ec3d9eb2992630858ef07303165f30599061102c90339086908590615340565b60405180910390a1505050565b60035490565b6000806000839050806001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561109457600080fd5b505afa1580156110a8573d6000803e3d6000fd5b505050506040513d60208110156110be57600080fd5b50516001600160a01b0380861660009081526010602052604090206001810154929550911615611166576001810154604080516370a0823160e01b81526001600160a01b0392831660048201529051918416916370a0823191602480820192602092909190829003018186803b15801561113757600080fd5b505afa15801561114b573d6000803e3d6000fd5b505050506040513d602081101561116157600080fd5b505192505b5050915091565b61117682610e27565b6111c7576040805162461bcd60e51b815260206004820152601860248201527f4f5456313a20756e6b6e6f776e20636f6c6c61746572616c0000000000000000604482015290519081900360640190fd5b6000811161121c576040805162461bcd60e51b815260206004820152601860248201527f4f5456313a20616d6f756e74206d757374206265203e20300000000000000000604482015290519081900360640190fd5b8061122633612756565b101561126f576040805162461bcd60e51b815260206004820152601360248201527227aa2b189d102729a31d1037b732aa37b5b2b760691b604482015290519081900360640190fd5b6001600160a01b03808316600081815260106020526040808220548151630e0dc3b960e11b8152600481019490945290519316928392631c1b877292602480830193919282900301818387803b1580156112c857600080fd5b505af11580156112dc573d6000803e3d6000fd5b505050506112ea3383614313565b600061131d611316670de0b6b3a76400006113106012548761440f90919063ffffffff16565b90614468565b84906144cf565b90506000826001600160a01b0316634d16186586846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050604080518083038186803b15801561137557600080fd5b505afa158015611389573d6000803e3d6000fd5b505050506040513d604081101561139f57600080fd5b505190506113b76001600160a01b038616338361452c565b6040805185815290516001600160a01b0387169133917f27d4634c833b7622a0acddbf7f746183625f105945e95c723ad1d5a9f2a0b6fc9181900360200190a3611400856119d2565b5050600760009054906101000a90046001600160a01b03166001600160a01b031663032c40276040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561145257600080fd5b505af1158015611466573d6000803e3d6000fd5b505050505050505050565b6114796141c8565b6001600160a01b031661148a612ac1565b6001600160a01b0316146114cf5760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b670de0b6b3a7640000811115611528576040805162461bcd60e51b81526020600482015260196024820152784f5456313a20666565206d757374206265203c3d203130302560381b604482015290519081900360640190fd5b6011819055604080513381526020810183905281517f7ac26e4ffe830fdc207de38e982cc2eff8c82c484057efc31138b195984827f6929181900390910190a150565b600061157884848461457e565b6115e8846115846141c8565b6115e3856040518060600160405280602c8152602001615974602c91396001600160a01b038a166000908152600260205260408120906115c26141c8565b6001600160a01b0316815260208101919091526040016000205491906146db565b6141cc565b5060015b9392505050565b6040516370a0823160e01b8152600090819083906001600160a01b038216906370a0823190611626903090600401615312565b60206040518083038186803b15801561163e57600080fd5b505afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611676919061528e565b6001600160a01b03808616600090815260106020526040902060010154919450168015611166576040516370a0823160e01b81526001600160a01b038316906370a08231906116c9908490600401615312565b60206040518083038186803b1580156116e157600080fd5b505afa1580156116f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611719919061528e565b92505050915091565b60065460ff1690565b6000610e1d6117386141c8565b846115e385600260006117496141c8565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490614772565b6117816141c8565b6001600160a01b0316611792612ac1565b6001600160a01b0316146117d75760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b6006546040516342f6e38960e01b81526101009091046001600160a01b0316906342f6e3899061180b908490600401615312565b60206040518083038186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185b9190615249565b6118775760405162461bcd60e51b8152600401610cd59061557d565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d95906118ae9084906001906004016153eb565b60206040518083038186803b1580156118c657600080fd5b505afa1580156118da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fe9190615249565b61191a5760405162461bcd60e51b8152600401610cd590615879565b806001600160a01b031663e1c7392a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561195557600080fd5b505af1158015611969573d6000803e3d6000fd5b5050600780546001600160a01b0319166001600160a01b03851617905550506040517f6aef1fb5b23d0e109fc7f2b0601019e1edbacd177e31a441ec8548e8dd14f0f7906119ba9033908490615326565b60405180910390a150565b6000610e34600c836142b8565b60085460408051634009ba8160e01b81526001600160a01b03848116600483015282516000948594921692634009ba8192602480830193919282900301818787803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b505050506040513d6040811015611a4a57600080fd5b5080516020909101519092509050915091565b600054600160a01b900460ff16611aa55760405162461bcd60e51b815260040180806020018281038252602e815260200180615bf2602e913960400191505060405180910390fd5b611ab0600a836142b8565b611b01576040805162461bcd60e51b815260206004820152601e60248201527f4f5456313a206f66666572206120636f6c6c61746572616c20746f6b656e0000604482015290519081900360640190fd5b60008111611b56576040805162461bcd60e51b815260206004820152601760248201527f4f5456313a206f72646572206d757374206265203e2030000000000000000000604482015290519081900360640190fd5b6001600160a01b03808316600081815260106020526040808220548151630e0dc3b960e11b815260048101949094529051931692631c1b877292602480820193929182900301818387803b158015611bad57600080fd5b505af1158015611bc1573d6000803e3d6000fd5b50506009546001600160a01b03908116600081815260106020526040808220548151630e0dc3b960e11b81526004810194909452905193169450631c1b87729350602480830193919282900301818387803b158015611c1f57600080fd5b505af1158015611c33573d6000803e3d6000fd5b50505050600080611c43846119d2565b9150915080831115611c9c576040805162461bcd60e51b815260206004820152601960248201527f4f5456313a206f726465722065786365656473206c696d697400000000000000604482015290519081900360640190fd5b6000611cb4670de0b6b3a7640000611310868661440f565b90506000611cc285836144cf565b9050611cef611ce8670de0b6b3a76400006113106011548961440f90919063ffffffff16565b8390614772565b6009546001600160a01b03908116600081815260106020526040808220548151634d16186560e01b8152600481019490945260248401879052815195975091949190931692634d1618659260448082019391829003018186803b158015611d5557600080fd5b505afa158015611d69573d6000803e3d6000fd5b505050506040513d6040811015611d7f57600080fd5b505160095460408051636eb1769f60e11b815233600482015230602482015290519293506000926001600160a01b039092169163dd62ed3e91604480820192602092909190829003018186803b158015611dd857600080fd5b505afa158015611dec573d6000803e3d6000fd5b505050506040513d6020811015611e0257600080fd5b5051905080821115611e80576000611e268361131086670de0b6b3a764000061440f565b91925082919050611e43670de0b6b3a7640000611310838561440f565b9350611e4f88856144cf565b9450611e7c611e75670de0b6b3a76400006113106011548c61440f90919063ffffffff16565b8690614772565b9450505b600954604080516370a0823160e01b8152336004820152905184926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611eca57600080fd5b505afa158015611ede573d6000803e3d6000fd5b505050506040513d6020811015611ef457600080fd5b50511015611f49576040805162461bcd60e51b815260206004820152601760248201527f4f5456313a204e53463a206d656d62657220746f6b656e000000000000000000604482015290519081900360640190fd5b6001600160a01b03808916600081815260106020526040808220548151634d16186560e01b8152600481019490945260248401899052815192941692634d1618659260448083019392829003018186803b158015611fa657600080fd5b505afa158015611fba573d6000803e3d6000fd5b505050506040513d6040811015611fd057600080fd5b5051604080516370a0823160e01b8152336004820152905191925082916001600160a01b038c16916370a08231916024808301926020929190829003018186803b15801561201d57600080fd5b505afa158015612031573d6000803e3d6000fd5b505050506040513d602081101561204757600080fd5b5051101561209c576040805162461bcd60e51b815260206004820152601b60248201527f4f5456313a204e53463a20636f6c6c61746572616c20746f6b656e0000000000604482015290519081900360640190fd5b600081116120e9576040805162461bcd60e51b815260206004820152601560248201527413d5158c4e881bdc99195c881d1bdbc81cdb585b1b605a1b604482015290519081900360640190fd5b600954612101906001600160a01b03163330866147cc565b6121166001600160a01b038a163330846147cc565b6121203389614826565b604080518981526020810185905280820183905290516001600160a01b038b169133917f68c721f9a38584842eb66945b43c95066397ce5f2576fcc0588471c85d209d0c9181900360600190a3505050505050505050565b6121896121836141c8565b82614313565b50565b612194612ac1565b6001600160a01b0316336001600160a01b0316146121d6576007546001600160a01b031633146121d65760405162461bcd60e51b8152600401610cd5906157d4565b6001600160a01b0380831660009081526010602052604090206001810154909116806122145760405162461bcd60e51b8152600401610cd59061563e565b6122286001600160a01b0385168285614902565b7fdbe28db27103b16ba8fd72b0037bd6480a7f40704dceddb29c3cb07ca7b3518933858386604051610d659493929190615363565b60125481565b61226b6141c8565b6001600160a01b031661227c612ac1565b6001600160a01b0316146122c15760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b6000806122cd836115f3565b91509150816000146122f15760405162461bcd60e51b8152600401610cd59061542b565b801561230f5760405162461bcd60e51b8152600401610cd5906155b4565b61231a600e846142b8565b6123365760405162461bcd60e51b8152600401610cd5906158e7565b612341600a846142b8565b1561236c5761236c83604051806060016040528060248152602001615b5960249139600a91906149a4565b612377600c846142b8565b156123be5760408051808201909152601d81527f4f545631423a204552522072656d6f76696e67204d454d20746f6b656e00000060208201526123be90600c9085906149a4565b60408051808201909152601981527f4f545631423a204552522072656d6f76696e6720617373657400000000000000602082015261240090600e9085906149a4565b6001600160a01b0383166000908152601060205260409081902080546001600160a01b03199081168255600190910180549091169055517f0fa1e4606af435f32f05b3804033d2933e691fab32ee74d2db6fa82d2741f1ea9061102c9033908690615326565b6000610e34600e83614ae4565b61247b612ac1565b6001600160a01b0316336001600160a01b0316146124bd576007546001600160a01b031633146124bd5760405162461bcd60e51b8152600401610cd5906157d4565b6001600160a01b038281166000908152601060205260409020600181015490918581169116146124ff5760405162461bcd60e51b8152600401610cd5906156dc565b60405163273444bf60e11b81526001600160a01b03851690634e68897e9061252d9086908690600401615412565b600060405180830381600087803b15801561254757600080fd5b505af115801561255b573d6000803e3d6000fd5b505050507f834d22807e9785b046fc281d114c99498cf7fc7ecd92dd098b88ec7b8b7f0eb733858585604051610d659493929190615363565b60405160200180807f49434849205631204f6e65546f6b656e20496d706c656d656e746174696f6e00815250601f0190506040516020818303038152906040528051906020012081565b60115481565b6125ec6141c8565b6001600160a01b03166125fd612ac1565b6001600160a01b0316146126425760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b604051602001612651906152f1565b60405160208183030381529060405280519060200120816001600160a01b0316635775029f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126a057600080fd5b505afa1580156126b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d8919061528e565b146126f55760405162461bcd60e51b8152600401610cd59061574a565b60068054610100600160a81b0319166101006001600160a01b038416021790556040517fb92ca6a399b9270b334a0ac2215abda8e9356ed263aa3b0d59984e5095aa5422906119ba9033908490615326565b6009546001600160a01b031681565b6001600160a01b031660009081526001602052604090205490565b6127796141c8565b6001600160a01b031661278a612ac1565b6001600160a01b0316146127cf5760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000612825600a614b11565b905090565b6008546040805163795a94d760e01b81526001600160a01b0384811660048301528251600094859492169263795a94d7926024808301939192829003018186803b15801561287757600080fd5b505afa158015611a34573d6000803e3d6000fd5b60006128c282604051806060016040528060308152602001615c6d603091396128bb866128b66141c8565b613ff8565b91906146db565b90506128d6836128d06141c8565b836141cc565b6128e08383614313565b505050565b6128ed612ac1565b6001600160a01b0316336001600160a01b03161461292f576007546001600160a01b0316331461292f5760405162461bcd60e51b8152600401610cd5906157d4565b6001600160a01b038281166000908152601060205260409020600181015490918581169116146129715760405162461bcd60e51b8152600401610cd5906156dc565b6129856001600160a01b038416858461452c565b7f640340553261432b50e6ef09ca1760c9cb32d3ac37fcb01f4e31392dfd10b08c33858585604051610d659493929190615363565b6000610e34600a83614ae4565b6129cf6141c8565b6001600160a01b03166129e0612ac1565b6001600160a01b031614612a255760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b670de0b6b3a7640000811115612a7e576040805162461bcd60e51b81526020600482015260196024820152784f5456313a20666565206d757374206265203c3d203130302560381b604482015290519081900360640190fd5b6012819055604080513381526020810183905281517f03bc6648b2f00cf8724be70736b586b0643ba4b219bae2718c72b1449a4e04eb929181900390910190a150565b6000546001600160a01b031690565b6000610e34600c83614ae4565b612ae56141c8565b6001600160a01b0316612af6612ac1565b6001600160a01b031614612b3b5760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b612b46600e846142b8565b612b625760405162461bcd60e51b8152600401610cd5906158e7565b6006546040516342f6e38960e01b81526101009091046001600160a01b0316906342f6e38990612b96908590600401615312565b60206040518083038186803b158015612bae57600080fd5b505afa158015612bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be69190615249565b612c025760405162461bcd60e51b8152600401610cd590615842565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d9590612c399085906002906004016153eb565b60206040518083038186803b158015612c5157600080fd5b505afa158015612c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c899190615249565b612ca55760405162461bcd60e51b8152600401610cd590615842565b306001600160a01b0316826001600160a01b031663a27eccc16040518163ffffffff1660e01b815260040160206040518083038186803b158015612ce857600080fd5b505afa158015612cfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d209190615222565b6001600160a01b031614612d465760405162461bcd60e51b8152600401610cd590615520565b612d4e612ac1565b6001600160a01b0316826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612d9057600080fd5b505afa158015612da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc89190615222565b6001600160a01b031614612dee5760405162461bcd60e51b8152600401610cd590615607565b6001600160a01b0383166000908152601060205260409020612e0f84613301565b826001600160a01b031663e1c7392a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612e4a57600080fd5b505af1158015612e5e573d6000803e3d6000fd5b50612e77925050506001600160a01b0385168484614b18565b6001810180546001600160a01b0319166001600160a01b0385161790556040517f109ad385ebec3a5bee37a3f9c148e1c1890195ef9b85a4a229256c3a773430fe90610d65903390879087908790615363565b60058054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610dff5780601f10610dd457610100808354040283529160200191610dff565b612f336141c8565b6001600160a01b0316612f44612ac1565b6001600160a01b031614612f895760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b6006546040516342f6e38960e01b81526101009091046001600160a01b0316906342f6e38990612fbd908590600401615312565b60206040518083038186803b158015612fd557600080fd5b505afa158015612fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300d9190615249565b6130295760405162461bcd60e51b8152600401610cd5906154b2565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d95906130609085906003906004016153eb565b60206040518083038186803b15801561307857600080fd5b505afa15801561308c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130b09190615249565b6130cc5760405162461bcd60e51b8152600401610cd590615915565b600654604051631b864cc760e11b81526101009091046001600160a01b03169063370c998e906131029030908590600401615326565b60206040518083038186803b15801561311a57600080fd5b505afa15801561312e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131529190615249565b61316e5760405162461bcd60e51b8152600401610cd590615699565b604051630e0dc3b960e11b81526001600160a01b03821690631c1b87729061319a903090600401615312565b600060405180830381600087803b1580156131b457600080fd5b505af11580156131c8573d6000803e3d6000fd5b505060405163066ad14f60e21b81526001600160a01b03851692506319ab453c91506131f8908490600401615312565b600060405180830381600087803b15801561321257600080fd5b505af1158015613226573d6000803e3d6000fd5b5050600880546001600160a01b0319166001600160a01b03861617905550506040517fe776e197ba478f3131af13192de09273df0676776ed994ce0ec05e21084a10ae9061327990339085908590615340565b60405180910390a15050565b60065461010090046001600160a01b031681565b6000610e1d6132a66141c8565b846115e3856040518060600160405280602981526020016159a060299139600260006132d06141c8565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906146db565b613309612ac1565b6001600160a01b0316336001600160a01b03161461334b576007546001600160a01b0316331461334b5760405162461bcd60e51b8152600401610cd5906157d4565b613356600e826142b8565b6133725760405162461bcd60e51b8152600401610cd59061580b565b6001600160a01b038082166000908152601060205260409020600181015490911680156133ae576133ae6001600160a01b038416826000614b18565b7f65c7bd8aded3934ad8d8e192818b6f26422e1aa48169fe09beadf2d20d69a93b33848360405161102c93929190615340565b6000610e1d6133ee6141c8565b848461457e565b60136020526000908152604090205481565b600054600160a81b900460ff16806134225750613422614c2b565b806134375750600054600160a01b900460ff16155b6134725760405162461bcd60e51b81526004018080602001828103825260328152602001806159f26032913960400191505060405180910390fd5b600054600160a81b900460ff161580156134a9576000805460ff60a01b1960ff60a81b19909116600160a81b1716600160a01b1790555b6134b1614c3c565b60068054610100600160a81b03191633610100021790556134d28888614cac565b600088511180156134e4575060008751115b6135005760405162461bcd60e51b8152600401610cd5906154e9565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d959061353690899060049081016153eb565b60206040518083038186803b15801561354e57600080fd5b505afa158015613562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135869190615249565b6135a25760405162461bcd60e51b8152600401610cd59061566a565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d95906135d99088906001906004016153eb565b60206040518083038186803b1580156135f157600080fd5b505afa158015613605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136299190615249565b6136455760405162461bcd60e51b8152600401610cd590615879565b600654604051637afd8d9560e01b81526101009091046001600160a01b031690637afd8d959061367c9087906003906004016153eb565b60206040518083038186803b15801561369457600080fd5b505afa1580156136a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136cc9190615249565b6136e85760405162461bcd60e51b8152600401610cd590615915565b600654604051635d3e367560e01b81526101009091046001600160a01b031690635d3e36759061371c908690600401615312565b60206040518083038186803b15801561373457600080fd5b505afa158015613748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061376c9190615249565b6137885760405162461bcd60e51b8152600401610cd59061547b565b6006546040516303b8879560e21b81526101009091046001600160a01b031690630ee21e54906137bc908590600401615312565b60206040518083038186803b1580156137d457600080fd5b505afa1580156137e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380c9190615249565b6138285760405162461bcd60e51b8152600401610cd5906158b0565b600780546001600160a01b038088166001600160a01b03199283161790925560088054878416908316179055600980549286169290911691909117905560408051808201909152601f81527f4f545631423a2045525220696e73657274696e6720636f6c6c61746572616c0060208201526138a790600a908490614d9b565b60408051808201909152601e81527f4f545631423a2045525220696e73657274696e67204d454d20746f6b656e000060208201526138e990600c908590614d9b565b61390f82604051806060016040528060288152602001615a7560289139600e9190614d9b565b61393583604051806060016040528060278152602001615ac260279139600e9190614d9b565b6001600160a01b0380841660009081526010602052604080822085841683528183206006549251632e90ddcb60e11b8152919490936101009093041691635d21bb9691613986918991600401615412565b60206040518083038186803b15801561399e57600080fd5b505afa1580156139b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139d69190615222565b82546001600160a01b0319166001600160a01b03918216178355600654604051632e90ddcb60e11b815261010090910490911690635d21bb9690613a21908790600090600401615412565b60206040518083038186803b158015613a3957600080fd5b505afa158015613a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a719190615222565b81546001600160a01b0319166001600160a01b03918216178255604080516370e39c9560e11b815290519189169163e1c7392a9160048082019260009290919082900301818387803b158015613ac657600080fd5b505af1158015613ada573d6000803e3d6000fd5b505060405163066ad14f60e21b81526001600160a01b03891692506319ab453c9150613b0a908b90600401615312565b600060405180830381600087803b158015613b2457600080fd5b505af1158015613b38573d6000803e3d6000fd5b5050604051630e0dc3b960e11b81526001600160a01b038b169250631c1b87729150613b68903090600401615312565b600060405180830381600087803b158015613b8257600080fd5b505af1158015613b96573d6000803e3d6000fd5b50508354600954604051630e0dc3b960e11b81526001600160a01b039283169450631c1b87729350613bce9290911690600401615312565b600060405180830381600087803b158015613be857600080fd5b505af1158015613bfc573d6000803e3d6000fd5b50508254604051630e0dc3b960e11b81526001600160a01b039091169250631c1b87729150613c2f908790600401615312565b600060405180830381600087803b158015613c4957600080fd5b505af1158015613c5d573d6000803e3d6000fd5b505050507f2e1fc836b050d21b006e03d2747fbd2e70134de8831489895b9539ec94f643e2338b8b8a8a8a8a604051613c9c979695949392919061538d565b60405180910390a150508015613cba576000805460ff60a81b191690555b5050505050505050565b6000610e34600e836142b8565b6008546001600160a01b031681565b613ce86141c8565b6001600160a01b0316613cf9612ac1565b6001600160a01b031614613d3e5760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b600654604051631b864cc760e11b81526101009091046001600160a01b03169063370c998e90613d749085908590600401615326565b60206040518083038186803b158015613d8c57600080fd5b505afa158015613da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dc49190615249565b613de05760405162461bcd60e51b8152600401610cd59061579d565b60065460405163443f2c1b60e01b815260009161010090046001600160a01b03169063443f2c1b90613e16908690600401615312565b604080518083038186803b158015613e2d57600080fd5b505afa158015613e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e659190615263565b506001600160a01b038481166000908152601060205260409081902080546001600160a01b03191692861692831781559051630e0dc3b960e11b815292935091631c1b877290613eb9908790600401615312565b600060405180830381600087803b158015613ed357600080fd5b505af1158015613ee7573d6000803e3d6000fd5b505050508115613f4157613f3c846040518060400160405280602081526020017f4f545631423a20636f6c6c61746572616c20616c726561647920657869737473815250600a614d9b9092919063ffffffff16565b613f83565b60408051808201909152601b81527f4f545631423a20746f6b656e20616c72656164792065786973747300000000006020820152613f8390600c908690614d9b565b60408051808201909152601a81527f4f545631423a2045525220696e73657274696e672061737365740000000000006020820152613fc590600e908690614d9b565b7f0a7426a0630aad7dbc4d5ca5b7d9aac1133d77d2db987caaf4b4186c85d6593f338585604051610d6593929190615340565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000612825600c614b11565b6000612825600e614b11565b601060205260009081526040902080546001909101546001600160a01b03918216911682565b6140696141c8565b6001600160a01b031661407a612ac1565b6001600160a01b0316146140bf5760405162461bcd60e51b8152600401808060200182810382526024815260200180615b0f6024913960400191505060405180910390fd5b61218981614e42565b6007546001600160a01b031681565b600061416d82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561413b57600080fd5b505afa15801561414f573d6000803e3d6000fd5b505050506040513d602081101561416557600080fd5b505190614772565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790529091506141c2908590614ee2565b50505050565b3390565b6001600160a01b0383166142115760405162461bcd60e51b8152600401808060200182810382526028815260200180615a246028913960400191505060405180910390fd5b6001600160a01b0382166142565760405162461bcd60e51b8152600401808060200182810382526026815260200180615c9d6026913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60018201546000906142cc57506000610e21565b6001600160a01b03821660008181526020859052604090205460018501805490919081106142f657fe5b6000918252602090912001546001600160a01b0316149392505050565b6001600160a01b0382166143585760405162461bcd60e51b8152600401808060200182810382526025815260200180615a9d6025913960400191505060405180910390fd5b614364826000836128e0565b6143a181604051806060016040528060268152602001615b33602691396001600160a01b03851660009081526001602052604090205491906146db565b6001600160a01b0383166000908152600160205260409020556003546143c790826144cf565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008261441e57506000610e21565b8282028284828161442b57fe5b04146115ec5760405162461bcd60e51b8152600401808060200182810382526021815260200180615ba76021913960400191505060405180910390fd5b60008082116144be576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816144c757fe5b049392505050565b600082821115614526576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526128e0908490614ee2565b6001600160a01b0383166145c35760405162461bcd60e51b8152600401808060200182810382526029815260200180615a4c6029913960400191505060405180910390fd5b6001600160a01b0382166146085760405162461bcd60e51b815260040180806020018281038252602781526020018061594d6027913960400191505060405180910390fd5b6146138383836128e0565b614650816040518060600160405280602a8152602001615bc8602a91396001600160a01b03861660009081526001602052604090205491906146db565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461467f9082614772565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561476a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561472f578181015183820152602001614717565b50505050905090810190601f16801561475c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156115ec576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526141c2908590614ee2565b6001600160a01b03821661486b5760405162461bcd60e51b8152600401808060200182810382526023815260200180615c206023913960400191505060405180910390fd5b614877600083836128e0565b6003546148849082614772565b6003556001600160a01b0382166000908152600160205260409020546148aa9082614772565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600061416d826040518060600160405280602981526020016159c96029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b15801561497157600080fd5b505afa158015614985573d6000803e3d6000fd5b505050506040513d602081101561499b57600080fd5b505191906146db565b6149ae83836142b8565b81906149fb5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561472f578181015183820152602001614717565b5060006001614a0985614b11565b6001600160a01b0385166000908152602087905260408120546001880180549490930394509290919084908110614a3c57fe5b60009182526020808320909101546001600160a01b0316808352908890526040909120839055600187018054919250829184908110614a7757fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918716815290879052604081205560018601805480614aba57fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505050505050565b6000826001018281548110614af557fe5b6000918252602090912001546001600160a01b03169392505050565b6001015490565b801580614b9e575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015614b7057600080fd5b505afa158015614b84573d6000803e3d6000fd5b505050506040513d6020811015614b9a57600080fd5b5051155b614bd95760405162461bcd60e51b8152600401808060200182810382526036815260200180615cc36036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526128e0908490614ee2565b6000614c3630614f93565b15905090565b6000614c46612ac1565b6001600160a01b031614614ca1576040805162461bcd60e51b815260206004820181905260248201527f494348494f776e61626c653a20616c726561647920696e697469616c697a6564604482015290519081900360640190fd5b614caa33614e42565b565b600054600160a81b900460ff1680614cc75750614cc7614c2b565b80614cdc5750600054600160a01b900460ff16155b614d175760405162461bcd60e51b81526004018080602001828103825260328152602001806159f26032913960400191505060405180910390fd5b600054600160a81b900460ff16158015614d4e576000805460ff60a01b1960ff60a81b19909116600160a81b1716600160a01b1790555b8251614d61906004906020860190615171565b508151614d75906005906020850190615171565b506006805460ff1916601217905580156128e0576000805460ff60a81b19169055505050565b614da583836142b8565b158190614df35760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561472f578181015183820152602001614717565b50506001828101805491820181556000818152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055905492815292905260409091206000199091019055565b6001600160a01b038116614e875760405162461bcd60e51b815260040180806020018281038252602a815260200180615b7d602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000614f37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614f999092919063ffffffff16565b8051909150156128e057808060200190516020811015614f5657600080fd5b50516128e05760405162461bcd60e51b815260040180806020018281038252602a815260200180615c43602a913960400191505060405180910390fd5b3b151590565b6060614fa88484600085614fb0565b949350505050565b606082471015614ff15760405162461bcd60e51b8152600401808060200182810382526026815260200180615ae96026913960400191505060405180910390fd5b614ffa85614f93565b61504b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106150895780518252601f19909201916020918201910161506a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146150eb576040519150601f19603f3d011682016040523d82523d6000602084013e6150f0565b606091505b509150915061510082828661510b565b979650505050505050565b6060831561511a5750816115ec565b82511561512a5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561472f578181015183820152602001614717565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826151a757600085556151ed565b82601f106151c057805160ff19168380011785556151ed565b828001600101855582156151ed579182015b828111156151ed5782518255916020019190600101906151d2565b506151f99291506151fd565b5090565b5b808211156151f957600081556001016151fe565b80518015158114610e3757600080fd5b600060208284031215615233578081fd5b81516001600160a01b03811681146115ec578182fd5b60006020828403121561525a578081fd5b6115ec82615212565b60008060408385031215615275578081fd5b61527e83615212565b9150602083015190509250929050565b60006020828403121561529f578081fd5b5051919050565b60008151808452815b818110156152cb576020818501810151868301820152016152af565b818111156152dc5782602083870101525b50601f01601f19169290920160200192915050565b7449434849204f6e65546f6b656e20466163746f727960581b815260150190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b600060018060a01b03808a16835260e060208401526153af60e084018a6152a6565b83810360408501526153c1818a6152a6565b97821660608501525094851660808301525091831660a083015290911660c0909101529392505050565b6001600160a01b0383168152604081016005831061540557fe5b8260208301529392505050565b6001600160a01b03929092168252602082015260400190565b60208082526030908201527f4f545631423a2063616e27742072656d6f766520746f6b656e2077697468207660408201526f061756c742062616c616e6365203e20360841b606082015260800190565b60208082526018908201527f4f545631423a20756e6b6e6f776e204d454d20746f6b656e0000000000000000604082015260600190565b6020808252601f908201527f4f545631423a20756e72656769737465726564206d696e74206d617374657200604082015260600190565b6020808252601e908201527f4f545631423a206e616d6520616e642073796d626f6c20617265205251440000604082015260600190565b6020808252603e908201527f4f545631423a2063616e27742061737369676e2073747261746567792074686160408201527f7420646f65736e2774207265636f676e697a652074686973207661756c740000606082015260800190565b6020808252601e908201527f4f545631423a20756e7265676973746572656420636f6e74726f6c6c65720000604082015260600190565b60208082526033908201527f4f545631423a2063616e27742072656d6f7665206173736574207769746820736040820152720747261746567792062616c616e6365203e203606c1b606082015260800190565b6020808252601d908201527f4f545631423a20756e6b6e6f776e207374726174656779206f776e6572000000604082015260600190565b6020808252601290820152714f545631423a206e6f20737472617465677960701b604082015260600190565b6020808252601590820152744f545631423a20756e6b6e6f776e206f7261636c6560581b604082015260600190565b60208082526023908201527f4f545631423a20756e72656769737465726564206f6e65546f6b656e206f7261604082015262636c6560e81b606082015260800190565b6020808252601d908201527f4f545631423a206e6f742074686520746f6b656e207374726174656779000000604082015260600190565b60208082526017908201527f4f545631423a65733a20756e6b6e6f776e20746f6b656e000000000000000000604082015260600190565b60208082526033908201527f4f545631423a206e657720666163746f727920646f65736e277420656d697420604082015272199858dd1bdc9e48199a5b99d95c9c1c9a5b9d606a1b606082015260800190565b6020808252601e908201527f4f545631423a20756e6b6e6f776e206f7261636c65206f7220746f6b656e0000604082015260600190565b6020808252601e908201527f4f545631423a206e6f74206f776e6572206f7220636f6e74726f6c6c65720000604082015260600190565b60208082526017908201527f4f545631423a63733a20756e6b6e6f776e20746f6b656e000000000000000000604082015260600190565b60208082526017908201527f4f545631423a20756e6b6e6f776e207374726174656779000000000000000000604082015260600190565b60208082526019908201527f4f545631423a20756e6b6e6f776e20636f6e74726f6c6c657200000000000000604082015260600190565b60208082526019908201527f4f545631423a20756e6b6e6f776e20636f6c6c61746572616c00000000000000604082015260600190565b60208082526014908201527327aa2b18a11d103ab735b737bbb7103a37b5b2b760611b604082015260600190565b6020808252601a908201527f4f545631423a20756e6b6e6f776e206d696e74206d617374657200000000000060408201526060019056fe4943484945524332303a207472616e7366657220746f20746865207a65726f20616464726573734943484945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654943484945524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f49434849496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644943484945524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734943484945524332303a207472616e736665722066726f6d20746865207a65726f20616464726573734f545631423a2045525220696e73657274696e6720636f6c6c61746572616c2061732061737365744943484945524332303a206275726e2066726f6d20746865207a65726f20616464726573734f545631423a2045525220696e73657274696e67204d454d20746f6b656e206173206173736574416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724943484945524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f545631423a204552522072656d6f76696e6720636f6c6c61746572616c20746f6b656e494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774943484945524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636549434849496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a65644943484945524332303a206d696e7420746f20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644943484945524332304275726e61626c653a206275726e20616d6f756e74206578636565647320616c6c6f77616e63654943484945524332303a20617070726f766520746f20746865207a65726f20616464726573735361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a26469706673582212204535440f5103147168fba0440a4d7194d574a4f64f6b9e19c1c1b80554bd39a464736f6c63430007060033494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAsset(address,address)": {
        "details": "asset inventory helps evaluate local holdings and enables strategy assignment",
        "params": {
          "oracle": "oracle to use for usd valuation. Must be registered in the factory and associated with token.",
          "token": "ERC20 token"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "assetAtIndex(uint256)": {
        "params": {
          "index": "row to inspect"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "balances(address)": {
        "params": {
          "token": "to inspect"
        }
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "changeController(address)": {
        "details": "controllers support the periodic() function which should be called occasionally to send gas to the controller",
        "params": {
          "controller_": "a deployed controller contract supporting the minimum interface and registered with the factory"
        }
      },
      "changeMintMaster(address,address)": {
        "details": "controllers support the periodic() function which should be called occasionally to send gas to the controller",
        "params": {
          "mintMaster_": "the new mintMaster implementation",
          "oneTokenOracle_": "intialize the mintMaster with this oracle. Must be registed in the factory."
        }
      },
      "closeStrategy(address)": {
        "details": "strategy remains assigned the asset with allowance set to 0.",
        "params": {
          "token": "ERC20 asset with a strategy to close. "
        }
      },
      "collateralTokenAtIndex(uint256)": {
        "params": {
          "index": "row to inspect"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "decreaseStrategyAllowance(address,uint256)": {
        "details": "adjusts the remaining allowance for automated transfers executed by the controller",
        "params": {
          "amount": "allowance decrease",
          "token": "ERC20 asset"
        }
      },
      "executeStrategy(address)": {
        "details": "normally used by the controller",
        "params": {
          "token": "the token strategy to execute"
        }
      },
      "fromStrategy(address,address,uint256)": {
        "params": {
          "amount": "amount to draw from the strategy",
          "strategy": "receiving address must match the assigned strategy",
          "token": "ERC20 asset"
        }
      },
      "getHoldings(address)": {
        "details": "not restricted to registered assets",
        "params": {
          "strategyBalance": "tokens in assigned strategy",
          "token": "ERC20 asset to report",
          "vaultBalance": "tokens held in this vault"
        }
      },
      "getMintingRatio(address)": {
        "params": {
          "collateralToken": "token to use for ratio calculation",
          "maxOrderVolume": "maximum order size",
          "ratio": "minting ratio"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "increaseStrategyAllowance(address,uint256)": {
        "details": "adjusts the remaining allowance for automated transfers executed by the controller",
        "params": {
          "amount": "allowance increase",
          "token": "ERC20 asset"
        }
      },
      "init(string,string,address,address,address,address,address)": {
        "details": "constructors are ineffective for proxy deployments",
        "params": {
          "collateral_": "a deployed, registered (in the factory) usd-pegged ERC20 token supporting the minimum interface",
          "controller_": "a deployed, compatible controller supporting the minimum interface",
          "memberToken_": "a deployed, registered (in the factory) ERC20 token supporting the minimum interface",
          "mintMaster_": "a deployed, compatible mintMaster supporting the minimum interface",
          "name_": "ERC20 name value",
          "oneTokenOracle_": "a deployed, compatible oracle supporting the minimum interface",
          "symbol_": "ERC20 symbol value"
        }
      },
      "isAsset(address)": {
        "params": {
          "token": "token to inspect"
        }
      },
      "isCollateral(address)": {
        "params": {
          "token": "token to inspect"
        }
      },
      "isOtherToken(address)": {
        "params": {
          "token": "token to inspect"
        }
      },
      "mint(address,uint256)": {
        "details": "takes the lessor of memberTokens allowance or the maximum allowed by the minting ratio and the balance in collateral",
        "params": {
          "collateralToken": "a registered ERC20 collateral token contract",
          "oneTokens": "exact number of oneTokens to receive"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "otherTokenAtIndex(uint256)": {
        "params": {
          "index": "row to inspect"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeem(address,uint256)": {
        "details": "first grant allowances, then redeem. Consider infinite collateral allowance and a sufficient memberToken allowance. Updates ratio and triggers controller.",
        "params": {
          "amount": "oneTokens to redeem equals collateral tokens to receive",
          "collateral": "form of ERC20 stable token to receive"
        }
      },
      "removeAsset(address)": {
        "details": "does not destroy holdings, but holdings are not accounted for",
        "params": {
          "token": "ERC20 token"
        }
      },
      "removeStrategy(address)": {
        "details": "closes the strategy and requires that all funds in the strategy are returned to the vault",
        "params": {
          "token": "the token strategy to remove. There are 0-1 strategys per asset"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFactory(address)": {
        "details": "accomodates factory upgrades",
        "params": {
          "newFactory": "address of the new factory"
        }
      },
      "setMintingFee(uint256)": {
        "params": {
          "fee": "fee, 18 decimals, e.g. 2% = 20000000000000000"
        }
      },
      "setRedemptionFee(uint256)": {
        "params": {
          "fee": "fee, 18 decimals, e.g. 2% = 20000000000000000"
        }
      },
      "setStrategy(address,address,uint256)": {
        "details": "strategy must be registered with the factory",
        "params": {
          "allowance": "ERC20 allowance sets a limit on funds to transfer to the strategy",
          "strategy": "deployed strategy contract that is registered with the factor",
          "token": "ERC20 asset"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "toStrategy(address,address,uint256)": {
        "details": "works independently of strategy allowance",
        "params": {
          "amount": "amount to send",
          "strategy": "receiving address must match the assigned strategy",
          "token": "ERC20 asset"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateMintingRatio(address)": {
        "details": "acceptable for gas-paying external actors to call this function",
        "params": {
          "collateralToken": "token to use for ratio calculation",
          "maxOrderVolume": "maximum order size",
          "ratio": "minting ratio"
        }
      }
    },
    "stateVariables": {
      "liabilities": {
        "details": "token => liability"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAsset(address,address)": {
        "notice": "governance can add an asset"
      },
      "assetAtIndex(uint256)": {
        "notice": "returns the ERC20 contract address at the index"
      },
      "assetCount()": {
        "notice": "returns the sum of collateral and non-collateral ERC20 token contracts"
      },
      "balances(address)": {
        "notice": "returns the local balance and funds held in the assigned strategy, if any"
      },
      "changeController(address)": {
        "notice": "governance can appoint a new controller with distinct internal logic"
      },
      "changeMintMaster(address,address)": {
        "notice": "change the mintMaster"
      },
      "closeStrategy(address)": {
        "notice": "governance can close a strategy"
      },
      "collateralTokenAtIndex(uint256)": {
        "notice": "returns the address of an ERC20 token collateral contract at the index"
      },
      "collateralTokenCount()": {
        "notice": "pointreturns the number of acceptable collateral token contracts"
      },
      "decreaseStrategyAllowance(address,uint256)": {
        "notice": "governance can manage an allowance for a token strategy"
      },
      "executeStrategy(address)": {
        "notice": "governance can execute a strategy to trigger innner logic within the strategy"
      },
      "fromStrategy(address,address,uint256)": {
        "notice": "governance can transfer assets from the strategy to this vault"
      },
      "getHoldings(address)": {
        "notice": "read the vault balance and strategy balance of a given token"
      },
      "getMintingRatio(address)": {
        "notice": "read the minting ratio and maximum order volume prescribed by the mintMaster"
      },
      "increaseStrategyAllowance(address,uint256)": {
        "notice": "governance can manage an allowance for a token strategy"
      },
      "init(string,string,address,address,address,address,address)": {
        "notice": "initializes a proxied instance of the implementation"
      },
      "isAsset(address)": {
        "notice": "returns true if the token contract is a registered asset of either type"
      },
      "isCollateral(address)": {
        "notice": "returns true if the token contract is recognized collateral"
      },
      "isOtherToken(address)": {
        "notice": "returns true if the token contract is registered and is not collateral"
      },
      "liabilities(address)": {
        "notice": "sum of userBalances for each collateral token are not counted in treasury valuations"
      },
      "mint(address,uint256)": {
        "notice": "convert member tokens and collateral tokens into oneTokens. requires sufficient allowances for both tokens"
      },
      "otherTokenAtIndex(uint256)": {
        "notice": "returns the non-collateral token contract at the index"
      },
      "otherTokenCount()": {
        "notice": "returns the count of registered ERC20 asset contracts that not collateral"
      },
      "redeem(address,uint256)": {
        "notice": "redeem oneTokens for collateral tokens at 1:1 - applies fee %"
      },
      "removeAsset(address)": {
        "notice": "governance can remove an asset from treasury and collateral value accounting"
      },
      "removeStrategy(address)": {
        "notice": "governance can remove a strategy"
      },
      "setFactory(address)": {
        "notice": "adopt a new factory"
      },
      "setMintingFee(uint256)": {
        "notice": "governance sets the adjustable fee"
      },
      "setRedemptionFee(uint256)": {
        "notice": "governance sets the adjustable fee"
      },
      "setStrategy(address,address,uint256)": {
        "notice": "governance optionally assigns a strategy to an asset and sets a strategy allowance"
      },
      "toStrategy(address,address,uint256)": {
        "notice": "governance can transfer assets from the vault to a strategy"
      },
      "updateMintingRatio(address)": {
        "notice": "adjust the minting ratio"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9548,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9472,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9474,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 8922,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8928,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 8930,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 8932,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8934,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 8936,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "_decimals",
        "offset": 0,
        "slot": "6",
        "type": "t_uint8"
      },
      {
        "astId": 12225,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "oneTokenFactory",
        "offset": 1,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 12228,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "controller",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 12231,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "mintMaster",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 12234,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "memberToken",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 12236,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "collateralTokenSet",
        "offset": 0,
        "slot": "10",
        "type": "t_struct(Set)6631_storage"
      },
      {
        "astId": 12238,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "otherTokenSet",
        "offset": 0,
        "slot": "12",
        "type": "t_struct(Set)6631_storage"
      },
      {
        "astId": 12245,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "assetSet",
        "offset": 0,
        "slot": "14",
        "type": "t_struct(Set)6631_storage"
      },
      {
        "astId": 12250,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "assets",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_struct(Asset)12243_storage)"
      },
      {
        "astId": 11651,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "mintingFee",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 11654,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "redemptionFee",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 11659,
        "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
        "label": "liabilities",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Asset)12243_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct OneTokenV1Base.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)12243_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Asset)12243_storage": {
        "encoding": "inplace",
        "label": "struct OneTokenV1Base.Asset",
        "members": [
          {
            "astId": 12240,
            "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
            "label": "oracle",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12242,
            "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
            "label": "strategy",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)6631_storage": {
        "encoding": "inplace",
        "label": "struct AddressSet.Set",
        "members": [
          {
            "astId": 6627,
            "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
            "label": "keyPointers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 6630,
            "contract": "contracts/version/v1/OneTokenV1.sol:OneTokenV1",
            "label": "keyList",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}