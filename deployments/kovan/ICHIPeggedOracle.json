{
  "address": "0x09860F317b3Cefc55126101E184522056c1Ea321",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oneTokenFactory_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "indexToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "DescriptionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "moduleType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ModuleDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        }
      ],
      "name": "OracleDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        }
      ],
      "name": "OracleInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MODULE_TYPE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountUsd",
          "type": "uint256"
        }
      ],
      "name": "amountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "volatility",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleType",
      "outputs": [
        {
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountNormal",
          "type": "uint256"
        }
      ],
      "name": "normalizedToTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oneTokenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "volatility",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "name": "tokensToNormalized",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountNormal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf9cf3ecd53323cfffb40ff94e3cf3c11be59180d6db4692f31c3c4753c9d5109",
  "receipt": {
    "to": null,
    "from": "0x451Efff92a3a1471b7af9DDc1369D9D157E6475A",
    "contractAddress": "0x09860F317b3Cefc55126101E184522056c1Ea321",
    "transactionIndex": 0,
    "gasUsed": "883621",
    "logsBloom": "0x00000000000000000000000044000000000000000000000000800000000000000000000000000000000000010000000000000000000000000000000000004000000000000000000040000000000000000001000000000040001000000000000000000000020000000000000000001800000000000000000000000000000000400000000000000000000000000000000000000000000000800000000000000000000000000000000000000000001000000000000000000000000004000000000000000000000000000000000000000000000000040000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xd3b30fc6c435fb542e9bac6515077e0f78d24e39f87b5eb1a451049fefb4963f",
    "transactionHash": "0xf9cf3ecd53323cfffb40ff94e3cf3c11be59180d6db4692f31c3c4753c9d5109",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25062854,
        "transactionHash": "0xf9cf3ecd53323cfffb40ff94e3cf3c11be59180d6db4692f31c3c4753c9d5109",
        "address": "0x09860F317b3Cefc55126101E184522056c1Ea321",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd3b30fc6c435fb542e9bac6515077e0f78d24e39f87b5eb1a451049fefb4963f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25062854,
        "transactionHash": "0xf9cf3ecd53323cfffb40ff94e3cf3c11be59180d6db4692f31c3c4753c9d5109",
        "address": "0x09860F317b3Cefc55126101E184522056c1Ea321",
        "topics": [
          "0x2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b8"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001d436f6c6c61746572616c205065676765642054657374204f7261636c65000000",
        "logIndex": 1,
        "blockHash": "0xd3b30fc6c435fb542e9bac6515077e0f78d24e39f87b5eb1a451049fefb4963f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 25062854,
        "transactionHash": "0xf9cf3ecd53323cfffb40ff94e3cf3c11be59180d6db4692f31c3c4753c9d5109",
        "address": "0x09860F317b3Cefc55126101E184522056c1Ea321",
        "topics": [
          "0x5ca37c59f6b6cafb39fb44368a097af590e5e220c2a015addc4b11977c34766b"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000b994c68b4ed03d8f0aa9cb1b1729fa9bbbaa75e7000000000000000000000000000000000000000000000000000000000000001d436f6c6c61746572616c205065676765642054657374204f7261636c65000000",
        "logIndex": 2,
        "blockHash": "0xd3b30fc6c435fb542e9bac6515077e0f78d24e39f87b5eb1a451049fefb4963f"
      }
    ],
    "blockNumber": 25062854,
    "cumulativeGasUsed": "883621",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6a47Dd32FC2737De5881d63FeC9f27670297fbE5",
    "Collateral Pegged Test Oracle",
    "0xB994c68B4ED03d8F0AA9Cb1b1729fA9bBbaa75E7"
  ],
  "solcInputHash": "149543c6066abfe7655600414f329617",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oneTokenFactory_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"indexToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"DescriptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"moduleType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ModuleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"}],\"name\":\"OracleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"}],\"name\":\"OracleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_TYPE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"}],\"name\":\"amountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volatility\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountNormal\",\"type\":\"uint256\"}],\"name\":\"normalizedToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volatility\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"tokensToNormalized\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountNormal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amountRequired(address,uint256)\":{\"details\":\"token:usdToken is always 1:1 and volatility is always 1\",\"params\":{\"amountTokens\":\"tokens required, token native precision\",\"amountUsd\":\"Usd required, precision 18\",\"token\":\"base token\",\"volatility\":\"metric for future use-cases\"}},\"constructor\":{\"params\":{\"description_\":\"description has no bearing on logic\",\"indexToken_\":\"token to use for price quotes\",\"oneTokenFactory_\":\"oneToken factory to bind to\"}},\"init(address)\":{\"params\":{\"baseToken\":\"oracles _can be_ multi-tenant with separately initialized baseTokens\"}},\"normalizedToTokens(address,uint256)\":{\"params\":{\"amountNormal\":\"quantity in precision-18\",\"amountTokens\":\"quantity scaled to token decimals()\",\"token\":\"ERC20 token contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"read(address,uint256)\":{\"details\":\"amountTokens:amountUsd is always 1:1, adjusted for normalized scale, and volatility is always 0\",\"params\":{\"amountTokens\":\"quantity, token native precision\",\"amountUsd\":\"US dollar equivalentm, precision 18\",\"token\":\"base token\",\"volatility\":\"metric for future use-cases\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokensToNormalized(address,uint256)\":{\"params\":{\"amountNormal\":\"quantity in precision-18\",\"amountTokens\":\"quantity scaled to token decimals\",\"token\":\"ERC20 token contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"update(address)\":{\"details\":\"there is nothing to do in this case\"},\"updateDescription(string)\":{\"params\":{\"description\":\"new module desciption\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"amountRequired(address,uint256)\":{\"notice\":\"returns the tokens needed to reach a target usd value\"},\"init(address)\":{\"notice\":\"oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory.\"},\"normalizedToTokens(address,uint256)\":{\"notice\":\"converts normalized precision 18 amounts to token native precision amounts, truncates low-order values\"},\"read(address,uint256)\":{\"notice\":\"returns equivalent amount of index tokens for an amount of baseTokens and volatility metric\"},\"tokensToNormalized(address,uint256)\":{\"notice\":\"converts token native precision amounts to normalized precision 18 amounts\"},\"update(address)\":{\"notice\":\"update is called when a oneToken wants to persist observations\"},\"updateDescription(string)\":{\"notice\":\"set a module description\"}},\"notice\":\"Returns 1:1, scaled to 18 \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/pegged/ICHIPeggedOracle.sol\":\"ICHIPeggedOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/_openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/common/ICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../oz_modified/ICHIOwnable.sol\\\";\\nimport \\\"../oz_modified/ICHIInitializable.sol\\\";\\nimport \\\"../interface/IERC20Extended.sol\\\";\\nimport \\\"../interface/IICHICommon.sol\\\";\\n\\ncontract ICHICommon is IICHICommon, ICHIOwnable, ICHIInitializable {\\n\\n    uint256 constant PRECISION = 10 ** 18;\\n    uint256 constant INFINITE = uint256(0-1);\\n    address constant NULL_ADDRESS = address(0);\\n    \\n    // @dev internal fingerprints help prevent deployment-time governance errors\\n\\n    bytes32 constant COMPONENT_CONTROLLER = keccak256(abi.encodePacked(\\\"ICHI V1 Controller\\\"));\\n    bytes32 constant COMPONENT_VERSION = keccak256(abi.encodePacked(\\\"ICHI V1 OneToken Implementation\\\"));\\n    bytes32 constant COMPONENT_STRATEGY = keccak256(abi.encodePacked(\\\"ICHI V1 Strategy Implementation\\\"));\\n    bytes32 constant COMPONENT_MINTMASTER = keccak256(abi.encodePacked(\\\"ICHI V1 MintMaster Implementation\\\"));\\n    bytes32 constant COMPONENT_ORACLE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    bytes32 constant COMPONENT_VOTERROLL = keccak256(abi.encodePacked(\\\"ICHI V1 VoterRoll Implementation\\\"));\\n    bytes32 constant COMPONENT_FACTORY = keccak256(abi.encodePacked(\\\"ICHI OneToken Factory\\\"));\\n}\\n\",\"keccak256\":\"0x42378732873814c18db826c3ba6ca60976f1669fa646d82563b1482261583c83\",\"license\":\"BUSL-1.1\"},\"contracts/common/ICHIModuleCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IModule.sol\\\";\\nimport \\\"../interface/IOneTokenFactory.sol\\\";\\nimport \\\"../interface/IOneTokenV1Base.sol\\\";\\nimport \\\"./ICHICommon.sol\\\";\\n\\nabstract contract ICHIModuleCommon is IModule, ICHICommon {\\n    \\n    ModuleType public immutable override moduleType;\\n    string public override moduleDescription;\\n    address public immutable override oneTokenFactory;\\n\\n    event ModuleDeployed(address sender, ModuleType moduleType, string description);\\n    event DescriptionUpdated(address sender, string description);\\n   \\n    modifier onlyKnownToken {\\n        require(IOneTokenFactory(oneTokenFactory).isOneToken(msg.sender), \\\"ICHIModuleCommon: msg.sender is not a known oneToken\\\");\\n        _;\\n    }\\n    \\n    modifier onlyTokenOwner (address oneToken) {\\n        require(msg.sender == IOneTokenV1Base(oneToken).owner(), \\\"ICHIModuleCommon: msg.sender is not oneToken owner\\\");\\n        _;\\n    }\\n\\n    modifier onlyModuleOrFactory {\\n        if(!IOneTokenFactory(oneTokenFactory).isModule(msg.sender)) {\\n            require(msg.sender == oneTokenFactory, \\\"ICHIModuleCommon: msg.sender is not module owner, token factory or registed module\\\");\\n        }\\n        _;\\n    }\\n    \\n    /**\\n     @notice modules are bound to the factory at deployment time\\n     @param oneTokenFactory_ factory to bind to\\n     @param moduleType_ type number helps prevent governance errors\\n     @param description_ human-readable, descriptive only\\n     */    \\n    constructor (address oneTokenFactory_, ModuleType moduleType_, string memory description_) {\\n        require(oneTokenFactory_ != NULL_ADDRESS, \\\"ICHIModuleCommon: oneTokenFactory cannot be empty\\\");\\n        require(bytes(description_).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        oneTokenFactory = oneTokenFactory_;\\n        moduleType = moduleType_;\\n        moduleDescription = description_;\\n        emit ModuleDeployed(msg.sender, moduleType_, description_);\\n    }\\n\\n    /**\\n     @notice set a module description\\n     @param description new module desciption\\n     */\\n    function updateDescription(string memory description) external onlyOwner override {\\n        require(bytes(description).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        moduleDescription = description;\\n        emit DescriptionUpdated(msg.sender, description);\\n    }  \\n}\\n\",\"keccak256\":\"0xd2c11af9e25df79014bb16e9a09e5cc3b1fc3552ac47ee55f90d681e558a58b6\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IERC20Extended.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Extended is IERC20 {\\n    \\n    function decimals() external view returns(uint8);\\n    function symbol() external view returns(string memory);\\n    function name() external view returns(string memory);\\n}\\n\",\"keccak256\":\"0x2ca69f362fa17acf5a0871f09ed8c7937a7ab4290d5d107d36d15f21de4b90cf\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHIOwnable.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IICHICommon is IICHIOwnable, InterfaceCommon {}\\n\",\"keccak256\":\"0xe6cd96a82817180d3b07502d5f9030cb538599311ca618a28fd9abc4ec9f12d3\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\ninterface IICHIOwnable {\\n    \\n    function renounceOwnership() external;\\n    function transferOwnership(address newOwner) external;\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0106ebef69259a8f6b75ed0bd8cafab30dec9b5845887bb46941f37c93b93018\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IModule.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IModule is IICHICommon { \\n       \\n    function oneTokenFactory() external view returns(address);\\n    function updateDescription(string memory description) external;\\n    function moduleDescription() external view returns(string memory);\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function moduleType() external view returns(ModuleType);\\n}\\n\",\"keccak256\":\"0xe90ce2dc34f907536849d364de54cdddb9b09cb958020972121624d1d6f519e0\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IOneTokenFactory is InterfaceCommon {\\n\\n    function oneTokenProxyAdmins(address) external returns(address);\\n    function deployOneTokenProxy(\\n        string memory name,\\n        string memory symbol,\\n        address governance, \\n        address version,\\n        address controller,\\n        address mintMaster,              \\n        address memberToken, \\n        address collateral,\\n        address oneTokenOracle\\n    ) \\n        external \\n        returns(address newOneTokenProxy, address proxyAdmin);\\n\\n    function admitModule(address module, ModuleType moduleType, string memory name, string memory url) external;\\n    function updateModule(address module, string memory name, string memory url) external;\\n    function removeModule(address module) external;\\n\\n    function admitForeignToken(address foreignToken, bool collateral, address oracle) external;\\n    function updateForeignToken(address foreignToken, bool collateral) external;\\n    function removeForeignToken(address foreignToken) external;\\n\\n    function assignOracle(address foreignToken, address oracle) external;\\n    function removeOracle(address foreignToken, address oracle) external; \\n\\n    /**\\n     * View functions\\n     */\\n    \\n    function MODULE_TYPE() external view returns(bytes32);\\n\\n    function oneTokenCount() external view returns(uint256);\\n    function oneTokenAtIndex(uint256 index) external view returns(address);\\n    function isOneToken(address oneToken) external view returns(bool);\\n \\n    // modules\\n\\n    function moduleCount() external view returns(uint256);\\n    function moduleAtIndex(uint256 index) external view returns(address module);\\n    function isModule(address module) external view returns(bool);\\n    function isValidModuleType(address module, ModuleType moduleType) external view returns(bool);\\n\\n    // foreign tokens\\n\\n    function foreignTokenCount() external view returns(uint256);\\n    function foreignTokenAtIndex(uint256 index) external view returns(address);\\n    function foreignTokenInfo(address foreignToken) external view returns(bool collateral, uint256 oracleCount);\\n    function foreignTokenOracleCount(address foreignToken) external view returns(uint256);\\n    function foreignTokenOracleAtIndex(address foreignToken, uint256 index) external view returns(address);\\n    function isOracle(address foreignToken, address oracle) external view returns(bool);\\n    function isForeignToken(address foreignToken) external view returns(bool);\\n    function isCollateral(address foreignToken) external view returns(bool);\\n}\",\"keccak256\":\"0x058f27f1dc56c298d2f8ffa88d1fb67dc7c421327089bfb3a77ef9ecf943c6e4\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenV1Base.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./IERC20Extended.sol\\\";\\n\\ninterface IOneTokenV1Base is IICHICommon, IERC20 {\\n    \\n    function init(string memory name_, string memory symbol_, address oneTokenOracle_, address controller_,  address mintMaster_, address memberToken_, address collateral_) external;\\n    function changeController(address controller_) external;\\n    function changeMintMaster(address mintMaster_, address oneTokenOracle) external;\\n    function addAsset(address token, address oracle) external;\\n    function removeAsset(address token) external;\\n    function setStrategy(address token, address strategy, uint256 allowance) external;\\n    function executeStrategy(address token) external;\\n    function removeStrategy(address token) external;\\n    function closeStrategy(address token) external;\\n    function increaseStrategyAllowance(address token, uint256 amount) external;\\n    function decreaseStrategyAllowance(address token, uint256 amount) external;\\n    function setFactory(address newFactory) external;\\n\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function oneTokenFactory() external view returns(address);\\n    function controller() external view returns(address);\\n    function mintMaster() external view returns(address);\\n    function memberToken() external view returns(address);\\n    function assets(address) external view returns(address, address);\\n    function balances(address token) external view returns(uint256 inVault, uint256 inStrategy);\\n    function collateralTokenCount() external view returns(uint256);\\n    function collateralTokenAtIndex(uint256 index) external view returns(address);\\n    function isCollateral(address token) external view returns(bool);\\n    function otherTokenCount() external view  returns(uint256);\\n    function otherTokenAtIndex(uint256 index) external view returns(address); \\n    function isOtherToken(address token) external view returns(bool);\\n    function assetCount() external view returns(uint256);\\n    function assetAtIndex(uint256 index) external view returns(address); \\n    function isAsset(address token) external view returns(bool);\\n}\\n\",\"keccak256\":\"0x1b11cd3a73710c7b8fd77f7cd1e149eea49e8c804305bd77bbebd6deb0017f22\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IOracle is IModule {\\n\\n    function init(address baseToken) external;\\n    function update(address token) external;\\n    function indexToken() external view returns(address);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */\\n    function read(address token, uint amountTokens) external view returns(uint amountUsd, uint volatility);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens token quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */    \\n    function amountRequired(address token, uint amountUsd) external view returns(uint amountTokens, uint volatility);\\n\\n    /**\\n     @notice converts normalized precision-18 amounts to token native precision amounts, truncates low-order values\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */    \\n    function normalizedToTokens(address token, uint amountNormal) external view returns(uint amountTokens);\\n\\n    /**\\n     @notice converts token native precision amounts to normalized precision-18 amounts\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */  \\n    function tokensToNormalized(address token, uint amountTokens) external view returns(uint amountNormal);\\n}\\n\",\"keccak256\":\"0x5c7b98506f4108eee15448df89857582197b474e2b04cd397c4d2eed7c1a92ff\",\"license\":\"BUSL-1.1\"},\"contracts/interface/InterfaceCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface InterfaceCommon {\\n\\n    enum ModuleType { Version, Controller, Strategy, MintMaster, Oracle }\\n\\n}\\n\",\"keccak256\":\"0x818fc764b7da096a438fc9322588d4fbe0fc655d952033a3d2b5d86a863570a2\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/OracleCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IOracle.sol\\\";\\nimport \\\"../common/ICHIModuleCommon.sol\\\";\\n\\nabstract contract OracleCommon is IOracle, ICHIModuleCommon {\\n\\n    uint256 constant NORMAL = 18;\\n    bytes32 constant public override MODULE_TYPE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    address public override indexToken;\\n\\n    event OracleDeployed(address sender, string description, address indexToken);\\n    event OracleInitialized(address sender, address baseToken, address indexToken);\\n    \\n    /**\\n     @notice records the oracle description and the index that will be used for all quotes\\n     @dev oneToken implementations can share oracles\\n     @param oneTokenFactory_ oneTokenFactory to bind to\\n     @param description_ all modules have a description. No processing or validation\\n     @param indexToken_ every oracle has an index token for reporting the value of a base token\\n     */\\n    constructor(address oneTokenFactory_, string memory description_, address indexToken_) \\n        ICHIModuleCommon(oneTokenFactory_, ModuleType.Oracle, description_) \\n    { \\n        require(indexToken_ != NULL_ADDRESS, \\\"OracleCommon: indexToken cannot be empty\\\");\\n        indexToken = indexToken_;\\n        emit OracleDeployed(msg.sender, description_, indexToken_);\\n    }\\n\\n    /**\\n     @notice oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory.\\n     @param baseToken oracles _can be_ multi-tenant with separately initialized baseTokens\\n     */\\n    function init(address baseToken) external onlyModuleOrFactory virtual override {\\n        emit OracleInitialized(msg.sender, baseToken, indexToken);\\n    }\\n\\n    /**\\n     @notice converts normalized precision 18 amounts to token native precision amounts, truncates low-order values\\n     @param token ERC20 token contract\\n     @param amountNormal quantity in precision-18\\n     @param amountTokens quantity scaled to token decimals()\\n     */    \\n    function normalizedToTokens(address token, uint256 amountNormal) public view override returns(uint256 amountTokens) {\\n        IERC20Extended t = IERC20Extended(token);\\n        uint256 nativeDecimals = t.decimals();\\n        require(nativeDecimals <= 18, \\\"OracleCommon: unsupported token precision (greater than 18)\\\");\\n        if(nativeDecimals == NORMAL) return amountNormal;\\n        // round 1/2 values up\\n        return (((amountNormal * 10) + 5) / ( 10 ** (NORMAL - nativeDecimals))) / 10;\\n    }\\n\\n    /**\\n     @notice converts token native precision amounts to normalized precision 18 amounts\\n     @param token ERC20 token contract\\n     @param amountTokens quantity scaled to token decimals\\n     @param amountNormal quantity in precision-18\\n     */  \\n    function tokensToNormalized(address token, uint256 amountTokens) public view override returns(uint256 amountNormal) {\\n        IERC20Extended t = IERC20Extended(token);\\n        uint256 nativeDecimals = t.decimals();\\n        require(nativeDecimals <= 18, \\\"OracleCommon: unsupported token precision (greater than 18)\\\");\\n        if(nativeDecimals == NORMAL) return amountTokens;\\n        return amountTokens * ( 10 ** (NORMAL - nativeDecimals));\\n    }\\n\\n}\\n\",\"keccak256\":\"0xd87eefd8093351dc2f647b307bef4dfa70ac72b887b5cf2f129cc71c97ad51d6\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/pegged/ICHIPeggedOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../OracleCommon.sol\\\";\\nimport \\\"../../interface/IERC20Extended.sol\\\";\\n\\n/**\\n @notice Returns 1:1, scaled to 18 \\n */\\n\\ncontract ICHIPeggedOracle is OracleCommon {\\n\\n    /** \\n     @param oneTokenFactory_ oneToken factory to bind to\\n     @param description_ description has no bearing on logic\\n     @param indexToken_ token to use for price quotes\\n     */\\n    constructor(address oneTokenFactory_, string memory description_, address indexToken_)\\n        OracleCommon(oneTokenFactory_, description_, indexToken_) {}\\n\\n    /**\\n     @notice update is called when a oneToken wants to persist observations\\n     @dev there is nothing to do in this case\\n     */\\n    function update(address /* token */) external override {}\\n\\n    /**\\n     @notice returns equivalent amount of index tokens for an amount of baseTokens and volatility metric\\n     @dev amountTokens:amountUsd is always 1:1, adjusted for normalized scale, and volatility is always 0\\n     @param token base token\\n     @param amountTokens quantity, token native precision\\n     @param amountUsd US dollar equivalentm, precision 18\\n     @param volatility metric for future use-cases\\n     */\\n    function read(address token, uint256 amountTokens) external view override returns(uint256 amountUsd, uint256 volatility) {\\n        amountUsd = tokensToNormalized(token, amountTokens);\\n        volatility = 1;\\n    }\\n\\n    /**\\n     @notice returns the tokens needed to reach a target usd value\\n     @dev token:usdToken is always 1:1 and volatility is always 1\\n     @param token base token\\n     @param amountUsd Usd required, precision 18\\n     @param amountTokens tokens required, token native precision\\n     @param volatility metric for future use-cases\\n     */\\n    function amountRequired(address token, uint256 amountUsd) external view override returns(uint256 amountTokens, uint256 volatility) {\\n        amountTokens = normalizedToTokens(token, amountUsd);\\n        volatility = 1;\\n    }\\n}\\n\",\"keccak256\":\"0x46bc5878ad95afb8f759c0b1f10d20beb20b2394a227f3cffad6fe5f647a0232\",\"license\":\"BUSL-1.1\"},\"contracts/oz_modified/ICHIInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/utils/Address.sol\\\";\\n\\ncontract ICHIInitializable {\\n\\n    bool private _initialized;\\n    bool private _initializing;\\n\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"ICHIInitializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    modifier initialized {\\n        require(_initialized, \\\"ICHIInitializable: contract is not initialized\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x9d4cb3bf21309bc5621f730a885c9c22e1fc6073f9fcf3857c45c4d9f0ea82bf\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @dev Constructor visibility has been removed from the original.\\n * _transferOwnership() has been added to support proxied deployments.\\n * Abstract tag removed from contract block.\\n * Added interface inheritance and override modifiers.\\n * Changed contract identifier in require error messages.\\n */\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"../interface/IICHIOwnable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract ICHIOwnable is IICHIOwnable, Context {\\n    \\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n     \\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"ICHIOwnable: caller is not the owner\\\");\\n        _;\\n    }    \\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     * Ineffective for proxied deployed. Use initOwnable.\\n     */\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     @dev initialize proxied deployment\\n     */\\n    function initOwnable() internal {\\n        require(owner() == address(0), \\\"ICHIOwnable: already initialized\\\");\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual override returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual override onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev be sure to call this in the initialization stage of proxied deployment or owner will not be set\\n     */\\n\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"ICHIOwnable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x552664765e88fb3e7949f3ff17f264968e9fca3775e3e7f241ce965129af8658\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200134c3803806200134c833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b506040526020015191508390508282826004836200010b33620003da565b6001600160a01b038316620001525760405162461bcd60e51b81526004018080602001828103825260318152602001806200131b6031913960400191505060405180910390fd5b6000815111620001945760405162461bcd60e51b815260040180806020018281038252602d8152602001806200129c602d913960400191505060405180910390fd5b6001600160601b0319606084901b1660a052816004811115620001b357fe5b6080816004811115620001c257fe5b60f81b9052508051620001dd9060019060208401906200047c565b507f2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b833838360405180846001600160a01b031681526020018360048111156200022257fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200026257818101518382015260200162000248565b50505050905090810190601f168015620002905780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050506001600160a01b038116620002e95760405162461bcd60e51b8152600401808060200182810382526028815260200180620012f36028913960400191505060405180910390fd5b80600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f5ca37c59f6b6cafb39fb44368a097af590e5e220c2a015addc4b11977c34766b33838360405180846001600160a01b0316815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156200039157818101518382015260200162000377565b50505050905090810190601f168015620003bf5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050505062000528565b6001600160a01b038116620004215760405162461bcd60e51b815260040180806020018281038252602a815260200180620012c9602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004b45760008555620004ff565b82601f10620004cf57805160ff1916838001178555620004ff565b82800160010185558215620004ff579182015b82811115620004ff578251825591602001919060010190620004e2565b506200050d92915062000511565b5090565b5b808211156200050d576000815560010162000512565b60805160f81c60a05160601c610d406200055c600039806104115280610492528061074b5250806106705250610d406000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063b7b8bae411610066578063b7b8bae4146102d9578063e735b48a14610305578063e7d015f2146103ab578063f2fde38b146103b3576100f5565b8063715018a6146102285780638da5cb5b14610230578063a2729c2314610254578063b5966db81461025c576100f5565b806327d3cb41116100d357806327d3cb411461018d5780634d161865146101cb5780635775029f146101f75780636465e69f146101ff576100f5565b8063014c2add146100fa57806319ab453c1461013f5780631c1b877214610167575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356103d9565b6040805192835260208301919091528051918290030190f35b6101656004803603602081101561015557600080fd5b50356001600160a01b03166103f1565b005b6101656004803603602081101561017d57600080fd5b50356001600160a01b031661053d565b6101b9600480360360408110156101a357600080fd5b506001600160a01b038135169060200135610540565b60408051918252519081900360200190f35b610126600480360360408110156101e157600080fd5b506001600160a01b038135169060200135610617565b6101b9610624565b61020761066e565b6040518082600481111561021757fe5b815260200191505060405180910390f35b610165610692565b61023861073a565b604080516001600160a01b039092168252519081900360200190f35b610238610749565b61026461076d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029e578181015183820152602001610286565b50505050905090810190601f1680156102cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156102ef57600080fd5b506001600160a01b0381351690602001356107fa565b6101656004803603602081101561031b57600080fd5b81019060208101813564010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184600183028401116401000000008311171561036a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108e8945050505050565b610238610a47565b610165600480360360208110156103c957600080fd5b50356001600160a01b0316610a56565b6000806103e68484610540565b946001945092505050565b604080516342f6e38960e01b815233600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342f6e389916024808301926020929190829003018186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b50516104ee57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ee5760405162461bcd60e51b8152600401808060200182810382526052815260200180610cb96052913960600191505060405180910390fd5b600254604080513381526001600160a01b03808516602083015290921682820152517f615e5388e077a0f73212d5edcf91ad20a6738753574b7a3749872baa98995be59181900360600190a150565b50565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d60208110156105ab57600080fd5b505160ff16905060128111156105f25760405162461bcd60e51b815260040180806020018281038252603b815260200180610c54603b913960400191505060405180910390fd5b6012811415610605578392505050610611565b601203600a0a83029150505b92915050565b6000806103e684846107fa565b60405160200180807f49434849205631204f7261636c6520496d706c656d656e746174696f6e000000815250601d0190506040516020818303038152906040528051906020012081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069a610abd565b6001600160a01b03166106ab61073a565b6001600160a01b0316146106f05760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505081565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561083b57600080fd5b505afa15801561084f573d6000803e3d6000fd5b505050506040513d602081101561086557600080fd5b505160ff16905060128111156108ac5760405162461bcd60e51b815260040180806020018281038252603b815260200180610c54603b913960400191505060405180910390fd5b60128114156108bf578392505050610611565b600a81601203600a0a85600a02600501816108d657fe5b04816108de57fe5b0495945050505050565b6108f0610abd565b6001600160a01b031661090161073a565b6001600160a01b0316146109465760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b60008151116109865760405162461bcd60e51b815260040180806020018281038252602d815260200180610c03602d913960400191505060405180910390fd5b8051610999906001906020840190610b61565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a095781810151838201526020016109f1565b50505050905090810190601f168015610a365780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6002546001600160a01b031681565b610a5e610abd565b6001600160a01b0316610a6f61073a565b6001600160a01b031614610ab45760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b61053d81610ac1565b3390565b6001600160a01b038116610b065760405162461bcd60e51b815260040180806020018281038252602a815260200180610c8f602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610b975760008555610bdd565b82601f10610bb057805160ff1916838001178555610bdd565b82800160010185558215610bdd579182015b82811115610bdd578251825591602001919060010190610bc2565b50610be9929150610bed565b5090565b5b80821115610be95760008155600101610bee56fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f7261636c65436f6d6d6f6e3a20756e737570706f7274656420746f6b656e20707265636973696f6e202867726561746572207468616e20313829494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373494348494d6f64756c65436f6d6d6f6e3a206d73672e73656e646572206973206e6f74206d6f64756c65206f776e65722c20746f6b656e20666163746f7279206f72207265676973746564206d6f64756c65a26469706673582212204aaa2d4587b568d6ba82530169f819198826675fbc811505d2152d5ada7c88e864736f6c63430007060033494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f7261636c65436f6d6d6f6e3a20696e646578546f6b656e2063616e6e6f7420626520656d707479494348494d6f64756c65436f6d6d6f6e3a206f6e65546f6b656e466163746f72792063616e6e6f7420626520656d707479",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063b7b8bae411610066578063b7b8bae4146102d9578063e735b48a14610305578063e7d015f2146103ab578063f2fde38b146103b3576100f5565b8063715018a6146102285780638da5cb5b14610230578063a2729c2314610254578063b5966db81461025c576100f5565b806327d3cb41116100d357806327d3cb411461018d5780634d161865146101cb5780635775029f146101f75780636465e69f146101ff576100f5565b8063014c2add146100fa57806319ab453c1461013f5780631c1b877214610167575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356103d9565b6040805192835260208301919091528051918290030190f35b6101656004803603602081101561015557600080fd5b50356001600160a01b03166103f1565b005b6101656004803603602081101561017d57600080fd5b50356001600160a01b031661053d565b6101b9600480360360408110156101a357600080fd5b506001600160a01b038135169060200135610540565b60408051918252519081900360200190f35b610126600480360360408110156101e157600080fd5b506001600160a01b038135169060200135610617565b6101b9610624565b61020761066e565b6040518082600481111561021757fe5b815260200191505060405180910390f35b610165610692565b61023861073a565b604080516001600160a01b039092168252519081900360200190f35b610238610749565b61026461076d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029e578181015183820152602001610286565b50505050905090810190601f1680156102cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156102ef57600080fd5b506001600160a01b0381351690602001356107fa565b6101656004803603602081101561031b57600080fd5b81019060208101813564010000000081111561033657600080fd5b82018360208201111561034857600080fd5b8035906020019184600183028401116401000000008311171561036a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108e8945050505050565b610238610a47565b610165600480360360208110156103c957600080fd5b50356001600160a01b0316610a56565b6000806103e68484610540565b946001945092505050565b604080516342f6e38960e01b815233600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342f6e389916024808301926020929190829003018186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b50516104ee57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ee5760405162461bcd60e51b8152600401808060200182810382526052815260200180610cb96052913960600191505060405180910390fd5b600254604080513381526001600160a01b03808516602083015290921682820152517f615e5388e077a0f73212d5edcf91ad20a6738753574b7a3749872baa98995be59181900360600190a150565b50565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d60208110156105ab57600080fd5b505160ff16905060128111156105f25760405162461bcd60e51b815260040180806020018281038252603b815260200180610c54603b913960400191505060405180910390fd5b6012811415610605578392505050610611565b601203600a0a83029150505b92915050565b6000806103e684846107fa565b60405160200180807f49434849205631204f7261636c6520496d706c656d656e746174696f6e000000815250601d0190506040516020818303038152906040528051906020012081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069a610abd565b6001600160a01b03166106ab61073a565b6001600160a01b0316146106f05760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505081565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561083b57600080fd5b505afa15801561084f573d6000803e3d6000fd5b505050506040513d602081101561086557600080fd5b505160ff16905060128111156108ac5760405162461bcd60e51b815260040180806020018281038252603b815260200180610c54603b913960400191505060405180910390fd5b60128114156108bf578392505050610611565b600a81601203600a0a85600a02600501816108d657fe5b04816108de57fe5b0495945050505050565b6108f0610abd565b6001600160a01b031661090161073a565b6001600160a01b0316146109465760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b60008151116109865760405162461bcd60e51b815260040180806020018281038252602d815260200180610c03602d913960400191505060405180910390fd5b8051610999906001906020840190610b61565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a095781810151838201526020016109f1565b50505050905090810190601f168015610a365780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6002546001600160a01b031681565b610a5e610abd565b6001600160a01b0316610a6f61073a565b6001600160a01b031614610ab45760405162461bcd60e51b8152600401808060200182810382526024815260200180610c306024913960400191505060405180910390fd5b61053d81610ac1565b3390565b6001600160a01b038116610b065760405162461bcd60e51b815260040180806020018281038252602a815260200180610c8f602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610b975760008555610bdd565b82601f10610bb057805160ff1916838001178555610bdd565b82800160010185558215610bdd579182015b82811115610bdd578251825591602001919060010190610bc2565b50610be9929150610bed565b5090565b5b80821115610be95760008155600101610bee56fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f7261636c65436f6d6d6f6e3a20756e737570706f7274656420746f6b656e20707265636973696f6e202867726561746572207468616e20313829494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373494348494d6f64756c65436f6d6d6f6e3a206d73672e73656e646572206973206e6f74206d6f64756c65206f776e65722c20746f6b656e20666163746f7279206f72207265676973746564206d6f64756c65a26469706673582212204aaa2d4587b568d6ba82530169f819198826675fbc811505d2152d5ada7c88e864736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "amountRequired(address,uint256)": {
        "details": "token:usdToken is always 1:1 and volatility is always 1",
        "params": {
          "amountTokens": "tokens required, token native precision",
          "amountUsd": "Usd required, precision 18",
          "token": "base token",
          "volatility": "metric for future use-cases"
        }
      },
      "constructor": {
        "params": {
          "description_": "description has no bearing on logic",
          "indexToken_": "token to use for price quotes",
          "oneTokenFactory_": "oneToken factory to bind to"
        }
      },
      "init(address)": {
        "params": {
          "baseToken": "oracles _can be_ multi-tenant with separately initialized baseTokens"
        }
      },
      "normalizedToTokens(address,uint256)": {
        "params": {
          "amountNormal": "quantity in precision-18",
          "amountTokens": "quantity scaled to token decimals()",
          "token": "ERC20 token contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "read(address,uint256)": {
        "details": "amountTokens:amountUsd is always 1:1, adjusted for normalized scale, and volatility is always 0",
        "params": {
          "amountTokens": "quantity, token native precision",
          "amountUsd": "US dollar equivalentm, precision 18",
          "token": "base token",
          "volatility": "metric for future use-cases"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "tokensToNormalized(address,uint256)": {
        "params": {
          "amountNormal": "quantity in precision-18",
          "amountTokens": "quantity scaled to token decimals",
          "token": "ERC20 token contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "update(address)": {
        "details": "there is nothing to do in this case"
      },
      "updateDescription(string)": {
        "params": {
          "description": "new module desciption"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "amountRequired(address,uint256)": {
        "notice": "returns the tokens needed to reach a target usd value"
      },
      "init(address)": {
        "notice": "oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory."
      },
      "normalizedToTokens(address,uint256)": {
        "notice": "converts normalized precision 18 amounts to token native precision amounts, truncates low-order values"
      },
      "read(address,uint256)": {
        "notice": "returns equivalent amount of index tokens for an amount of baseTokens and volatility metric"
      },
      "tokensToNormalized(address,uint256)": {
        "notice": "converts token native precision amounts to normalized precision 18 amounts"
      },
      "update(address)": {
        "notice": "update is called when a oneToken wants to persist observations"
      },
      "updateDescription(string)": {
        "notice": "set a module description"
      }
    },
    "notice": "Returns 1:1, scaled to 18 ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9548,
        "contract": "contracts/oracle/pegged/ICHIPeggedOracle.sol:ICHIPeggedOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9472,
        "contract": "contracts/oracle/pegged/ICHIPeggedOracle.sol:ICHIPeggedOracle",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9474,
        "contract": "contracts/oracle/pegged/ICHIPeggedOracle.sol:ICHIPeggedOracle",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5588,
        "contract": "contracts/oracle/pegged/ICHIPeggedOracle.sol:ICHIPeggedOracle",
        "label": "moduleDescription",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 7791,
        "contract": "contracts/oracle/pegged/ICHIPeggedOracle.sol:ICHIPeggedOracle",
        "label": "indexToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}