{
  "address": "0x50b2632F4619a34e5BD9feCEaA08E8A853b55065",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oneTokenFactory_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "indexToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "DescriptionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "moduleType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ModuleDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        }
      ],
      "name": "OracleDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        }
      ],
      "name": "OracleInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "RegisterChainlinkOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "UnregisterChainlinkOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "UpdateChainlinkOracle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MODULE_TYPE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountUsd",
          "type": "uint256"
        }
      ],
      "name": "amountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "volatility",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "chainlinkOracles",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getThePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleType",
      "outputs": [
        {
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountNormal",
          "type": "uint256"
        }
      ],
      "name": "normalizedToTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oneTokenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "oracleAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oraclesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "volatility",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "registerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokens",
          "type": "uint256"
        }
      ],
      "name": "tokensToNormalized",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountNormal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unregisterOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "updateOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf35fc5eeb5a3aedd792a2557ca886d6211ed5fea4800879dfe0b45055ac8936a",
  "receipt": {
    "to": null,
    "from": "0x451Efff92a3a1471b7af9DDc1369D9D157E6475A",
    "contractAddress": "0x50b2632F4619a34e5BD9feCEaA08E8A853b55065",
    "transactionIndex": 2,
    "gasUsed": "1559845",
    "logsBloom": "0x
    "blockHash": "0x35e74469b0caa2570532c76fe238c3ff1576bf194044362ecb7c6aa2a4922ad6",
    "transactionHash": "0xf35fc5eeb5a3aedd792a2557ca886d6211ed5fea4800879dfe0b45055ac8936a",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 26110293,
        "transactionHash": "0xf35fc5eeb5a3aedd792a2557ca886d6211ed5fea4800879dfe0b45055ac8936a",
        "address": "0x50b2632F4619a34e5BD9feCEaA08E8A853b55065",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x35e74469b0caa2570532c76fe238c3ff1576bf194044362ecb7c6aa2a4922ad6"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 26110293,
        "transactionHash": "0xf35fc5eeb5a3aedd792a2557ca886d6211ed5fea4800879dfe0b45055ac8936a",
        "address": "0x50b2632F4619a34e5BD9feCEaA08E8A853b55065",
        "topics": [
          "0x2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b8"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000014436861696e6c696e6b204f7261636c6520555344000000000000000000000000",
        "logIndex": 3,
        "blockHash": "0x35e74469b0caa2570532c76fe238c3ff1576bf194044362ecb7c6aa2a4922ad6"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 26110293,
        "transactionHash": "0xf35fc5eeb5a3aedd792a2557ca886d6211ed5fea4800879dfe0b45055ac8936a",
        "address": "0x50b2632F4619a34e5BD9feCEaA08E8A853b55065",
        "topics": [
          "0x5ca37c59f6b6cafb39fb44368a097af590e5e220c2a015addc4b11977c34766b"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000014436861696e6c696e6b204f7261636c6520555344000000000000000000000000",
        "logIndex": 4,
        "blockHash": "0x35e74469b0caa2570532c76fe238c3ff1576bf194044362ecb7c6aa2a4922ad6"
      }
    ],
    "blockNumber": 26110293,
    "cumulativeGasUsed": "2052659",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6a47Dd32FC2737De5881d63FeC9f27670297fbE5",
    "Chainlink Oracle USD",
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
  ],
  "solcInputHash": "7d3dabb5bf8c1206ff059445672567bd",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oneTokenFactory_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"indexToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"DescriptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"moduleType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ModuleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"}],\"name\":\"OracleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"}],\"name\":\"OracleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"RegisterChainlinkOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"UnregisterChainlinkOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"UpdateChainlinkOracle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_TYPE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"}],\"name\":\"amountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volatility\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"chainlinkOracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getThePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountNormal\",\"type\":\"uint256\"}],\"name\":\"normalizedToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"oracleAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oraclesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volatility\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"registerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"tokensToNormalized\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountNormal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unregisterOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"updateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amountRequired(address,uint256)\":{\"params\":{\"amountTokens\":\"tokens required, token native precision\",\"amountUsd\":\"Usd required, precision 18\",\"token\":\"address of the token\",\"volatility\":\"metric for future use-cases\"}},\"constructor\":{\"params\":{\"description_\":\"description has no bearing on logic\",\"indexToken_\":\"token to use for price quotes\",\"oneTokenFactory_\":\"oneToken factory to bind to\"}},\"getThePrice(address)\":{\"params\":{\"token\":\"address of the token\"}},\"init(address)\":{\"params\":{\"baseToken\":\"oracles _can be_ multi-tenant with separately initialized baseTokens\"}},\"normalizedToTokens(address,uint256)\":{\"params\":{\"amountNormal\":\"quantity in precision-18\",\"amountTokens\":\"quantity scaled to token decimals()\",\"token\":\"ERC20 token contract\"}},\"oracleAtIndex(uint256)\":{\"params\":{\"index\":\"row number to inspect\",\"oracle\":\"address of the Chainlink oracle\"}},\"oraclesCount()\":{\"params\":{\"count\":\"number of registered Chainlink oracles\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"read(address,uint256)\":{\"params\":{\"amountTokens\":\"quantity, token native precision\",\"amountUsd\":\"US dollar equivalent, precision 18\",\"token\":\"address of the token\",\"volatility\":\"metric for future use-cases\"}},\"registerOracle(address,address)\":{\"params\":{\"oracle\":\"address of the Chainlink oracle to register\",\"token\":\"address of the token to register the oracle for\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenAtIndex(uint256)\":{\"params\":{\"index\":\"row number to inspect\",\"token\":\"address of the registered token\"}},\"tokensToNormalized(address,uint256)\":{\"params\":{\"amountNormal\":\"quantity in precision-18\",\"amountTokens\":\"quantity scaled to token decimals\",\"token\":\"ERC20 token contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unregisterOracle(address)\":{\"params\":{\"token\":\"address of the token to unregister the oracle for\"}},\"update(address)\":{\"details\":\"there is nothing to do in this case\"},\"updateDescription(string)\":{\"params\":{\"description\":\"new module desciption\"}},\"updateOracle(address,address)\":{\"params\":{\"oracle\":\"address of the new Chainlink oracle to be used for the token\",\"token\":\"address of the token to have the oracle replaced\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"amountRequired(address,uint256)\":{\"notice\":\"returns the tokens needed to reach a target usd value\"},\"getThePrice(address)\":{\"notice\":\"returns the latest price for the token\"},\"init(address)\":{\"notice\":\"oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory.\"},\"normalizedToTokens(address,uint256)\":{\"notice\":\"converts normalized precision 18 amounts to token native precision amounts, truncates low-order values\"},\"oracleAtIndex(uint256)\":{\"notice\":\"enumerate the registered Chainlink oracles\"},\"oraclesCount()\":{\"notice\":\"count registered Chainlink oracles\"},\"read(address,uint256)\":{\"notice\":\"returns equivalent amount of index tokens for an amount of baseTokens and volatility metric\"},\"registerOracle(address,address)\":{\"notice\":\"register a new Chainlink oracle\"},\"tokenAtIndex(uint256)\":{\"notice\":\"enumerate the registered tokens\"},\"tokensToNormalized(address,uint256)\":{\"notice\":\"converts token native precision amounts to normalized precision 18 amounts\"},\"unregisterOracle(address)\":{\"notice\":\"unregister a Chainlink oracle\"},\"update(address)\":{\"notice\":\"update is called when a oneToken wants to persist observations\"},\"updateDescription(string)\":{\"notice\":\"set a module description\"},\"updateOracle(address,address)\":{\"notice\":\"replace oracle for the given token\"}},\"notice\":\"Generic ChainLink Oracle for USD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/chainlink/ChainlinkOracleUSD.sol\":\"ChainlinkOracleUSD\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/_chainlink/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\",\"keccak256\":\"0xaff4454b56e7d70b8b4c53bf814e6638aff98af755bd39f0d54d61b502052a51\",\"license\":\"MIT\"},\"contracts/_openzeppelin/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"contracts/_openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/common/ICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../oz_modified/ICHIOwnable.sol\\\";\\nimport \\\"../oz_modified/ICHIInitializable.sol\\\";\\nimport \\\"../interface/IERC20Extended.sol\\\";\\nimport \\\"../interface/IICHICommon.sol\\\";\\n\\ncontract ICHICommon is IICHICommon, ICHIOwnable, ICHIInitializable {\\n\\n    uint256 constant PRECISION = 10 ** 18;\\n    uint256 constant INFINITE = uint256(0-1);\\n    address constant NULL_ADDRESS = address(0);\\n    \\n    // @dev internal fingerprints help prevent deployment-time governance errors\\n\\n    bytes32 constant COMPONENT_CONTROLLER = keccak256(abi.encodePacked(\\\"ICHI V1 Controller\\\"));\\n    bytes32 constant COMPONENT_VERSION = keccak256(abi.encodePacked(\\\"ICHI V1 OneToken Implementation\\\"));\\n    bytes32 constant COMPONENT_STRATEGY = keccak256(abi.encodePacked(\\\"ICHI V1 Strategy Implementation\\\"));\\n    bytes32 constant COMPONENT_MINTMASTER = keccak256(abi.encodePacked(\\\"ICHI V1 MintMaster Implementation\\\"));\\n    bytes32 constant COMPONENT_ORACLE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    bytes32 constant COMPONENT_VOTERROLL = keccak256(abi.encodePacked(\\\"ICHI V1 VoterRoll Implementation\\\"));\\n    bytes32 constant COMPONENT_FACTORY = keccak256(abi.encodePacked(\\\"ICHI OneToken Factory\\\"));\\n}\\n\",\"keccak256\":\"0x42378732873814c18db826c3ba6ca60976f1669fa646d82563b1482261583c83\",\"license\":\"BUSL-1.1\"},\"contracts/common/ICHIModuleCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IModule.sol\\\";\\nimport \\\"../interface/IOneTokenFactory.sol\\\";\\nimport \\\"../interface/IOneTokenV1Base.sol\\\";\\nimport \\\"./ICHICommon.sol\\\";\\n\\nabstract contract ICHIModuleCommon is IModule, ICHICommon {\\n    \\n    ModuleType public immutable override moduleType;\\n    string public override moduleDescription;\\n    address public immutable override oneTokenFactory;\\n\\n    event ModuleDeployed(address sender, ModuleType moduleType, string description);\\n    event DescriptionUpdated(address sender, string description);\\n   \\n    modifier onlyKnownToken {\\n        require(IOneTokenFactory(oneTokenFactory).isOneToken(msg.sender), \\\"ICHIModuleCommon: msg.sender is not a known oneToken\\\");\\n        _;\\n    }\\n    \\n    modifier onlyTokenOwner (address oneToken) {\\n        require(msg.sender == IOneTokenV1Base(oneToken).owner(), \\\"ICHIModuleCommon: msg.sender is not oneToken owner\\\");\\n        _;\\n    }\\n\\n    modifier onlyModuleOrFactory {\\n        if(!IOneTokenFactory(oneTokenFactory).isModule(msg.sender)) {\\n            require(msg.sender == oneTokenFactory, \\\"ICHIModuleCommon: msg.sender is not module owner, token factory or registed module\\\");\\n        }\\n        _;\\n    }\\n    \\n    /**\\n     @notice modules are bound to the factory at deployment time\\n     @param oneTokenFactory_ factory to bind to\\n     @param moduleType_ type number helps prevent governance errors\\n     @param description_ human-readable, descriptive only\\n     */    \\n    constructor (address oneTokenFactory_, ModuleType moduleType_, string memory description_) {\\n        require(oneTokenFactory_ != NULL_ADDRESS, \\\"ICHIModuleCommon: oneTokenFactory cannot be empty\\\");\\n        require(bytes(description_).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        oneTokenFactory = oneTokenFactory_;\\n        moduleType = moduleType_;\\n        moduleDescription = description_;\\n        emit ModuleDeployed(msg.sender, moduleType_, description_);\\n    }\\n\\n    /**\\n     @notice set a module description\\n     @param description new module desciption\\n     */\\n    function updateDescription(string memory description) external onlyOwner override {\\n        require(bytes(description).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        moduleDescription = description;\\n        emit DescriptionUpdated(msg.sender, description);\\n    }  \\n}\\n\",\"keccak256\":\"0xd2c11af9e25df79014bb16e9a09e5cc3b1fc3552ac47ee55f90d681e558a58b6\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IERC20Extended.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Extended is IERC20 {\\n    \\n    function decimals() external view returns(uint8);\\n    function symbol() external view returns(string memory);\\n    function name() external view returns(string memory);\\n}\\n\",\"keccak256\":\"0x2ca69f362fa17acf5a0871f09ed8c7937a7ab4290d5d107d36d15f21de4b90cf\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHIOwnable.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IICHICommon is IICHIOwnable, InterfaceCommon {}\\n\",\"keccak256\":\"0xe6cd96a82817180d3b07502d5f9030cb538599311ca618a28fd9abc4ec9f12d3\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\ninterface IICHIOwnable {\\n    \\n    function renounceOwnership() external;\\n    function transferOwnership(address newOwner) external;\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0106ebef69259a8f6b75ed0bd8cafab30dec9b5845887bb46941f37c93b93018\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IModule.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IModule is IICHICommon { \\n       \\n    function oneTokenFactory() external view returns(address);\\n    function updateDescription(string memory description) external;\\n    function moduleDescription() external view returns(string memory);\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function moduleType() external view returns(ModuleType);\\n}\\n\",\"keccak256\":\"0xe90ce2dc34f907536849d364de54cdddb9b09cb958020972121624d1d6f519e0\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IOneTokenFactory is InterfaceCommon {\\n\\n    function oneTokenProxyAdmins(address) external returns(address);\\n    function deployOneTokenProxy(\\n        string memory name,\\n        string memory symbol,\\n        address governance, \\n        address version,\\n        address controller,\\n        address mintMaster,              \\n        address memberToken, \\n        address collateral,\\n        address oneTokenOracle\\n    ) \\n        external \\n        returns(address newOneTokenProxy, address proxyAdmin);\\n\\n    function admitModule(address module, ModuleType moduleType, string memory name, string memory url) external;\\n    function updateModule(address module, string memory name, string memory url) external;\\n    function removeModule(address module) external;\\n\\n    function admitForeignToken(address foreignToken, bool collateral, address oracle) external;\\n    function updateForeignToken(address foreignToken, bool collateral) external;\\n    function removeForeignToken(address foreignToken) external;\\n\\n    function assignOracle(address foreignToken, address oracle) external;\\n    function removeOracle(address foreignToken, address oracle) external; \\n\\n    /**\\n     * View functions\\n     */\\n    \\n    function MODULE_TYPE() external view returns(bytes32);\\n\\n    function oneTokenCount() external view returns(uint256);\\n    function oneTokenAtIndex(uint256 index) external view returns(address);\\n    function isOneToken(address oneToken) external view returns(bool);\\n \\n    // modules\\n\\n    function moduleCount() external view returns(uint256);\\n    function moduleAtIndex(uint256 index) external view returns(address module);\\n    function isModule(address module) external view returns(bool);\\n    function isValidModuleType(address module, ModuleType moduleType) external view returns(bool);\\n\\n    // foreign tokens\\n\\n    function foreignTokenCount() external view returns(uint256);\\n    function foreignTokenAtIndex(uint256 index) external view returns(address);\\n    function foreignTokenInfo(address foreignToken) external view returns(bool collateral, uint256 oracleCount);\\n    function foreignTokenOracleCount(address foreignToken) external view returns(uint256);\\n    function foreignTokenOracleAtIndex(address foreignToken, uint256 index) external view returns(address);\\n    function isOracle(address foreignToken, address oracle) external view returns(bool);\\n    function isForeignToken(address foreignToken) external view returns(bool);\\n    function isCollateral(address foreignToken) external view returns(bool);\\n}\",\"keccak256\":\"0x058f27f1dc56c298d2f8ffa88d1fb67dc7c421327089bfb3a77ef9ecf943c6e4\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenV1Base.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./IERC20Extended.sol\\\";\\n\\ninterface IOneTokenV1Base is IICHICommon, IERC20 {\\n    \\n    function init(string memory name_, string memory symbol_, address oneTokenOracle_, address controller_,  address mintMaster_, address memberToken_, address collateral_) external;\\n    function changeController(address controller_) external;\\n    function changeMintMaster(address mintMaster_, address oneTokenOracle) external;\\n    function addAsset(address token, address oracle) external;\\n    function removeAsset(address token) external;\\n    function setStrategy(address token, address strategy, uint256 allowance) external;\\n    function executeStrategy(address token) external;\\n    function removeStrategy(address token) external;\\n    function closeStrategy(address token) external;\\n    function increaseStrategyAllowance(address token, uint256 amount) external;\\n    function decreaseStrategyAllowance(address token, uint256 amount) external;\\n    function setFactory(address newFactory) external;\\n\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function oneTokenFactory() external view returns(address);\\n    function controller() external view returns(address);\\n    function mintMaster() external view returns(address);\\n    function memberToken() external view returns(address);\\n    function assets(address) external view returns(address, address);\\n    function balances(address token) external view returns(uint256 inVault, uint256 inStrategy);\\n    function collateralTokenCount() external view returns(uint256);\\n    function collateralTokenAtIndex(uint256 index) external view returns(address);\\n    function isCollateral(address token) external view returns(bool);\\n    function otherTokenCount() external view  returns(uint256);\\n    function otherTokenAtIndex(uint256 index) external view returns(address); \\n    function isOtherToken(address token) external view returns(bool);\\n    function assetCount() external view returns(uint256);\\n    function assetAtIndex(uint256 index) external view returns(address); \\n    function isAsset(address token) external view returns(bool);\\n}\\n\",\"keccak256\":\"0x1b11cd3a73710c7b8fd77f7cd1e149eea49e8c804305bd77bbebd6deb0017f22\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IOracle is IModule {\\n\\n    function init(address baseToken) external;\\n    function update(address token) external;\\n    function indexToken() external view returns(address);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */\\n    function read(address token, uint amountTokens) external view returns(uint amountUsd, uint volatility);\\n\\n    /**\\n     @param token ERC20 token\\n     @param amountTokens token quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */    \\n    function amountRequired(address token, uint amountUsd) external view returns(uint amountTokens, uint volatility);\\n\\n    /**\\n     @notice converts normalized precision-18 amounts to token native precision amounts, truncates low-order values\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */    \\n    function normalizedToTokens(address token, uint amountNormal) external view returns(uint amountTokens);\\n\\n    /**\\n     @notice converts token native precision amounts to normalized precision-18 amounts\\n     @param token ERC20 token contract\\n     @param amountNormal quantity, precision 18\\n     @param amountTokens quantity scaled to token precision\\n     */  \\n    function tokensToNormalized(address token, uint amountTokens) external view returns(uint amountNormal);\\n}\\n\",\"keccak256\":\"0x5c7b98506f4108eee15448df89857582197b474e2b04cd397c4d2eed7c1a92ff\",\"license\":\"BUSL-1.1\"},\"contracts/interface/InterfaceCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface InterfaceCommon {\\n\\n    enum ModuleType { Version, Controller, Strategy, MintMaster, Oracle }\\n\\n}\\n\",\"keccak256\":\"0x818fc764b7da096a438fc9322588d4fbe0fc655d952033a3d2b5d86a863570a2\",\"license\":\"BUSL-1.1\"},\"contracts/lib/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\n/**\\n * @notice Key sets with enumeration and delete. Uses mappings for random access\\n * and existence checks and dynamic arrays for enumeration. Key uniqueness is enforced. \\n * @dev Sets are unordered. Delete operations reorder keys. All operations have a \\n * fixed gas cost at any scale, O(1). \\n */\\n\\nlibrary AddressSet {\\n    \\n    struct Set {\\n        mapping(address => uint256) keyPointers;\\n        address[] keyList;\\n    }\\n\\n    /**\\n     @notice insert a key. \\n     @dev duplicate keys are not permitted.\\n     @param self storage pointer to a Set. \\n     @param key value to insert.\\n     */    \\n    function insert(Set storage self, address key, string memory errorMessage) internal {\\n        require(!exists(self, key), errorMessage);\\n        self.keyList.push(key);\\n        self.keyPointers[key] = self.keyList.length-1;\\n    }\\n\\n    /**\\n     @notice remove a key.\\n     @dev key to remove must exist. \\n     @param self storage pointer to a Set.\\n     @param key value to remove.\\n     */    \\n    function remove(Set storage self, address key, string memory errorMessage) internal {\\n        require(exists(self, key), errorMessage);\\n        uint256 last = count(self) - 1;\\n        uint256 rowToReplace = self.keyPointers[key];\\n        address keyToMove = self.keyList[last];\\n        self.keyPointers[keyToMove] = rowToReplace;\\n        self.keyList[rowToReplace] = keyToMove;\\n        delete self.keyPointers[key];\\n        self.keyList.pop();\\n    }\\n\\n    /**\\n     @notice count the keys.\\n     @param self storage pointer to a Set. \\n     */       \\n    function count(Set storage self) internal view returns(uint256) {\\n        return(self.keyList.length);\\n    }\\n\\n    /**\\n     @notice check if a key is in the Set.\\n     @param self storage pointer to a Set.\\n     @param key value to check. Version\\n     @return bool true: Set member, false: not a Set member.\\n     */  \\n    function exists(Set storage self, address key) internal view returns(bool) {\\n        if(self.keyList.length == 0) return false;\\n        return self.keyList[self.keyPointers[key]] == key;\\n    }\\n\\n    /**\\n     @notice fetch a key by row (enumerate).\\n     @param self storage pointer to a Set.\\n     @param index row to enumerate. Must be < count() - 1.\\n     */      \\n    function keyAtIndex(Set storage self, uint256 index) internal view returns(address) {\\n        return self.keyList[index];\\n    }\\n}\\n\",\"keccak256\":\"0x9cfbadb37056f452320ad427c62ffdb474d041a3ae930bbc8ad86daca906f548\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/OracleCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IOracle.sol\\\";\\nimport \\\"../common/ICHIModuleCommon.sol\\\";\\n\\nabstract contract OracleCommon is IOracle, ICHIModuleCommon {\\n\\n    uint256 constant NORMAL = 18;\\n    bytes32 constant public override MODULE_TYPE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    address public override indexToken;\\n\\n    event OracleDeployed(address sender, string description, address indexToken);\\n    event OracleInitialized(address sender, address baseToken, address indexToken);\\n    \\n    /**\\n     @notice records the oracle description and the index that will be used for all quotes\\n     @dev oneToken implementations can share oracles\\n     @param oneTokenFactory_ oneTokenFactory to bind to\\n     @param description_ all modules have a description. No processing or validation\\n     @param indexToken_ every oracle has an index token for reporting the value of a base token\\n     */\\n    constructor(address oneTokenFactory_, string memory description_, address indexToken_) \\n        ICHIModuleCommon(oneTokenFactory_, ModuleType.Oracle, description_) \\n    { \\n        require(indexToken_ != NULL_ADDRESS, \\\"OracleCommon: indexToken cannot be empty\\\");\\n        indexToken = indexToken_;\\n        emit OracleDeployed(msg.sender, description_, indexToken_);\\n    }\\n\\n    /**\\n     @notice oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory.\\n     @param baseToken oracles _can be_ multi-tenant with separately initialized baseTokens\\n     */\\n    function init(address baseToken) external onlyModuleOrFactory virtual override {\\n        emit OracleInitialized(msg.sender, baseToken, indexToken);\\n    }\\n\\n    /**\\n     @notice converts normalized precision 18 amounts to token native precision amounts, truncates low-order values\\n     @param token ERC20 token contract\\n     @param amountNormal quantity in precision-18\\n     @param amountTokens quantity scaled to token decimals()\\n     */    \\n    function normalizedToTokens(address token, uint256 amountNormal) public view override returns(uint256 amountTokens) {\\n        IERC20Extended t = IERC20Extended(token);\\n        uint256 nativeDecimals = t.decimals();\\n        require(nativeDecimals <= 18, \\\"OracleCommon: unsupported token precision (greater than 18)\\\");\\n        if(nativeDecimals == NORMAL) return amountNormal;\\n        return amountNormal / ( 10 ** (NORMAL - nativeDecimals));\\n    }\\n\\n    /**\\n     @notice converts token native precision amounts to normalized precision 18 amounts\\n     @param token ERC20 token contract\\n     @param amountTokens quantity scaled to token decimals\\n     @param amountNormal quantity in precision-18\\n     */  \\n    function tokensToNormalized(address token, uint256 amountTokens) public view override returns(uint256 amountNormal) {\\n        IERC20Extended t = IERC20Extended(token);\\n        uint256 nativeDecimals = t.decimals();\\n        require(nativeDecimals <= 18, \\\"OracleCommon: unsupported token precision (greater than 18)\\\");\\n        if(nativeDecimals == NORMAL) return amountTokens;\\n        return amountTokens * ( 10 ** (NORMAL - nativeDecimals));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2a74dca342721138e6ed2fd9225c6482c7e3ecf3bbf1fb26e99fed196317e3df\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/chainlink/ChainlinkOracleUSD.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../../lib/AddressSet.sol\\\";\\nimport \\\"../../oracle/OracleCommon.sol\\\";\\nimport \\\"../../interface/IERC20Extended.sol\\\";\\nimport \\\"../../_chainlink/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"../../_openzeppelin/math/SafeMath.sol\\\";\\n\\n/**\\n @notice Generic ChainLink Oracle for USD\\n */\\n\\ncontract ChainlinkOracleUSD is OracleCommon {\\n\\n    using SafeMath for uint256;\\n    using AddressSet for AddressSet.Set;\\n\\n    // only accepting USD Chainlink oracles, which all use 8 decimals\\n    uint256 private constant SHIFT_DECIMALS = 10 ** 10;\\n\\n    // token address => chainlink oracle address\\n    mapping(address => address) public chainlinkOracles; \\n    // interable key set with delete\\n    AddressSet.Set chainlinkOraclesSet;\\n    \\n    event RegisterChainlinkOracle(address sender, address token, address oracle);\\n    event UpdateChainlinkOracle(address sender, address token, address oracle);\\n    event UnregisterChainlinkOracle(address sender, address token);\\n    \\n    /** \\n     @param oneTokenFactory_ oneToken factory to bind to\\n     @param description_ description has no bearing on logic\\n     @param indexToken_ token to use for price quotes\\n     */\\n    constructor(address oneTokenFactory_, string memory description_, address indexToken_)\\n        OracleCommon(oneTokenFactory_, description_, indexToken_) {\\n    }\\n\\n    /**\\n     @notice update is called when a oneToken wants to persist observations\\n     @dev there is nothing to do in this case\\n     */\\n    function update(address /* token */) external override {}\\n\\n    /**\\n     @notice returns equivalent amount of index tokens for an amount of baseTokens and volatility metric\\n     @param token address of the token\\n     @param amountTokens quantity, token native precision\\n     @param amountUsd US dollar equivalent, precision 18\\n     @param volatility metric for future use-cases\\n     */\\n    function read(address token, uint256 amountTokens) external view override returns(uint256 amountUsd, uint256 volatility) {\\n        uint256 normalizedAmountUsd = tokensToNormalized(token, amountTokens);\\n        amountUsd = (normalizedAmountUsd.mul(getThePrice(token))).div(PRECISION);\\n        volatility = 1;\\n    }\\n\\n    /**\\n     @notice returns the tokens needed to reach a target usd value\\n     @param token address of the token\\n     @param amountUsd Usd required, precision 18\\n     @param amountTokens tokens required, token native precision\\n     @param volatility metric for future use-cases\\n     */\\n    function amountRequired(address token, uint256 amountUsd) external view override returns(uint256 amountTokens, uint256 volatility) {\\n        uint256 normalizedAmountTokens = amountUsd.mul(PRECISION).div(getThePrice(token));\\n        amountTokens = normalizedToTokens(token, normalizedAmountTokens);\\n        volatility = 1;\\n    }\\n\\n    /**\\n     * @notice returns the latest price for the token\\n     * @param token address of the token\\n     */\\n    function getThePrice(address token) public view returns (uint256 price) {\\n        require(chainlinkOraclesSet.exists(token), \\\"ChainlinkOracle: unknown token\\\");\\n        (\\n            , \\n            int256 price_,\\n            ,\\n            ,\\n            \\n        ) = AggregatorV3Interface(chainlinkOracles[token]).latestRoundData();\\n        require(price_ > 0); // price oracle responded 0, or negative. No event emitted because this is a view function.\\n        price = uint256(price_);\\n        price = price.mul(SHIFT_DECIMALS);  //price is natively in 8 decimals make it 18\\n    }\\n\\n    /*********************************\\n     * Discoverable Internal Structure\\n     *********************************/\\n\\n    /**\\n     * @notice count registered Chainlink oracles\\n     * @param count number of registered Chainlink oracles\\n     */\\n    function oraclesCount() external view returns(uint256 count) {\\n        count = chainlinkOraclesSet.count();\\n    }\\n\\n    /**\\n     * @notice enumerate the registered Chainlink oracles\\n     * @param index row number to inspect\\n     * @param oracle address of the Chainlink oracle\\n     */\\n    function oracleAtIndex(uint256 index) external view returns(address oracle) {\\n        require(chainlinkOraclesSet.count() > index, \\\"ChainlinkOracle: index number is too high\\\");\\n        oracle = chainlinkOracles[chainlinkOraclesSet.keyAtIndex(index)];\\n    }\\n\\n    /**\\n     * @notice enumerate the registered tokens\\n     * @param index row number to inspect\\n     * @param token address of the registered token\\n     */\\n    function tokenAtIndex(uint256 index) external view returns(address token) {\\n        require(chainlinkOraclesSet.count() > index, \\\"ChainlinkOracle: index number is too high\\\");\\n        token = chainlinkOraclesSet.keyAtIndex(index);\\n    }\\n\\n    /*********************************\\n     * CRUD\\n     *********************************/\\n\\n    /**\\n     * @notice register a new Chainlink oracle\\n     * @param token address of the token to register the oracle for\\n     * @param oracle address of the Chainlink oracle to register\\n     */\\n    function registerOracle(address token, address oracle) external onlyOwner {\\n        require(AggregatorV3Interface(oracle).decimals() == 8, \\\"ChainlinkOracle: the oracle must return USD values\\\");\\n        chainlinkOraclesSet.insert(token, \\\"ChainlinkOracle: oracle is already registered\\\");\\n        chainlinkOracles[token] = oracle;\\n        emit RegisterChainlinkOracle(msg.sender, token, oracle);\\n    }\\n\\n    /**\\n     * @notice unregister a Chainlink oracle\\n     * @param token address of the token to unregister the oracle for\\n     */\\n    function unregisterOracle(address token) external onlyOwner {\\n        chainlinkOraclesSet.remove(token, \\\"ChainlinkOracle: unknown token\\\");\\n        delete chainlinkOracles[token];\\n        emit UnregisterChainlinkOracle(msg.sender, token);\\n    }\\n\\n    /**\\n     * @notice replace oracle for the given token\\n     * @param token address of the token to have the oracle replaced\\n     * @param oracle address of the new Chainlink oracle to be used for the token\\n     */\\n    function updateOracle(address token, address oracle) external onlyOwner {\\n        require(chainlinkOraclesSet.exists(token), \\\"ChainlinkOracle: unknown token\\\");\\n        require(AggregatorV3Interface(oracle).decimals() == 8, \\\"ChainlinkOracle: the oracle must return USD values\\\");\\n        chainlinkOracles[token] = oracle;\\n        emit UpdateChainlinkOracle(msg.sender, token, oracle);\\n    }\\n\\n}\",\"keccak256\":\"0x549f456321d65e328776ea5a1017ae1d507492e544c09d828b8df1425f7b2481\",\"license\":\"BUSL-1.1\"},\"contracts/oz_modified/ICHIInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/utils/Address.sol\\\";\\n\\ncontract ICHIInitializable {\\n\\n    bool private _initialized;\\n    bool private _initializing;\\n\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"ICHIInitializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    modifier initialized {\\n        require(_initialized, \\\"ICHIInitializable: contract is not initialized\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x9d4cb3bf21309bc5621f730a885c9c22e1fc6073f9fcf3857c45c4d9f0ea82bf\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @dev Constructor visibility has been removed from the original.\\n * _transferOwnership() has been added to support proxied deployments.\\n * Abstract tag removed from contract block.\\n * Added interface inheritance and override modifiers.\\n * Changed contract identifier in require error messages.\\n */\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"../interface/IICHIOwnable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract ICHIOwnable is IICHIOwnable, Context {\\n    \\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n     \\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"ICHIOwnable: caller is not the owner\\\");\\n        _;\\n    }    \\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     * Ineffective for proxied deployed. Use initOwnable.\\n     */\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     @dev initialize proxied deployment\\n     */\\n    function initOwnable() internal {\\n        require(owner() == address(0), \\\"ICHIOwnable: already initialized\\\");\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual override returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual override onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev be sure to call this in the initialization stage of proxied deployment or owner will not be set\\n     */\\n\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"ICHIOwnable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x552664765e88fb3e7949f3ff17f264968e9fca3775e3e7f241ce965129af8658\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001f8838038062001f88833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b506040526020015191508390508282826004836200010b33620003da565b6001600160a01b038316620001525760405162461bcd60e51b815260040180806020018281038252603181526020018062001f576031913960400191505060405180910390fd5b6000815111620001945760405162461bcd60e51b815260040180806020018281038252602d81526020018062001ed8602d913960400191505060405180910390fd5b6001600160601b0319606084901b1660a052816004811115620001b357fe5b6080816004811115620001c257fe5b60f81b9052508051620001dd9060019060208401906200047c565b507f2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b833838360405180846001600160a01b031681526020018360048111156200022257fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200026257818101518382015260200162000248565b50505050905090810190601f168015620002905780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050506001600160a01b038116620002e95760405162461bcd60e51b815260040180806020018281038252602881526020018062001f2f6028913960400191505060405180910390fd5b80600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f5ca37c59f6b6cafb39fb44368a097af590e5e220c2a015addc4b11977c34766b33838360405180846001600160a01b0316815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156200039157818101518382015260200162000377565b50505050905090810190601f168015620003bf5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050505062000528565b6001600160a01b038116620004215760405162461bcd60e51b815260040180806020018281038252602a81526020018062001f05602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004b45760008555620004ff565b82601f10620004cf57805160ff1916838001178555620004ff565b82800160010185558215620004ff579182015b82811115620004ff578251825591602001919060010190620004e2565b506200050d92915062000511565b5090565b5b808211156200050d576000815560010162000512565b60805160f81c60a05160601c61197c6200055c600039806105a352806106245280610e76525080610980525061197c6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806376f70900116100c3578063b5966db81161007c578063b5966db81461039e578063b7b8bae41461041b578063e735b48a14610447578063e7d015f2146104ed578063f2fde38b146104f5578063fc28b2fb1461051b5761014d565b806376f709001461030d578063823cbc0d1461031557806383d998ae1461033257806388270e0c146103605780638da5cb5b1461038e578063a2729c23146103965761014d565b806344a11f651161011557806344a11f651461025c5780634d161865146102825780635775029f146102ae5780636465e69f146102b65780636a75aa66146102df578063715018a6146103055761014d565b8063014c2add1461015257806319ab453c146101975780631c1b8772146101bf57806327d3cb41146101e557806341f1afc714610223575b600080fd5b61017e6004803603604081101561016857600080fd5b506001600160a01b038135169060200135610541565b6040805192835260208301919091528051918290030190f35b6101bd600480360360208110156101ad57600080fd5b50356001600160a01b0316610583565b005b6101bd600480360360208110156101d557600080fd5b50356001600160a01b03166106cf565b610211600480360360408110156101fb57600080fd5b506001600160a01b0381351690602001356106d2565b60408051918252519081900360200190f35b6102406004803603602081101561023957600080fd5b50356107a9565b604080516001600160a01b039092168252519081900360200190f35b6102116004803603602081101561027257600080fd5b50356001600160a01b03166107fd565b61017e6004803603604081101561029857600080fd5b506001600160a01b038135169060200135610905565b610211610934565b6102be61097e565b604051808260048111156102ce57fe5b815260200191505060405180910390f35b610240600480360360208110156102f557600080fd5b50356001600160a01b03166109a2565b6101bd6109bd565b610211610a65565b6102406004803603602081101561032b57600080fd5b5035610a76565b6101bd6004803603604081101561034857600080fd5b506001600160a01b0381358116916020013516610af1565b6101bd6004803603604081101561037657600080fd5b506001600160a01b0381358116916020013516610cc6565b610240610e65565b610240610e74565b6103a6610e98565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103e05781810151838201526020016103c8565b50505050905090810190601f16801561040d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102116004803603604081101561043157600080fd5b506001600160a01b038135169060200135610f25565b6101bd6004803603602081101561045d57600080fd5b81019060208101813564010000000081111561047857600080fd5b82018360208201111561048a57600080fd5b803590602001918460018302840111640100000000831117156104ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611003945050505050565b610240611162565b6101bd6004803603602081101561050b57600080fd5b50356001600160a01b0316611171565b6101bd6004803603602081101561053157600080fd5b50356001600160a01b03166111d8565b600080600061055085856106d2565b9050610577670de0b6b3a764000061057161056a886107fd565b84906112dd565b90611336565b95600195509350505050565b604080516342f6e38960e01b815233600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342f6e389916024808301926020929190829003018186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d602081101561061357600080fd5b505161068057336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106805760405162461bcd60e51b81526004018080602001828103825260528152602001806118c86052913960600191505060405180910390fd5b600254604080513381526001600160a01b03808516602083015290921682820152517f615e5388e077a0f73212d5edcf91ad20a6738753574b7a3749872baa98995be59181900360600190a150565b50565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d602081101561073d57600080fd5b505160ff16905060128111156107845760405162461bcd60e51b815260040180806020018281038252603b815260200180611819603b913960400191505060405180910390fd5b60128114156107975783925050506107a3565b601203600a0a83029150505b92915050565b6000816107b6600461139d565b116107f25760405162461bcd60e51b815260040180806020018281038252602981526020018061189f6029913960400191505060405180910390fd5b6107a36004836113a4565b600061080a6004836113d1565b61085b576040805162461bcd60e51b815260206004820152601e60248201527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e0000604482015290519081900360640190fd5b6001600160a01b03808316600090815260036020526040808220548151633fabe5a360e21b815291519293169163feaf968c9160048082019260a092909190829003018186803b1580156108ae57600080fd5b505afa1580156108c2573d6000803e3d6000fd5b505050506040513d60a08110156108d857600080fd5b50602001519050600081136108ec57600080fd5b9050806108fe816402540be4006112dd565b9392505050565b6000806000610928610916866107fd565b61057186670de0b6b3a76400006112dd565b90506105778582610f25565b60405160200180807f49434849205631204f7261636c6520496d706c656d656e746174696f6e000000815250601d0190506040516020818303038152906040528051906020012081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052600090815260409020546001600160a01b031681565b6109c561142c565b6001600160a01b03166109d6610e65565b6001600160a01b031614610a1b5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a71600461139d565b905090565b600081610a83600461139d565b11610abf5760405162461bcd60e51b815260040180806020018281038252602981526020018061189f6029913960400191505060405180910390fd5b60036000610ace6004856113a4565b6001600160a01b0390811682526020820192909252604001600020541692915050565b610af961142c565b6001600160a01b0316610b0a610e65565b6001600160a01b031614610b4f5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b610b5a6004836113d1565b610bab576040805162461bcd60e51b815260206004820152601e60248201527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e0000604482015290519081900360640190fd5b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610be457600080fd5b505afa158015610bf8573d6000803e3d6000fd5b505050506040513d6020811015610c0e57600080fd5b505160ff16600814610c515760405162461bcd60e51b81526004018080602001828103825260328152602001806117c36032913960400191505060405180910390fd5b6001600160a01b0380831660008181526003602090815260409182902080549486166001600160a01b0319909516851790558151338152908101929092528181019290925290517f0cbd5cffcb8b9d797212b108817a8e2498059d3c2007654a23f2068d0b0608ca9181900360600190a15050565b610cce61142c565b6001600160a01b0316610cdf610e65565b6001600160a01b031614610d245760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5d57600080fd5b505afa158015610d71573d6000803e3d6000fd5b505050506040513d6020811015610d8757600080fd5b505160ff16600814610dca5760405162461bcd60e51b81526004018080602001828103825260328152602001806117c36032913960400191505060405180910390fd5b610df0826040518060600160405280602d815260200161191a602d913960049190611430565b6001600160a01b0380831660008181526003602090815260409182902080549486166001600160a01b0319909516851790558151338152908101929092528181019290925290517ff0fb32f6e8e924be15718421799e04259ca8fe912126ea45380ea31e53dac9809181900360600190a15050565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b505050505081565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6657600080fd5b505afa158015610f7a573d6000803e3d6000fd5b505050506040513d6020811015610f9057600080fd5b505160ff1690506012811115610fd75760405162461bcd60e51b815260040180806020018281038252603b815260200180611819603b913960400191505060405180910390fd5b6012811415610fea5783925050506107a3565b80601203600a0a8481610ff957fe5b0495945050505050565b61100b61142c565b6001600160a01b031661101c610e65565b6001600160a01b0316146110615760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b60008151116110a15760405162461bcd60e51b815260040180806020018281038252602d815260200180611796602d913960400191505060405180910390fd5b80516110b49060019060208401906116f4565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561112457818101518382015260200161110c565b50505050905090810190601f1680156111515780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6002546001600160a01b031681565b61117961142c565b6001600160a01b031661118a610e65565b6001600160a01b0316146111cf5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b6106cf81611514565b6111e061142c565b6001600160a01b03166111f1610e65565b6001600160a01b0316146112365760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b60408051808201909152601e81527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e000060208201526112789060049083906115b4565b6001600160a01b03811660008181526003602090815260409182902080546001600160a01b031916905581513381529081019290925280517fc9f55f9bd93aeee106cb22510644e0103310f8cb06b17afd9db1a70b7500f0f89281900390910190a150565b6000826112ec575060006107a3565b828202828482816112f957fe5b04146108fe5760405162461bcd60e51b815260040180806020018281038252602181526020018061187e6021913960400191505060405180910390fd5b600080821161138c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161139557fe5b049392505050565b6001015490565b60008260010182815481106113b557fe5b6000918252602090912001546001600160a01b03169392505050565b60018201546000906113e5575060006107a3565b6001600160a01b038216600081815260208590526040902054600185018054909190811061140f57fe5b6000918252602090912001546001600160a01b0316149392505050565b3390565b61143a83836113d1565b1581906114c55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561148a578181015183820152602001611472565b50505050905090810190601f1680156114b75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50506001828101805491820181556000818152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055905492815292905260409091206000199091019055565b6001600160a01b0381166115595760405162461bcd60e51b815260040180806020018281038252602a815260200180611854602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6115be83836113d1565b819061160b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561148a578181015183820152602001611472565b50600060016116198561139d565b6001600160a01b038516600090815260208790526040812054600188018054949093039450929091908490811061164c57fe5b60009182526020808320909101546001600160a01b031680835290889052604090912083905560018701805491925082918490811061168757fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559187168152908790526040812055600186018054806116ca57fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505050505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261172a5760008555611770565b82601f1061174357805160ff1916838001178555611770565b82800160010185558215611770579182015b82811115611770578251825591602001919060010190611755565b5061177c929150611780565b5090565b5b8082111561177c576000815560010161178156fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479436861696e6c696e6b4f7261636c653a20746865206f7261636c65206d7573742072657475726e205553442076616c756573494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f7261636c65436f6d6d6f6e3a20756e737570706f7274656420746f6b656e20707265636973696f6e202867726561746572207468616e20313829494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436861696e6c696e6b4f7261636c653a20696e646578206e756d62657220697320746f6f2068696768494348494d6f64756c65436f6d6d6f6e3a206d73672e73656e646572206973206e6f74206d6f64756c65206f776e65722c20746f6b656e20666163746f7279206f72207265676973746564206d6f64756c65436861696e6c696e6b4f7261636c653a206f7261636c6520697320616c72656164792072656769737465726564a2646970667358221220d820190c9099cffe2b906dae220cdfdcc344ca6571f76613892367f6914ee10264736f6c63430007060033494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f7261636c65436f6d6d6f6e3a20696e646578546f6b656e2063616e6e6f7420626520656d707479494348494d6f64756c65436f6d6d6f6e3a206f6e65546f6b656e466163746f72792063616e6e6f7420626520656d707479",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806376f70900116100c3578063b5966db81161007c578063b5966db81461039e578063b7b8bae41461041b578063e735b48a14610447578063e7d015f2146104ed578063f2fde38b146104f5578063fc28b2fb1461051b5761014d565b806376f709001461030d578063823cbc0d1461031557806383d998ae1461033257806388270e0c146103605780638da5cb5b1461038e578063a2729c23146103965761014d565b806344a11f651161011557806344a11f651461025c5780634d161865146102825780635775029f146102ae5780636465e69f146102b65780636a75aa66146102df578063715018a6146103055761014d565b8063014c2add1461015257806319ab453c146101975780631c1b8772146101bf57806327d3cb41146101e557806341f1afc714610223575b600080fd5b61017e6004803603604081101561016857600080fd5b506001600160a01b038135169060200135610541565b6040805192835260208301919091528051918290030190f35b6101bd600480360360208110156101ad57600080fd5b50356001600160a01b0316610583565b005b6101bd600480360360208110156101d557600080fd5b50356001600160a01b03166106cf565b610211600480360360408110156101fb57600080fd5b506001600160a01b0381351690602001356106d2565b60408051918252519081900360200190f35b6102406004803603602081101561023957600080fd5b50356107a9565b604080516001600160a01b039092168252519081900360200190f35b6102116004803603602081101561027257600080fd5b50356001600160a01b03166107fd565b61017e6004803603604081101561029857600080fd5b506001600160a01b038135169060200135610905565b610211610934565b6102be61097e565b604051808260048111156102ce57fe5b815260200191505060405180910390f35b610240600480360360208110156102f557600080fd5b50356001600160a01b03166109a2565b6101bd6109bd565b610211610a65565b6102406004803603602081101561032b57600080fd5b5035610a76565b6101bd6004803603604081101561034857600080fd5b506001600160a01b0381358116916020013516610af1565b6101bd6004803603604081101561037657600080fd5b506001600160a01b0381358116916020013516610cc6565b610240610e65565b610240610e74565b6103a6610e98565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103e05781810151838201526020016103c8565b50505050905090810190601f16801561040d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102116004803603604081101561043157600080fd5b506001600160a01b038135169060200135610f25565b6101bd6004803603602081101561045d57600080fd5b81019060208101813564010000000081111561047857600080fd5b82018360208201111561048a57600080fd5b803590602001918460018302840111640100000000831117156104ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611003945050505050565b610240611162565b6101bd6004803603602081101561050b57600080fd5b50356001600160a01b0316611171565b6101bd6004803603602081101561053157600080fd5b50356001600160a01b03166111d8565b600080600061055085856106d2565b9050610577670de0b6b3a764000061057161056a886107fd565b84906112dd565b90611336565b95600195509350505050565b604080516342f6e38960e01b815233600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916342f6e389916024808301926020929190829003018186803b1580156105e957600080fd5b505afa1580156105fd573d6000803e3d6000fd5b505050506040513d602081101561061357600080fd5b505161068057336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106805760405162461bcd60e51b81526004018080602001828103825260528152602001806118c86052913960600191505060405180910390fd5b600254604080513381526001600160a01b03808516602083015290921682820152517f615e5388e077a0f73212d5edcf91ad20a6738753574b7a3749872baa98995be59181900360600190a150565b50565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d602081101561073d57600080fd5b505160ff16905060128111156107845760405162461bcd60e51b815260040180806020018281038252603b815260200180611819603b913960400191505060405180910390fd5b60128114156107975783925050506107a3565b601203600a0a83029150505b92915050565b6000816107b6600461139d565b116107f25760405162461bcd60e51b815260040180806020018281038252602981526020018061189f6029913960400191505060405180910390fd5b6107a36004836113a4565b600061080a6004836113d1565b61085b576040805162461bcd60e51b815260206004820152601e60248201527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e0000604482015290519081900360640190fd5b6001600160a01b03808316600090815260036020526040808220548151633fabe5a360e21b815291519293169163feaf968c9160048082019260a092909190829003018186803b1580156108ae57600080fd5b505afa1580156108c2573d6000803e3d6000fd5b505050506040513d60a08110156108d857600080fd5b50602001519050600081136108ec57600080fd5b9050806108fe816402540be4006112dd565b9392505050565b6000806000610928610916866107fd565b61057186670de0b6b3a76400006112dd565b90506105778582610f25565b60405160200180807f49434849205631204f7261636c6520496d706c656d656e746174696f6e000000815250601d0190506040516020818303038152906040528051906020012081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052600090815260409020546001600160a01b031681565b6109c561142c565b6001600160a01b03166109d6610e65565b6001600160a01b031614610a1b5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a71600461139d565b905090565b600081610a83600461139d565b11610abf5760405162461bcd60e51b815260040180806020018281038252602981526020018061189f6029913960400191505060405180910390fd5b60036000610ace6004856113a4565b6001600160a01b0390811682526020820192909252604001600020541692915050565b610af961142c565b6001600160a01b0316610b0a610e65565b6001600160a01b031614610b4f5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b610b5a6004836113d1565b610bab576040805162461bcd60e51b815260206004820152601e60248201527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e0000604482015290519081900360640190fd5b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610be457600080fd5b505afa158015610bf8573d6000803e3d6000fd5b505050506040513d6020811015610c0e57600080fd5b505160ff16600814610c515760405162461bcd60e51b81526004018080602001828103825260328152602001806117c36032913960400191505060405180910390fd5b6001600160a01b0380831660008181526003602090815260409182902080549486166001600160a01b0319909516851790558151338152908101929092528181019290925290517f0cbd5cffcb8b9d797212b108817a8e2498059d3c2007654a23f2068d0b0608ca9181900360600190a15050565b610cce61142c565b6001600160a01b0316610cdf610e65565b6001600160a01b031614610d245760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5d57600080fd5b505afa158015610d71573d6000803e3d6000fd5b505050506040513d6020811015610d8757600080fd5b505160ff16600814610dca5760405162461bcd60e51b81526004018080602001828103825260328152602001806117c36032913960400191505060405180910390fd5b610df0826040518060600160405280602d815260200161191a602d913960049190611430565b6001600160a01b0380831660008181526003602090815260409182902080549486166001600160a01b0319909516851790558151338152908101929092528181019290925290517ff0fb32f6e8e924be15718421799e04259ca8fe912126ea45380ea31e53dac9809181900360600190a15050565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000081565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b505050505081565b6000808390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6657600080fd5b505afa158015610f7a573d6000803e3d6000fd5b505050506040513d6020811015610f9057600080fd5b505160ff1690506012811115610fd75760405162461bcd60e51b815260040180806020018281038252603b815260200180611819603b913960400191505060405180910390fd5b6012811415610fea5783925050506107a3565b80601203600a0a8481610ff957fe5b0495945050505050565b61100b61142c565b6001600160a01b031661101c610e65565b6001600160a01b0316146110615760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b60008151116110a15760405162461bcd60e51b815260040180806020018281038252602d815260200180611796602d913960400191505060405180910390fd5b80516110b49060019060208401906116f4565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561112457818101518382015260200161110c565b50505050905090810190601f1680156111515780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6002546001600160a01b031681565b61117961142c565b6001600160a01b031661118a610e65565b6001600160a01b0316146111cf5760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b6106cf81611514565b6111e061142c565b6001600160a01b03166111f1610e65565b6001600160a01b0316146112365760405162461bcd60e51b81526004018080602001828103825260248152602001806117f56024913960400191505060405180910390fd5b60408051808201909152601e81527f436861696e6c696e6b4f7261636c653a20756e6b6e6f776e20746f6b656e000060208201526112789060049083906115b4565b6001600160a01b03811660008181526003602090815260409182902080546001600160a01b031916905581513381529081019290925280517fc9f55f9bd93aeee106cb22510644e0103310f8cb06b17afd9db1a70b7500f0f89281900390910190a150565b6000826112ec575060006107a3565b828202828482816112f957fe5b04146108fe5760405162461bcd60e51b815260040180806020018281038252602181526020018061187e6021913960400191505060405180910390fd5b600080821161138c576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161139557fe5b049392505050565b6001015490565b60008260010182815481106113b557fe5b6000918252602090912001546001600160a01b03169392505050565b60018201546000906113e5575060006107a3565b6001600160a01b038216600081815260208590526040902054600185018054909190811061140f57fe5b6000918252602090912001546001600160a01b0316149392505050565b3390565b61143a83836113d1565b1581906114c55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561148a578181015183820152602001611472565b50505050905090810190601f1680156114b75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50506001828101805491820181556000818152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055905492815292905260409091206000199091019055565b6001600160a01b0381166115595760405162461bcd60e51b815260040180806020018281038252602a815260200180611854602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6115be83836113d1565b819061160b5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561148a578181015183820152602001611472565b50600060016116198561139d565b6001600160a01b038516600090815260208790526040812054600188018054949093039450929091908490811061164c57fe5b60009182526020808320909101546001600160a01b031680835290889052604090912083905560018701805491925082918490811061168757fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559187168152908790526040812055600186018054806116ca57fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505050505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261172a5760008555611770565b82601f1061174357805160ff1916838001178555611770565b82800160010185558215611770579182015b82811115611770578251825591602001919060010190611755565b5061177c929150611780565b5090565b5b8082111561177c576000815560010161178156fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479436861696e6c696e6b4f7261636c653a20746865206f7261636c65206d7573742072657475726e205553442076616c756573494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f7261636c65436f6d6d6f6e3a20756e737570706f7274656420746f6b656e20707265636973696f6e202867726561746572207468616e20313829494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436861696e6c696e6b4f7261636c653a20696e646578206e756d62657220697320746f6f2068696768494348494d6f64756c65436f6d6d6f6e3a206d73672e73656e646572206973206e6f74206d6f64756c65206f776e65722c20746f6b656e20666163746f7279206f72207265676973746564206d6f64756c65436861696e6c696e6b4f7261636c653a206f7261636c6520697320616c72656164792072656769737465726564a2646970667358221220d820190c9099cffe2b906dae220cdfdcc344ca6571f76613892367f6914ee10264736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "amountRequired(address,uint256)": {
        "params": {
          "amountTokens": "tokens required, token native precision",
          "amountUsd": "Usd required, precision 18",
          "token": "address of the token",
          "volatility": "metric for future use-cases"
        }
      },
      "constructor": {
        "params": {
          "description_": "description has no bearing on logic",
          "indexToken_": "token to use for price quotes",
          "oneTokenFactory_": "oneToken factory to bind to"
        }
      },
      "getThePrice(address)": {
        "params": {
          "token": "address of the token"
        }
      },
      "init(address)": {
        "params": {
          "baseToken": "oracles _can be_ multi-tenant with separately initialized baseTokens"
        }
      },
      "normalizedToTokens(address,uint256)": {
        "params": {
          "amountNormal": "quantity in precision-18",
          "amountTokens": "quantity scaled to token decimals()",
          "token": "ERC20 token contract"
        }
      },
      "oracleAtIndex(uint256)": {
        "params": {
          "index": "row number to inspect",
          "oracle": "address of the Chainlink oracle"
        }
      },
      "oraclesCount()": {
        "params": {
          "count": "number of registered Chainlink oracles"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "read(address,uint256)": {
        "params": {
          "amountTokens": "quantity, token native precision",
          "amountUsd": "US dollar equivalent, precision 18",
          "token": "address of the token",
          "volatility": "metric for future use-cases"
        }
      },
      "registerOracle(address,address)": {
        "params": {
          "oracle": "address of the Chainlink oracle to register",
          "token": "address of the token to register the oracle for"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "tokenAtIndex(uint256)": {
        "params": {
          "index": "row number to inspect",
          "token": "address of the registered token"
        }
      },
      "tokensToNormalized(address,uint256)": {
        "params": {
          "amountNormal": "quantity in precision-18",
          "amountTokens": "quantity scaled to token decimals",
          "token": "ERC20 token contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unregisterOracle(address)": {
        "params": {
          "token": "address of the token to unregister the oracle for"
        }
      },
      "update(address)": {
        "details": "there is nothing to do in this case"
      },
      "updateDescription(string)": {
        "params": {
          "description": "new module desciption"
        }
      },
      "updateOracle(address,address)": {
        "params": {
          "oracle": "address of the new Chainlink oracle to be used for the token",
          "token": "address of the token to have the oracle replaced"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "amountRequired(address,uint256)": {
        "notice": "returns the tokens needed to reach a target usd value"
      },
      "getThePrice(address)": {
        "notice": "returns the latest price for the token"
      },
      "init(address)": {
        "notice": "oneTokens can share Oracles. Oracles must be re-initializable. They are initialized from the Factory."
      },
      "normalizedToTokens(address,uint256)": {
        "notice": "converts normalized precision 18 amounts to token native precision amounts, truncates low-order values"
      },
      "oracleAtIndex(uint256)": {
        "notice": "enumerate the registered Chainlink oracles"
      },
      "oraclesCount()": {
        "notice": "count registered Chainlink oracles"
      },
      "read(address,uint256)": {
        "notice": "returns equivalent amount of index tokens for an amount of baseTokens and volatility metric"
      },
      "registerOracle(address,address)": {
        "notice": "register a new Chainlink oracle"
      },
      "tokenAtIndex(uint256)": {
        "notice": "enumerate the registered tokens"
      },
      "tokensToNormalized(address,uint256)": {
        "notice": "converts token native precision amounts to normalized precision 18 amounts"
      },
      "unregisterOracle(address)": {
        "notice": "unregister a Chainlink oracle"
      },
      "update(address)": {
        "notice": "update is called when a oneToken wants to persist observations"
      },
      "updateDescription(string)": {
        "notice": "set a module description"
      },
      "updateOracle(address,address)": {
        "notice": "replace oracle for the given token"
      }
    },
    "notice": "Generic ChainLink Oracle for USD",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10701,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10625,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 10627,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5634,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "moduleDescription",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 7837,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "indexToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 8025,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "chainlinkOracles",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 8027,
        "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
        "label": "chainlinkOraclesSet",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(Set)6677_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Set)6677_storage": {
        "encoding": "inplace",
        "label": "struct AddressSet.Set",
        "members": [
          {
            "astId": 6673,
            "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
            "label": "keyPointers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 6676,
            "contract": "contracts/oracle/chainlink/ChainlinkOracleUSD.sol:ChainlinkOracleUSD",
            "label": "keyList",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}