{
  "address": "0x8093C2Dd1e2e928B2Bc575299F3AD523feb527f9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oneTokenFactory_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oneToken_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "DescriptionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FromVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "moduleType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ModuleDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oneTokenFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oneToken_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "StrategyDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "StrategyExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "StrategyInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ToVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultAllowance",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MODULE_TYPE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeAllPositions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "closePositions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "executeTransaction",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fromVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleType",
      "outputs": [
        {
          "internalType": "enum InterfaceCommon.ModuleType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oneToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oneTokenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "toVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "updateDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9474f24de8ba5a451377062dc143e578ca1343e9d78ea16db2b960afcfaca7f4",
  "receipt": {
    "to": null,
    "from": "0x451Efff92a3a1471b7af9DDc1369D9D157E6475A",
    "contractAddress": "0x8093C2Dd1e2e928B2Bc575299F3AD523feb527f9",
    "transactionIndex": 4,
    "gasUsed": "1846354",
    "logsBloom": "0x
    "blockHash": "0x2be5c5326680223f1344121b1f6a7b31d7534fa7eff632dd021b46eb1ad2d294",
    "transactionHash": "0x9474f24de8ba5a451377062dc143e578ca1343e9d78ea16db2b960afcfaca7f4",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 9614103,
        "transactionHash": "0x9474f24de8ba5a451377062dc143e578ca1343e9d78ea16db2b960afcfaca7f4",
        "address": "0x8093C2Dd1e2e928B2Bc575299F3AD523feb527f9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x2be5c5326680223f1344121b1f6a7b31d7534fa7eff632dd021b46eb1ad2d294"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 9614103,
        "transactionHash": "0x9474f24de8ba5a451377062dc143e578ca1343e9d78ea16db2b960afcfaca7f4",
        "address": "0x8093C2Dd1e2e928B2Bc575299F3AD523feb527f9",
        "topics": [
          "0x2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b8"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001b5472656173757279205374726174656779202d206f6e654c494e4b0000000000",
        "logIndex": 4,
        "blockHash": "0x2be5c5326680223f1344121b1f6a7b31d7534fa7eff632dd021b46eb1ad2d294"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 9614103,
        "transactionHash": "0x9474f24de8ba5a451377062dc143e578ca1343e9d78ea16db2b960afcfaca7f4",
        "address": "0x8093C2Dd1e2e928B2Bc575299F3AD523feb527f9",
        "topics": [
          "0xd5ec92c8409c5f8b1fe56ba531c98dd4d78981b4ab6cb79f702d9218fceb72c1"
        ],
        "data": "0x000000000000000000000000451efff92a3a1471b7af9ddc1369d9d157e6475a0000000000000000000000004f0bee469535a40880cc03484aef4f2512480257000000000000000000000000fdddefca97574fc5b7210d53f3616f06dd82b7ef0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001b5472656173757279205374726174656779202d206f6e654c494e4b0000000000",
        "logIndex": 5,
        "blockHash": "0x2be5c5326680223f1344121b1f6a7b31d7534fa7eff632dd021b46eb1ad2d294"
      }
    ],
    "blockNumber": 9614103,
    "cumulativeGasUsed": "2230875",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4F0bEe469535A40880cC03484aEF4f2512480257",
    "0xFdDDEFcA97574fc5B7210d53f3616F06Dd82B7Ef",
    "Treasury Strategy - oneLINK"
  ],
  "solcInputHash": "1d178bc5fc8231e623680cb751793fbb",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oneTokenFactory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oneToken_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"DescriptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FromVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"moduleType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ModuleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oneTokenFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oneToken_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"StrategyDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"StrategyExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"StrategyInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VaultAllowance\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MODULE_TYPE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeAllPositions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"closePositions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"enum InterfaceCommon.ModuleType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"updateDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"closeAllPositions()\":{\"details\":\"override this function to withdraw funds from external contracts. Return false if any funds are unrecovered.\"},\"closePositions(address)\":{\"details\":\"override this function to redeem and withdraw related funds from external contracts. Return false if any funds are unrecovered. \",\"params\":{\"success\":\"true, complete success, false, 1 or more failed operations\",\"token\":\"asset to recover\"}},\"constructor\":{\"params\":{\"description_\":\"metadata has no impact on logic\",\"oneTokenFactory_\":\"bind this instance to oneTokenFactory instance\",\"oneToken_\":\"bind this instance to one oneToken vault\"}},\"execute()\":{\"details\":\"called from oneToken governance or the active controller. Overriding function should emit the event. \"},\"executeTransaction(address,uint256,string,bytes)\":{\"params\":{\"data\":\"abi-encodeded bytecode of the parameter values to send\",\"signature\":\"the function signature\",\"target\":\"address/smart contract you are interacting with\",\"value\":\"msg.value (amount of eth in WEI you are sending. Most of the time it is 0)\"}},\"fromVault(address,uint256)\":{\"params\":{\"amount\":\"the amount of tokens to send\",\"token\":\"the ecr20 token to send\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAllowance(address,uint256)\":{\"details\":\"called from oneToken governance or the active controller\",\"params\":{\"amount\":\"the allowance. 0 = infinte\",\"token\":\"the asset\"}},\"toVault(address,uint256)\":{\"details\":\"implementations must close external positions and return all related assets to the vault\",\"params\":{\"amount\":\"the amount of tokens to send\",\"token\":\"the ecr20 token to send\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateDescription(string)\":{\"params\":{\"description\":\"new module desciption\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"closeAllPositions()\":{\"notice\":\"closes all positions and returns the funds to the oneToken vault\"},\"closePositions(address)\":{\"notice\":\"closes token positions and returns the funds to the oneToken vault\"},\"constructor\":{\"notice\":\"a strategy is dedicated to exactly one oneToken instance\"},\"execute()\":{\"notice\":\"a controller invokes execute() to trigger automated logic within the strategy.\"},\"executeTransaction(address,uint256,string,bytes)\":{\"notice\":\"Governance can work with collateral and treasury assets. Can swap assets.\"},\"fromVault(address,uint256)\":{\"notice\":\"let's the oneToken controller instance draw funds from the oneToken vault allowance\"},\"init()\":{\"notice\":\"a strategy is dedicated to exactly one oneToken instance and must be re-initializable\"},\"setAllowance(address,uint256)\":{\"notice\":\"gives the oneToken control of tokens deposited in the strategy\"},\"toVault(address,uint256)\":{\"notice\":\"let's the oneToken controller instance send funds to the oneToken vault\"},\"updateDescription(string)\":{\"notice\":\"set a module description\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/strategy/arbitrary/Arbitrary.sol\":\"Arbitrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/_openzeppelin/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"contracts/_openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"contracts/_openzeppelin/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/_openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/common/ICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../oz_modified/ICHIOwnable.sol\\\";\\nimport \\\"../oz_modified/ICHIInitializable.sol\\\";\\nimport \\\"../interface/IERC20Extended.sol\\\";\\nimport \\\"../interface/IICHICommon.sol\\\";\\n\\ncontract ICHICommon is IICHICommon, ICHIOwnable, ICHIInitializable {\\n\\n    uint256 constant PRECISION = 10 ** 18;\\n    uint256 constant INFINITE = uint256(0-1);\\n    address constant NULL_ADDRESS = address(0);\\n    \\n    // @dev internal fingerprints help prevent deployment-time governance errors\\n\\n    bytes32 constant COMPONENT_CONTROLLER = keccak256(abi.encodePacked(\\\"ICHI V1 Controller\\\"));\\n    bytes32 constant COMPONENT_VERSION = keccak256(abi.encodePacked(\\\"ICHI V1 OneToken Implementation\\\"));\\n    bytes32 constant COMPONENT_STRATEGY = keccak256(abi.encodePacked(\\\"ICHI V1 Strategy Implementation\\\"));\\n    bytes32 constant COMPONENT_MINTMASTER = keccak256(abi.encodePacked(\\\"ICHI V1 MintMaster Implementation\\\"));\\n    bytes32 constant COMPONENT_ORACLE = keccak256(abi.encodePacked(\\\"ICHI V1 Oracle Implementation\\\"));\\n    bytes32 constant COMPONENT_VOTERROLL = keccak256(abi.encodePacked(\\\"ICHI V1 VoterRoll Implementation\\\"));\\n    bytes32 constant COMPONENT_FACTORY = keccak256(abi.encodePacked(\\\"ICHI OneToken Factory\\\"));\\n}\\n\",\"keccak256\":\"0x42378732873814c18db826c3ba6ca60976f1669fa646d82563b1482261583c83\",\"license\":\"BUSL-1.1\"},\"contracts/common/ICHIModuleCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IModule.sol\\\";\\nimport \\\"../interface/IOneTokenFactory.sol\\\";\\nimport \\\"../interface/IOneTokenV1Base.sol\\\";\\nimport \\\"./ICHICommon.sol\\\";\\n\\nabstract contract ICHIModuleCommon is IModule, ICHICommon {\\n    \\n    ModuleType public immutable override moduleType;\\n    string public override moduleDescription;\\n    address public immutable override oneTokenFactory;\\n\\n    event ModuleDeployed(address sender, ModuleType moduleType, string description);\\n    event DescriptionUpdated(address sender, string description);\\n   \\n    modifier onlyKnownToken {\\n        require(IOneTokenFactory(oneTokenFactory).isOneToken(msg.sender), \\\"ICHIModuleCommon: msg.sender is not a known oneToken\\\");\\n        _;\\n    }\\n    \\n    modifier onlyTokenOwner (address oneToken) {\\n        require(msg.sender == IOneTokenV1Base(oneToken).owner(), \\\"ICHIModuleCommon: msg.sender is not oneToken owner\\\");\\n        _;\\n    }\\n\\n    modifier onlyModuleOrFactory {\\n        if(!IOneTokenFactory(oneTokenFactory).isModule(msg.sender)) {\\n            require(msg.sender == oneTokenFactory, \\\"ICHIModuleCommon: msg.sender is not module owner, token factory or registed module\\\");\\n        }\\n        _;\\n    }\\n    \\n    /**\\n     @notice modules are bound to the factory at deployment time\\n     @param oneTokenFactory_ factory to bind to\\n     @param moduleType_ type number helps prevent governance errors\\n     @param description_ human-readable, descriptive only\\n     */    \\n    constructor (address oneTokenFactory_, ModuleType moduleType_, string memory description_) {\\n        require(oneTokenFactory_ != NULL_ADDRESS, \\\"ICHIModuleCommon: oneTokenFactory cannot be empty\\\");\\n        require(bytes(description_).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        oneTokenFactory = oneTokenFactory_;\\n        moduleType = moduleType_;\\n        moduleDescription = description_;\\n        emit ModuleDeployed(msg.sender, moduleType_, description_);\\n    }\\n\\n    /**\\n     @notice set a module description\\n     @param description new module desciption\\n     */\\n    function updateDescription(string memory description) external onlyOwner override {\\n        require(bytes(description).length > 0, \\\"ICHIModuleCommon: description cannot be empty\\\");\\n        moduleDescription = description;\\n        emit DescriptionUpdated(msg.sender, description);\\n    }  \\n}\\n\",\"keccak256\":\"0xd2c11af9e25df79014bb16e9a09e5cc3b1fc3552ac47ee55f90d681e558a58b6\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IERC20Extended.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Extended is IERC20 {\\n    \\n    function decimals() external view returns(uint8);\\n    function symbol() external view returns(string memory);\\n    function name() external view returns(string memory);\\n}\\n\",\"keccak256\":\"0x2ca69f362fa17acf5a0871f09ed8c7937a7ab4290d5d107d36d15f21de4b90cf\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHICommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHIOwnable.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IICHICommon is IICHIOwnable, InterfaceCommon {}\\n\",\"keccak256\":\"0xe6cd96a82817180d3b07502d5f9030cb538599311ca618a28fd9abc4ec9f12d3\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\ninterface IICHIOwnable {\\n    \\n    function renounceOwnership() external;\\n    function transferOwnership(address newOwner) external;\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x0106ebef69259a8f6b75ed0bd8cafab30dec9b5845887bb46941f37c93b93018\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IModule.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IModule is IICHICommon { \\n       \\n    function oneTokenFactory() external view returns(address);\\n    function updateDescription(string memory description) external;\\n    function moduleDescription() external view returns(string memory);\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function moduleType() external view returns(ModuleType);\\n}\\n\",\"keccak256\":\"0xe90ce2dc34f907536849d364de54cdddb9b09cb958020972121624d1d6f519e0\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./InterfaceCommon.sol\\\";\\n\\ninterface IOneTokenFactory is InterfaceCommon {\\n\\n    function oneTokenProxyAdmins(address) external returns(address);\\n    function deployOneTokenProxy(\\n        string memory name,\\n        string memory symbol,\\n        address governance, \\n        address version,\\n        address controller,\\n        address mintMaster,              \\n        address memberToken, \\n        address collateral,\\n        address oneTokenOracle\\n    ) \\n        external \\n        returns(address newOneTokenProxy, address proxyAdmin);\\n\\n    function admitModule(address module, ModuleType moduleType, string memory name, string memory url) external;\\n    function updateModule(address module, string memory name, string memory url) external;\\n    function removeModule(address module) external;\\n\\n    function admitForeignToken(address foreignToken, bool collateral, address oracle) external;\\n    function updateForeignToken(address foreignToken, bool collateral) external;\\n    function removeForeignToken(address foreignToken) external;\\n\\n    function assignOracle(address foreignToken, address oracle) external;\\n    function removeOracle(address foreignToken, address oracle) external; \\n\\n    /**\\n     * View functions\\n     */\\n    \\n    function MODULE_TYPE() external view returns(bytes32);\\n\\n    function oneTokenCount() external view returns(uint256);\\n    function oneTokenAtIndex(uint256 index) external view returns(address);\\n    function isOneToken(address oneToken) external view returns(bool);\\n \\n    // modules\\n\\n    function moduleCount() external view returns(uint256);\\n    function moduleAtIndex(uint256 index) external view returns(address module);\\n    function isModule(address module) external view returns(bool);\\n    function isValidModuleType(address module, ModuleType moduleType) external view returns(bool);\\n\\n    // foreign tokens\\n\\n    function foreignTokenCount() external view returns(uint256);\\n    function foreignTokenAtIndex(uint256 index) external view returns(address);\\n    function foreignTokenInfo(address foreignToken) external view returns(bool collateral, uint256 oracleCount);\\n    function foreignTokenOracleCount(address foreignToken) external view returns(uint256);\\n    function foreignTokenOracleAtIndex(address foreignToken, uint256 index) external view returns(address);\\n    function isOracle(address foreignToken, address oracle) external view returns(bool);\\n    function isForeignToken(address foreignToken) external view returns(bool);\\n    function isCollateral(address foreignToken) external view returns(bool);\\n}\",\"keccak256\":\"0x058f27f1dc56c298d2f8ffa88d1fb67dc7c421327089bfb3a77ef9ecf943c6e4\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IOneTokenV1Base.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IICHICommon.sol\\\";\\nimport \\\"./IERC20Extended.sol\\\";\\n\\ninterface IOneTokenV1Base is IICHICommon, IERC20 {\\n    \\n    function init(string memory name_, string memory symbol_, address oneTokenOracle_, address controller_,  address mintMaster_, address memberToken_, address collateral_) external;\\n    function changeController(address controller_) external;\\n    function changeMintMaster(address mintMaster_, address oneTokenOracle) external;\\n    function addAsset(address token, address oracle) external;\\n    function removeAsset(address token) external;\\n    function setStrategy(address token, address strategy, uint256 allowance) external;\\n    function executeStrategy(address token) external;\\n    function removeStrategy(address token) external;\\n    function closeStrategy(address token) external;\\n    function increaseStrategyAllowance(address token, uint256 amount) external;\\n    function decreaseStrategyAllowance(address token, uint256 amount) external;\\n    function setFactory(address newFactory) external;\\n\\n    function MODULE_TYPE() external view returns(bytes32);\\n    function oneTokenFactory() external view returns(address);\\n    function controller() external view returns(address);\\n    function mintMaster() external view returns(address);\\n    function memberToken() external view returns(address);\\n    function assets(address) external view returns(address, address);\\n    function balances(address token) external view returns(uint256 inVault, uint256 inStrategy);\\n    function collateralTokenCount() external view returns(uint256);\\n    function collateralTokenAtIndex(uint256 index) external view returns(address);\\n    function isCollateral(address token) external view returns(bool);\\n    function otherTokenCount() external view  returns(uint256);\\n    function otherTokenAtIndex(uint256 index) external view returns(address); \\n    function isOtherToken(address token) external view returns(bool);\\n    function assetCount() external view returns(uint256);\\n    function assetAtIndex(uint256 index) external view returns(address); \\n    function isAsset(address token) external view returns(bool);\\n}\\n\",\"keccak256\":\"0x1b11cd3a73710c7b8fd77f7cd1e149eea49e8c804305bd77bbebd6deb0017f22\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IModule.sol\\\";\\n\\ninterface IStrategy is IModule {\\n    \\n    function init() external;\\n    function execute() external;\\n    function setAllowance(address token, uint256 amount) external;\\n    function toVault(address token, uint256 amount) external;\\n    function fromVault(address token, uint256 amount) external;\\n    function closeAllPositions() external returns(bool);\\n    function closePositions(address token) external returns(bool success);\\n    function oneToken() external view returns(address);\\n}\\n\",\"keccak256\":\"0x898fbdbcc82758409a2df303bebbfaba5c4aafd8e8bbda163e3200b0b8eab251\",\"license\":\"BUSL-1.1\"},\"contracts/interface/InterfaceCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\ninterface InterfaceCommon {\\n\\n    enum ModuleType { Version, Controller, Strategy, MintMaster, Oracle }\\n\\n}\\n\",\"keccak256\":\"0x818fc764b7da096a438fc9322588d4fbe0fc655d952033a3d2b5d86a863570a2\",\"license\":\"BUSL-1.1\"},\"contracts/oz_modified/ICHIInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../_openzeppelin/utils/Address.sol\\\";\\n\\ncontract ICHIInitializable {\\n\\n    bool private _initialized;\\n    bool private _initializing;\\n\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"ICHIInitializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    modifier initialized {\\n        require(_initialized, \\\"ICHIInitializable: contract is not initialized\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x9d4cb3bf21309bc5621f730a885c9c22e1fc6073f9fcf3857c45c4d9f0ea82bf\",\"license\":\"MIT\"},\"contracts/oz_modified/ICHIOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * @dev Constructor visibility has been removed from the original.\\n * _transferOwnership() has been added to support proxied deployments.\\n * Abstract tag removed from contract block.\\n * Added interface inheritance and override modifiers.\\n * Changed contract identifier in require error messages.\\n */\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../_openzeppelin/utils/Context.sol\\\";\\nimport \\\"../interface/IICHIOwnable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract ICHIOwnable is IICHIOwnable, Context {\\n    \\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n     \\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"ICHIOwnable: caller is not the owner\\\");\\n        _;\\n    }    \\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     * Ineffective for proxied deployed. Use initOwnable.\\n     */\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     @dev initialize proxied deployment\\n     */\\n    function initOwnable() internal {\\n        require(owner() == address(0), \\\"ICHIOwnable: already initialized\\\");\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual override returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual override onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev be sure to call this in the initialization stage of proxied deployment or owner will not be set\\n     */\\n\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"ICHIOwnable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x552664765e88fb3e7949f3ff17f264968e9fca3775e3e7f241ce965129af8658\",\"license\":\"MIT\"},\"contracts/strategy/StrategyCommon.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../interface/IOneTokenFactory.sol\\\";\\nimport \\\"../interface/IStrategy.sol\\\";\\nimport \\\"../interface/IOneTokenV1Base.sol\\\";\\nimport \\\"../_openzeppelin/token/ERC20/IERC20.sol\\\";\\nimport \\\"../_openzeppelin/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"../common/ICHIModuleCommon.sol\\\";\\n\\nabstract contract StrategyCommon is IStrategy, ICHIModuleCommon {\\n\\n    using SafeERC20 for IERC20;\\n\\n    address public override oneToken;\\n    bytes32 constant public override MODULE_TYPE = keccak256(abi.encodePacked(\\\"ICHI V1 Strategy Implementation\\\"));\\n\\n    event StrategyDeployed(address sender, address oneTokenFactory, address oneToken_, string description);\\n    event StrategyInitialized(address sender);\\n    event StrategyExecuted(address indexed sender, address indexed token);\\n    event VaultAllowance(address indexed sender, address indexed token, uint256 amount);\\n    event FromVault(address indexed sender, address indexed token, uint256 amount);\\n    event ToVault(address indexed sender, address indexed token, uint256 amount);\\n\\n    modifier onlyToken {\\n        require(msg.sender == oneToken, \\\"StrategyCommon: initialize from oneToken instance\\\");\\n        _;\\n    }\\n    \\n    /**\\n     @dev oneToken governance has privileges that may be delegated to a controller\\n     */\\n    modifier strategyOwnerTokenOrController {\\n        if(msg.sender != oneToken) {\\n            if(msg.sender != IOneTokenV1Base(oneToken).controller()) {\\n                require(msg.sender == IOneTokenV1Base(oneToken).owner(), \\\"StrategyCommon: not token controller or owner.\\\");\\n            }\\n        }\\n        _;\\n    }\\n\\n    /**\\n     @notice a strategy is dedicated to exactly one oneToken instance\\n     @param oneTokenFactory_ bind this instance to oneTokenFactory instance\\n     @param oneToken_ bind this instance to one oneToken vault\\n     @param description_ metadata has no impact on logic\\n     */\\n    constructor(address oneTokenFactory_, address oneToken_, string memory description_)\\n        ICHIModuleCommon(oneTokenFactory_, ModuleType.Strategy, description_)\\n    {\\n        require(oneToken_ != NULL_ADDRESS, \\\"StrategyCommon: oneToken cannot be NULL\\\");\\n        require(IOneTokenFactory(IOneTokenV1Base(oneToken_).oneTokenFactory()).isOneToken(oneToken_), \\\"StrategyCommon: oneToken is unknown\\\");\\n        oneToken = oneToken_;\\n        emit StrategyDeployed(msg.sender, oneTokenFactory_, oneToken_, description_);\\n    }\\n\\n    /**\\n     @notice a strategy is dedicated to exactly one oneToken instance and must be re-initializable\\n     */\\n    function init() external onlyToken virtual override {\\n        IERC20(oneToken).safeApprove(oneToken, 0);\\n        IERC20(oneToken).safeApprove(oneToken, INFINITE);\\n        emit StrategyInitialized(oneToken);\\n    }\\n\\n    /**\\n     @notice a controller invokes execute() to trigger automated logic within the strategy.\\n     @dev called from oneToken governance or the active controller. Overriding function should emit the event. \\n     */  \\n    function execute() external virtual strategyOwnerTokenOrController override {\\n        // emit StrategyExecuted(msg.sender, oneToken);\\n    }  \\n        \\n    /**\\n     @notice gives the oneToken control of tokens deposited in the strategy\\n     @dev called from oneToken governance or the active controller\\n     @param token the asset\\n     @param amount the allowance. 0 = infinte\\n     */\\n    function setAllowance(address token, uint256 amount) external strategyOwnerTokenOrController override {\\n        if(amount == 0) amount = INFINITE;\\n        IERC20(token).safeApprove(oneToken, 0);\\n        IERC20(token).safeApprove(oneToken, amount);\\n        emit VaultAllowance(msg.sender, token, amount);\\n    }\\n\\n    /**\\n     @notice closes all positions and returns the funds to the oneToken vault\\n     @dev override this function to withdraw funds from external contracts. Return false if any funds are unrecovered.\\n     */\\n    function closeAllPositions() external virtual strategyOwnerTokenOrController override returns(bool success) {\\n        success = _closeAllPositions();\\n    }\\n\\n    /**\\n     @notice closes all positions and returns the funds to the oneToken vault\\n     @dev override this function to withdraw funds from external contracts. Return false if any funds are unrecovered.\\n     */\\n    function _closeAllPositions() internal virtual returns(bool success) {\\n        uint256 assetCount;\\n        success = true;\\n        assetCount = IOneTokenV1Base(oneToken).assetCount();\\n        for(uint256 i=0; i < assetCount; i++) {\\n            address thisAsset = IOneTokenV1Base(oneToken).assetAtIndex(i);\\n            closePositions(thisAsset);\\n        }\\n    }\\n\\n    /**\\n     @notice closes token positions and returns the funds to the oneToken vault\\n     @dev override this function to redeem and withdraw related funds from external contracts. Return false if any funds are unrecovered. \\n     @param token asset to recover\\n     @param success true, complete success, false, 1 or more failed operations\\n     */\\n    function closePositions(address token) public strategyOwnerTokenOrController override virtual returns(bool success) {\\n        // this naive process returns funds on hand.\\n        // override this to explicitly close external positions and return false if 1 or more positions cannot be closed at this time.\\n        success = true;\\n        uint256 strategyBalance = IERC20(token).balanceOf(address(this));\\n        if(strategyBalance > 0) {\\n            _toVault(token, strategyBalance);\\n        }\\n    }\\n\\n    /**\\n     @notice let's the oneToken controller instance send funds to the oneToken vault\\n     @dev implementations must close external positions and return all related assets to the vault\\n     @param token the ecr20 token to send\\n     @param amount the amount of tokens to send\\n     */\\n    function toVault(address token, uint256 amount) external strategyOwnerTokenOrController override {\\n        _toVault(token, amount);\\n    }\\n\\n    /**\\n     @notice close external positions send all related funds to the oneToken vault\\n     @param token the ecr20 token to send\\n     @param amount the amount of tokens to send\\n     */\\n    function _toVault(address token, uint256 amount) internal {\\n        IERC20(token).safeTransfer(oneToken, amount);\\n        emit ToVault(msg.sender, token, amount);\\n    }\\n\\n    /**\\n     @notice let's the oneToken controller instance draw funds from the oneToken vault allowance\\n     @param token the ecr20 token to send\\n     @param amount the amount of tokens to send\\n     */\\n    function fromVault(address token, uint256 amount) external strategyOwnerTokenOrController override {\\n        _fromVault(token, amount);\\n    }\\n\\n    /**\\n     @notice draw funds from the oneToken vault\\n     @param token the ecr20 token to send\\n     @param amount the amount of tokens to send\\n     */\\n    function _fromVault(address token, uint256 amount) internal {\\n        IERC20(token).safeTransferFrom(oneToken, address(this), amount);\\n        emit FromVault(msg.sender, token, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x6bf02d068d2d26fdeec4bf2f5711a95f503136a7800b4ca1599d67087c73a819\",\"license\":\"BUSL-1.1\"},\"contracts/strategy/arbitrary/Arbitrary.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../StrategyCommon.sol\\\";\\n\\ncontract Arbitrary is StrategyCommon {\\n\\n    /**\\n     @notice a strategy is dedicated to exactly one oneToken instance\\n     @param oneTokenFactory_ bind this instance to oneTokenFactory instance\\n     @param oneToken_ bind this instance to one oneToken vault\\n     @param description_ metadata has no impact on logic\\n     */\\n\\n    constructor(address oneTokenFactory_, address oneToken_, string memory description_) \\n        StrategyCommon(oneTokenFactory_, oneToken_, description_)\\n    {}\\n\\n\\n    /**\\n    @notice Governance can work with collateral and treasury assets. Can swap assets.\\n    @param target address/smart contract you are interacting with\\n    @param value msg.value (amount of eth in WEI you are sending. Most of the time it is 0)\\n    @param signature the function signature\\n    @param data abi-encodeded bytecode of the parameter values to send\\n    */\\n    function executeTransaction(address target, uint256 value, string memory signature, bytes memory data) external onlyOwner returns (bytes memory) {\\n        bytes memory callData;\\n\\n        if (bytes(signature).length == 0) {\\n            callData = data;\\n        } else {\\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\\n        }\\n\\n        // solium-disable-next-line security/no-call-value\\n        (bool success, bytes memory returnData) = target.call{ value: value }(callData);\\n        require(success, \\\"OneTokenV1::executeTransaction: Transaction execution reverted.\\\");\\n        return returnData;\\n    }\\n}\\n\",\"keccak256\":\"0x28c5c7152bf0f1e68b6a5b79398b7c729c8ba1a3a7ca5af61f184f4bf87535e7\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200257e3803806200257e833981810160405260608110156200003757600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b506040525050508282828260028262000110336200050e60201b60201c565b6001600160a01b038316620001575760405162461bcd60e51b81526004018080602001828103825260318152602001806200254d6031913960400191505060405180910390fd5b6000815111620001995760405162461bcd60e51b815260040180806020018281038252602d815260200180620024ac602d913960400191505060405180910390fd5b6001600160601b0319606084901b1660a052816004811115620001b857fe5b6080816004811115620001c757fe5b60f81b9052508051620001e2906001906020840190620005b0565b507f2e09cb9dd254b20150f5e6b358e7aabf9802b241ddf84609686d8e4b0d2b96b833838360405180846001600160a01b031681526020018360048111156200022757fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620002675781810151838201526020016200024d565b50505050905090810190601f168015620002955780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050506001600160a01b038216620002ee5760405162461bcd60e51b8152600401808060200182810382526027815260200180620024fc6027913960400191505060405180910390fd5b816001600160a01b031663a2729c236040518163ffffffff1660e01b815260040160206040518083038186803b1580156200032857600080fd5b505afa1580156200033d573d6000803e3d6000fd5b505050506040513d60208110156200035457600080fd5b5051604080516309de917f60e31b81526001600160a01b03858116600483015291519190921691634ef48bf8916024808301926020929190829003018186803b158015620003a157600080fd5b505afa158015620003b6573d6000803e3d6000fd5b505050506040513d6020811015620003cd57600080fd5b50516200040c5760405162461bcd60e51b8152600401808060200182810382526023815260200180620024d96023913960400191505060405180910390fd5b81600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055507fd5ec92c8409c5f8b1fe56ba531c98dd4d78981b4ab6cb79f702d9218fceb72c13384848460405180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620004c4578181015183820152602001620004aa565b50505050905090810190601f168015620004f25780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050506200065c565b6001600160a01b038116620005555760405162461bcd60e51b815260040180806020018281038252602a81526020018062002523602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620005e8576000855562000633565b82601f106200060357805160ff191683800117855562000633565b8280016001018555821562000633579182015b828111156200063357825182559160200191906001019062000616565b506200064192915062000645565b5090565b5b8082111562000641576000815560010162000646565b60805160f81c60a05160601c611e266200068660003980611004525080610dbe5250611e266000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063b5966db811610071578063b5966db8146103ea578063caa6241f146103f2578063e1c7392a1461041e578063e735b48a14610426578063f2fde38b146104cc5761010b565b80638da5cb5b146103ae578063910ed6ec146103d2578063a2729c23146103da578063a27eccc1146103e25761010b565b80635937caf0116100de5780635937caf01461033b57806361461954146103755780636465e69f1461037d578063715018a6146103a65761010b565b80632224fa2514610110578063310ec4a7146102c75780634e68897e146102f55780635775029f14610321575b600080fd5b6102526004803603608081101561012657600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561015657600080fd5b82018360208201111561016857600080fd5b8035906020019184600183028401116401000000008311171561018a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156101dd57600080fd5b8201836020820111156101ef57600080fd5b8035906020019184600183028401116401000000008311171561021157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104f2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028c578181015183820152602001610274565b50505050905090810190601f1680156102b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f3600480360360408110156102dd57600080fd5b506001600160a01b0381351690602001356106d9565b005b6102f36004803603604081101561030b57600080fd5b506001600160a01b0381351690602001356108b7565b610329610a20565b60408051918252519081900360200190f35b6103616004803603602081101561035157600080fd5b50356001600160a01b0316610a6a565b604080519115158252519081900360200190f35b6102f3610c5f565b610385610dbc565b6040518082600481111561039557fe5b815260200191505060405180910390f35b6102f3610de0565b6103b6610e88565b604080516001600160a01b039092168252519081900360200190f35b610361610e97565b6103b6611002565b6103b6611026565b610252611035565b6102f36004803603604081101561040857600080fd5b506001600160a01b0381351690602001356110c2565b6102f3611227565b6102f36004803603602081101561043c57600080fd5b81019060208101813564010000000081111561045757600080fd5b82018360208201111561046957600080fd5b8035906020019184600183028401116401000000008311171561048b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112e2945050505050565b6102f3600480360360208110156104e257600080fd5b50356001600160a01b0316611441565b60606104fc6114ab565b6001600160a01b031661050d610e88565b6001600160a01b0316146105525760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b60608351600014156105655750816105e8565b83805190602001208360405160200180836001600160e01b031916815260040182805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290505b600080876001600160a01b031687846040518082805190602001908083835b602083106106265780518252601f199092019160209182019101610607565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610688576040519150601f19603f3d011682016040523d82523d6000602084013e61068d565b606091505b5091509150816106ce5760405162461bcd60e51b815260040180806020018281038252603f815260200180611d21603f913960400191505060405180910390fd5b979650505050505050565b6002546001600160a01b0316331461083457600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50516001600160a01b0316331461083457600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d60208110156107ec57600080fd5b50516001600160a01b031633146108345760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b8061083e57506000195b600254610859906001600160a01b03848116911660006114af565b600254610873906001600160a01b038481169116836114af565b6040805182815290516001600160a01b0384169133917f667b90566f78a7a406a133b1a8b9e1a3c9c0bef9a7e394b89ed9e0bd4fb0369f9181900360200190a35050565b6002546001600160a01b03163314610a1257600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d602081101561094157600080fd5b50516001600160a01b03163314610a1257600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a057600080fd5b505afa1580156109b4573d6000803e3d6000fd5b505050506040513d60208110156109ca57600080fd5b50516001600160a01b03163314610a125760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610a1c82826115c7565b5050565b60405160200180807f4943484920563120537472617465677920496d706c656d656e746174696f6e00815250601f0190506040516020818303038152906040528051906020012081565b6002546000906001600160a01b03163314610bc857600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610acd57600080fd5b505afa158015610ae1573d6000803e3d6000fd5b505050506040513d6020811015610af757600080fd5b50516001600160a01b03163314610bc857600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5657600080fd5b505afa158015610b6a573d6000803e3d6000fd5b505050506040513d6020811015610b8057600080fd5b50516001600160a01b03163314610bc85760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b600190506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c1b57600080fd5b505afa158015610c2f573d6000803e3d6000fd5b505050506040513d6020811015610c4557600080fd5b505190508015610c5957610c5983826115c7565b50919050565b6002546001600160a01b03163314610dba57600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610cbf57600080fd5b505afa158015610cd3573d6000803e3d6000fd5b505050506040513d6020811015610ce957600080fd5b50516001600160a01b03163314610dba57600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4857600080fd5b505afa158015610d5c573d6000803e3d6000fd5b505050506040513d6020811015610d7257600080fd5b50516001600160a01b03163314610dba5760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b610de86114ab565b6001600160a01b0316610df9610e88565b6001600160a01b031614610e3e5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546000906001600160a01b03163314610ff557600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610efa57600080fd5b505afa158015610f0e573d6000803e3d6000fd5b505050506040513d6020811015610f2457600080fd5b50516001600160a01b03163314610ff557600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8357600080fd5b505afa158015610f97573d6000803e3d6000fd5b505050506040513d6020811015610fad57600080fd5b50516001600160a01b03163314610ff55760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610ffd611625565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156110ba5780601f1061108f576101008083540402835291602001916110ba565b820191906000526020600020905b81548152906001019060200180831161109d57829003601f168201915b505050505081565b6002546001600160a01b0316331461121d57600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561112257600080fd5b505afa158015611136573d6000803e3d6000fd5b505050506040513d602081101561114c57600080fd5b50516001600160a01b0316331461121d57600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ab57600080fd5b505afa1580156111bf573d6000803e3d6000fd5b505050506040513d60208110156111d557600080fd5b50516001600160a01b0316331461121d5760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610a1c828261173b565b6002546001600160a01b031633146112705760405162461bcd60e51b8152600401808060200182810382526031815260200180611d606031913960400191505060405180910390fd5b600254611288906001600160a01b03168060006114af565b6002546112a1906001600160a01b0316806000196114af565b600254604080516001600160a01b039092168252517f6da543b7e069e739aceab0666be4461aee5c928be612f2a07b8c3a04f8b6aef29181900360200190a1565b6112ea6114ab565b6001600160a01b03166112fb610e88565b6001600160a01b0316146113405760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b60008151116113805760405162461bcd60e51b815260040180806020018281038252602d815260200180611c52602d913960400191505060405180910390fd5b8051611393906001906020840190611bb0565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114035781810151838201526020016113eb565b50505050905090810190601f1680156114305780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6114496114ab565b6001600160a01b031661145a610e88565b6001600160a01b03161461149f5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b6114a88161179a565b50565b3390565b801580611535575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561150757600080fd5b505afa15801561151b573d6000803e3d6000fd5b505050506040513d602081101561153157600080fd5b5051155b6115705760405162461bcd60e51b8152600401808060200182810382526036815260200180611dbb6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526115c290849061183a565b505050565b6002546115e1906001600160a01b038481169116836118eb565b6040805182815290516001600160a01b0384169133917f8c35b638c65da6f9fc25ab3629859aee55ae216ad0a2a5a25380bb272515a4ab9181900360200190a35050565b60025460408051633abf9e9d60e21b815290516001926000926001600160a01b039091169163eafe7a7491600480820192602092909190829003018186803b15801561167057600080fd5b505afa158015611684573d6000803e3d6000fd5b505050506040513d602081101561169a57600080fd5b5051905060005b81811015611736576002546040805163262a0ab360e11b81526004810184905290516000926001600160a01b031691634c541566916024808301926020929190829003018186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d602081101561171f57600080fd5b5051905061172c81610a6a565b50506001016116a1565b505090565b600254611756906001600160a01b038481169116308461193d565b6040805182815290516001600160a01b0384169133917ff2f5ddbff4ce2ccb51d4d3e63c2c18fda658a53200aa4ffed328b0eaac171f189181900360200190a35050565b6001600160a01b0381166117df5760405162461bcd60e51b815260040180806020018281038252602a815260200180611cc9602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061188f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661199d9092919063ffffffff16565b8051909150156115c2578080602001905160208110156118ae57600080fd5b50516115c25760405162461bcd60e51b815260040180806020018281038252602a815260200180611d91602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526115c290849061183a565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261199790859061183a565b50505050565b60606119ac84846000856119b6565b90505b9392505050565b6060824710156119f75760405162461bcd60e51b8152600401808060200182810382526026815260200180611c7f6026913960400191505060405180910390fd5b611a0085611b06565b611a51576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611a8f5780518252601f199092019160209182019101611a70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611af1576040519150601f19603f3d011682016040523d82523d6000602084013e611af6565b606091505b50915091506106ce828286611b0c565b3b151590565b60608315611b1b5750816119af565b825115611b2b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b75578181015183820152602001611b5d565b50505050905090810190601f168015611ba25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611be65760008555611c2c565b82601f10611bff57805160ff1916838001178555611c2c565b82800160010185558215611c2c579182015b82811115611c2c578251825591602001919060010190611c11565b50611c38929150611c3c565b5090565b5b80821115611c385760008155600101611c3d56fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374726174656779436f6d6d6f6e3a206e6f7420746f6b656e20636f6e74726f6c6c6572206f72206f776e65722e4f6e65546f6b656e56313a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e2072657665727465642e5374726174656779436f6d6d6f6e3a20696e697469616c697a652066726f6d206f6e65546f6b656e20696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122036c1b3cfe3fdd5a10a46f5a9c3d69ded420d46200bed81ab61a020e527a21a4e64736f6c63430007060033494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d7074795374726174656779436f6d6d6f6e3a206f6e65546f6b656e20697320756e6b6e6f776e5374726174656779436f6d6d6f6e3a206f6e65546f6b656e2063616e6e6f74206265204e554c4c494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373494348494d6f64756c65436f6d6d6f6e3a206f6e65546f6b656e466163746f72792063616e6e6f7420626520656d707479",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063b5966db811610071578063b5966db8146103ea578063caa6241f146103f2578063e1c7392a1461041e578063e735b48a14610426578063f2fde38b146104cc5761010b565b80638da5cb5b146103ae578063910ed6ec146103d2578063a2729c23146103da578063a27eccc1146103e25761010b565b80635937caf0116100de5780635937caf01461033b57806361461954146103755780636465e69f1461037d578063715018a6146103a65761010b565b80632224fa2514610110578063310ec4a7146102c75780634e68897e146102f55780635775029f14610321575b600080fd5b6102526004803603608081101561012657600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561015657600080fd5b82018360208201111561016857600080fd5b8035906020019184600183028401116401000000008311171561018a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156101dd57600080fd5b8201836020820111156101ef57600080fd5b8035906020019184600183028401116401000000008311171561021157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104f2945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028c578181015183820152602001610274565b50505050905090810190601f1680156102b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f3600480360360408110156102dd57600080fd5b506001600160a01b0381351690602001356106d9565b005b6102f36004803603604081101561030b57600080fd5b506001600160a01b0381351690602001356108b7565b610329610a20565b60408051918252519081900360200190f35b6103616004803603602081101561035157600080fd5b50356001600160a01b0316610a6a565b604080519115158252519081900360200190f35b6102f3610c5f565b610385610dbc565b6040518082600481111561039557fe5b815260200191505060405180910390f35b6102f3610de0565b6103b6610e88565b604080516001600160a01b039092168252519081900360200190f35b610361610e97565b6103b6611002565b6103b6611026565b610252611035565b6102f36004803603604081101561040857600080fd5b506001600160a01b0381351690602001356110c2565b6102f3611227565b6102f36004803603602081101561043c57600080fd5b81019060208101813564010000000081111561045757600080fd5b82018360208201111561046957600080fd5b8035906020019184600183028401116401000000008311171561048b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112e2945050505050565b6102f3600480360360208110156104e257600080fd5b50356001600160a01b0316611441565b60606104fc6114ab565b6001600160a01b031661050d610e88565b6001600160a01b0316146105525760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b60608351600014156105655750816105e8565b83805190602001208360405160200180836001600160e01b031916815260040182805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290505b600080876001600160a01b031687846040518082805190602001908083835b602083106106265780518252601f199092019160209182019101610607565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610688576040519150601f19603f3d011682016040523d82523d6000602084013e61068d565b606091505b5091509150816106ce5760405162461bcd60e51b815260040180806020018281038252603f815260200180611d21603f913960400191505060405180910390fd5b979650505050505050565b6002546001600160a01b0316331461083457600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50516001600160a01b0316331461083457600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d60208110156107ec57600080fd5b50516001600160a01b031633146108345760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b8061083e57506000195b600254610859906001600160a01b03848116911660006114af565b600254610873906001600160a01b038481169116836114af565b6040805182815290516001600160a01b0384169133917f667b90566f78a7a406a133b1a8b9e1a3c9c0bef9a7e394b89ed9e0bd4fb0369f9181900360200190a35050565b6002546001600160a01b03163314610a1257600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d602081101561094157600080fd5b50516001600160a01b03163314610a1257600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a057600080fd5b505afa1580156109b4573d6000803e3d6000fd5b505050506040513d60208110156109ca57600080fd5b50516001600160a01b03163314610a125760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610a1c82826115c7565b5050565b60405160200180807f4943484920563120537472617465677920496d706c656d656e746174696f6e00815250601f0190506040516020818303038152906040528051906020012081565b6002546000906001600160a01b03163314610bc857600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610acd57600080fd5b505afa158015610ae1573d6000803e3d6000fd5b505050506040513d6020811015610af757600080fd5b50516001600160a01b03163314610bc857600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5657600080fd5b505afa158015610b6a573d6000803e3d6000fd5b505050506040513d6020811015610b8057600080fd5b50516001600160a01b03163314610bc85760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b600190506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c1b57600080fd5b505afa158015610c2f573d6000803e3d6000fd5b505050506040513d6020811015610c4557600080fd5b505190508015610c5957610c5983826115c7565b50919050565b6002546001600160a01b03163314610dba57600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610cbf57600080fd5b505afa158015610cd3573d6000803e3d6000fd5b505050506040513d6020811015610ce957600080fd5b50516001600160a01b03163314610dba57600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4857600080fd5b505afa158015610d5c573d6000803e3d6000fd5b505050506040513d6020811015610d7257600080fd5b50516001600160a01b03163314610dba5760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000081565b610de86114ab565b6001600160a01b0316610df9610e88565b6001600160a01b031614610e3e5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546000906001600160a01b03163314610ff557600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610efa57600080fd5b505afa158015610f0e573d6000803e3d6000fd5b505050506040513d6020811015610f2457600080fd5b50516001600160a01b03163314610ff557600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8357600080fd5b505afa158015610f97573d6000803e3d6000fd5b505050506040513d6020811015610fad57600080fd5b50516001600160a01b03163314610ff55760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610ffd611625565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156110ba5780601f1061108f576101008083540402835291602001916110ba565b820191906000526020600020905b81548152906001019060200180831161109d57829003601f168201915b505050505081565b6002546001600160a01b0316331461121d57600260009054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561112257600080fd5b505afa158015611136573d6000803e3d6000fd5b505050506040513d602081101561114c57600080fd5b50516001600160a01b0316331461121d57600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ab57600080fd5b505afa1580156111bf573d6000803e3d6000fd5b505050506040513d60208110156111d557600080fd5b50516001600160a01b0316331461121d5760405162461bcd60e51b815260040180806020018281038252602e815260200180611cf3602e913960400191505060405180910390fd5b610a1c828261173b565b6002546001600160a01b031633146112705760405162461bcd60e51b8152600401808060200182810382526031815260200180611d606031913960400191505060405180910390fd5b600254611288906001600160a01b03168060006114af565b6002546112a1906001600160a01b0316806000196114af565b600254604080516001600160a01b039092168252517f6da543b7e069e739aceab0666be4461aee5c928be612f2a07b8c3a04f8b6aef29181900360200190a1565b6112ea6114ab565b6001600160a01b03166112fb610e88565b6001600160a01b0316146113405760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b60008151116113805760405162461bcd60e51b815260040180806020018281038252602d815260200180611c52602d913960400191505060405180910390fd5b8051611393906001906020840190611bb0565b507f37cc8c6ced0cbc4d440fcfa810a2f09f40b8f0127c3656103edf26b3d93e0ec1338260405180836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114035781810151838201526020016113eb565b50505050905090810190601f1680156114305780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b6114496114ab565b6001600160a01b031661145a610e88565b6001600160a01b03161461149f5760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca56024913960400191505060405180910390fd5b6114a88161179a565b50565b3390565b801580611535575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561150757600080fd5b505afa15801561151b573d6000803e3d6000fd5b505050506040513d602081101561153157600080fd5b5051155b6115705760405162461bcd60e51b8152600401808060200182810382526036815260200180611dbb6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526115c290849061183a565b505050565b6002546115e1906001600160a01b038481169116836118eb565b6040805182815290516001600160a01b0384169133917f8c35b638c65da6f9fc25ab3629859aee55ae216ad0a2a5a25380bb272515a4ab9181900360200190a35050565b60025460408051633abf9e9d60e21b815290516001926000926001600160a01b039091169163eafe7a7491600480820192602092909190829003018186803b15801561167057600080fd5b505afa158015611684573d6000803e3d6000fd5b505050506040513d602081101561169a57600080fd5b5051905060005b81811015611736576002546040805163262a0ab360e11b81526004810184905290516000926001600160a01b031691634c541566916024808301926020929190829003018186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d602081101561171f57600080fd5b5051905061172c81610a6a565b50506001016116a1565b505090565b600254611756906001600160a01b038481169116308461193d565b6040805182815290516001600160a01b0384169133917ff2f5ddbff4ce2ccb51d4d3e63c2c18fda658a53200aa4ffed328b0eaac171f189181900360200190a35050565b6001600160a01b0381166117df5760405162461bcd60e51b815260040180806020018281038252602a815260200180611cc9602a913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061188f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661199d9092919063ffffffff16565b8051909150156115c2578080602001905160208110156118ae57600080fd5b50516115c25760405162461bcd60e51b815260040180806020018281038252602a815260200180611d91602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526115c290849061183a565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261199790859061183a565b50505050565b60606119ac84846000856119b6565b90505b9392505050565b6060824710156119f75760405162461bcd60e51b8152600401808060200182810382526026815260200180611c7f6026913960400191505060405180910390fd5b611a0085611b06565b611a51576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611a8f5780518252601f199092019160209182019101611a70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611af1576040519150601f19603f3d011682016040523d82523d6000602084013e611af6565b606091505b50915091506106ce828286611b0c565b3b151590565b60608315611b1b5750816119af565b825115611b2b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b75578181015183820152602001611b5d565b50505050905090810190601f168015611ba25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611be65760008555611c2c565b82601f10611bff57805160ff1916838001178555611c2c565b82800160010185558215611c2c579182015b82811115611c2c578251825591602001919060010190611c11565b50611c38929150611c3c565b5090565b5b80821115611c385760008155600101611c3d56fe494348494d6f64756c65436f6d6d6f6e3a206465736372697074696f6e2063616e6e6f7420626520656d707479416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c494348494f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572494348494f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374726174656779436f6d6d6f6e3a206e6f7420746f6b656e20636f6e74726f6c6c6572206f72206f776e65722e4f6e65546f6b656e56313a3a657865637574655472616e73616374696f6e3a205472616e73616374696f6e20657865637574696f6e2072657665727465642e5374726174656779436f6d6d6f6e3a20696e697469616c697a652066726f6d206f6e65546f6b656e20696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122036c1b3cfe3fdd5a10a46f5a9c3d69ded420d46200bed81ab61a020e527a21a4e64736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "closeAllPositions()": {
        "details": "override this function to withdraw funds from external contracts. Return false if any funds are unrecovered."
      },
      "closePositions(address)": {
        "details": "override this function to redeem and withdraw related funds from external contracts. Return false if any funds are unrecovered. ",
        "params": {
          "success": "true, complete success, false, 1 or more failed operations",
          "token": "asset to recover"
        }
      },
      "constructor": {
        "params": {
          "description_": "metadata has no impact on logic",
          "oneTokenFactory_": "bind this instance to oneTokenFactory instance",
          "oneToken_": "bind this instance to one oneToken vault"
        }
      },
      "execute()": {
        "details": "called from oneToken governance or the active controller. Overriding function should emit the event. "
      },
      "executeTransaction(address,uint256,string,bytes)": {
        "params": {
          "data": "abi-encodeded bytecode of the parameter values to send",
          "signature": "the function signature",
          "target": "address/smart contract you are interacting with",
          "value": "msg.value (amount of eth in WEI you are sending. Most of the time it is 0)"
        }
      },
      "fromVault(address,uint256)": {
        "params": {
          "amount": "the amount of tokens to send",
          "token": "the ecr20 token to send"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAllowance(address,uint256)": {
        "details": "called from oneToken governance or the active controller",
        "params": {
          "amount": "the allowance. 0 = infinte",
          "token": "the asset"
        }
      },
      "toVault(address,uint256)": {
        "details": "implementations must close external positions and return all related assets to the vault",
        "params": {
          "amount": "the amount of tokens to send",
          "token": "the ecr20 token to send"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateDescription(string)": {
        "params": {
          "description": "new module desciption"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "closeAllPositions()": {
        "notice": "closes all positions and returns the funds to the oneToken vault"
      },
      "closePositions(address)": {
        "notice": "closes token positions and returns the funds to the oneToken vault"
      },
      "constructor": {
        "notice": "a strategy is dedicated to exactly one oneToken instance"
      },
      "execute()": {
        "notice": "a controller invokes execute() to trigger automated logic within the strategy."
      },
      "executeTransaction(address,uint256,string,bytes)": {
        "notice": "Governance can work with collateral and treasury assets. Can swap assets."
      },
      "fromVault(address,uint256)": {
        "notice": "let's the oneToken controller instance draw funds from the oneToken vault allowance"
      },
      "init()": {
        "notice": "a strategy is dedicated to exactly one oneToken instance and must be re-initializable"
      },
      "setAllowance(address,uint256)": {
        "notice": "gives the oneToken control of tokens deposited in the strategy"
      },
      "toVault(address,uint256)": {
        "notice": "let's the oneToken controller instance send funds to the oneToken vault"
      },
      "updateDescription(string)": {
        "notice": "set a module description"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14596,
        "contract": "contracts/strategy/arbitrary/Arbitrary.sol:Arbitrary",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14520,
        "contract": "contracts/strategy/arbitrary/Arbitrary.sol:Arbitrary",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 14522,
        "contract": "contracts/strategy/arbitrary/Arbitrary.sol:Arbitrary",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7373,
        "contract": "contracts/strategy/arbitrary/Arbitrary.sol:Arbitrary",
        "label": "moduleDescription",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 14739,
        "contract": "contracts/strategy/arbitrary/Arbitrary.sol:Arbitrary",
        "label": "oneToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}